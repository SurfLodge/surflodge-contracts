{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "address[]",
								"name": "assets",
								"type": "address[]"
							},
							{
								"internalType": "uint256[]",
								"name": "minAmountsOut",
								"type": "uint256[]"
							},
							{
								"internalType": "bytes",
								"name": "userData",
								"type": "bytes"
							},
							{
								"internalType": "bool",
								"name": "toInternalBalance",
								"type": "bool"
							}
						],
						"internalType": "struct Vault.ExitPoolRequest",
						"name": "request",
						"type": "tuple"
					}
				],
				"name": "exitPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					}
				],
				"name": "getPoolTokens",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "tokens",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "balances",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "lastChangeBlock",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "address[]",
								"name": "assets",
								"type": "address[]"
							},
							{
								"internalType": "uint256[]",
								"name": "maxAmountsIn",
								"type": "uint256[]"
							},
							{
								"internalType": "bytes",
								"name": "userData",
								"type": "bytes"
							},
							{
								"internalType": "bool",
								"name": "fromInternalBalance",
								"type": "bool"
							}
						],
						"internalType": "struct Vault.JoinPoolRequest",
						"name": "request",
						"type": "tuple"
					}
				],
				"name": "joinPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CooperProxy.sol": "Vault"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CooperProxy.sol": {
			"keccak256": "0x8b7a9eaddb14b2356ad8f1ec1d10613590640a98f3455bba40696a4832ed4841",
			"urls": [
				"bzz-raw://a90a51ac3a1c22c57591381cbb960f5c4da28b116bc131731b83f06dddf3382c",
				"dweb:/ipfs/QmQ7FsvJmjw959W1h8P93nuWQU3nt563taSgBiG4dhV8e8"
			]
		}
	},
	"version": 1
}