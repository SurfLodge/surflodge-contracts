{
	"id": "1d77a50138e38be927fdf1bbe89f26ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Authorizer.sol": {
				"content": "\r\npragma solidity ^0.7.0;\r\n\r\ninterface IAuthorizer {\r\n    /**\r\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\r\n     */\r\n    function canPerform(\r\n        bytes32 actionId,\r\n        address account,\r\n        address where\r\n    ) external view returns (bool);\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\r\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\r\n * types.\r\n *\r\n * This concept is unrelated to a Pool's Asset Managers.\r\n */\r\ninterface IAsset {\r\n    // solhint-disable-previous-line no-empty-blocks\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n// solhint-disable\r\n\r\n/**\r\n * @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\r\n * supported.\r\n */\r\nfunction _require(bool condition, uint256 errorCode) pure {\r\n    if (!condition) _revert(errorCode);\r\n}\r\n\r\n/**\r\n * @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\r\n */\r\nfunction _revert(uint256 errorCode) pure {\r\n    // We're going to dynamically create a revert string based on the error code, with the following format:\r\n    // 'BAL#{errorCode}'\r\n    // where the code is left-padded with zeroes to three digits (so they range from 000 to 999).\r\n    //\r\n    // We don't have revert strings embedded in the contract to save bytecode size: it takes much less space to store a\r\n    // number (8 to 16 bits) than the individual string characters.\r\n    //\r\n    // The dynamic string creation algorithm that follows could be implemented in Solidity, but assembly allows for a\r\n    // much denser implementation, again saving bytecode size. Given this function unconditionally reverts, this is a\r\n    // safe place to rely on it without worrying about how its usage might affect e.g. memory contents.\r\n    assembly {\r\n        // First, we need to compute the ASCII representation of the error code. We assume that it is in the 0-999\r\n        // range, so we only need to convert three digits. To convert the digits to ASCII, we add 0x30, the value for\r\n        // the '0' character.\r\n\r\n        let units := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let tenths := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let hundreds := add(mod(errorCode, 10), 0x30)\r\n\r\n        // With the individual characters, we can now construct the full string. The \"BAL#\" part is a known constant\r\n        // (0x42414c23): we simply shift this by 24 (to provide space for the 3 bytes of the error code), and add the\r\n        // characters to it, each shifted by a multiple of 8.\r\n        // The revert reason is then shifted left by 200 bits (256 minus the length of the string, 7 characters * 8 bits\r\n        // per character = 56) to locate it in the most significant part of the 256 slot (the beginning of a byte\r\n        // array).\r\n\r\n        let revertReason := shl(200, add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))))\r\n\r\n        // We can now encode the reason in memory, which can be safely overwritten as we're about to revert. The encoded\r\n        // message will have the following layout:\r\n        // [ revert reason identifier ] [ string location offset ] [ string length ] [ string contents ]\r\n\r\n        // The Solidity revert reason identifier is 0x08c739a0, the function selector of the Error(string) function. We\r\n        // also write zeroes to the next 28 bytes of memory, but those are about to be overwritten.\r\n        mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\r\n        // Next is the offset to the location of the string, which will be placed immediately after (20 bytes away).\r\n        mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020)\r\n        // The string length is fixed: 7 characters.\r\n        mstore(0x24, 7)\r\n        // Finally, the string itself is stored.\r\n        mstore(0x44, revertReason)\r\n\r\n        // Even if the string is only 7 bytes long, we need to return a full 32 byte slot containing it. The length of\r\n        // the encoded message is therefore 4 + 32 + 32 + 32 = 100.\r\n        revert(0, 100)\r\n    }\r\n}\r\n\r\nlibrary Errors {\r\n    // Math\r\n    uint256 internal constant ADD_OVERFLOW = 0;\r\n    uint256 internal constant SUB_OVERFLOW = 1;\r\n    uint256 internal constant SUB_UNDERFLOW = 2;\r\n    uint256 internal constant MUL_OVERFLOW = 3;\r\n    uint256 internal constant ZERO_DIVISION = 4;\r\n    uint256 internal constant DIV_INTERNAL = 5;\r\n    uint256 internal constant X_OUT_OF_BOUNDS = 6;\r\n    uint256 internal constant Y_OUT_OF_BOUNDS = 7;\r\n    uint256 internal constant PRODUCT_OUT_OF_BOUNDS = 8;\r\n    uint256 internal constant INVALID_EXPONENT = 9;\r\n\r\n    // Input\r\n    uint256 internal constant OUT_OF_BOUNDS = 100;\r\n    uint256 internal constant UNSORTED_ARRAY = 101;\r\n    uint256 internal constant UNSORTED_TOKENS = 102;\r\n    uint256 internal constant INPUT_LENGTH_MISMATCH = 103;\r\n    uint256 internal constant ZERO_TOKEN = 104;\r\n\r\n    // Shared pools\r\n    uint256 internal constant MIN_TOKENS = 200;\r\n    uint256 internal constant MAX_TOKENS = 201;\r\n    uint256 internal constant MAX_SWAP_FEE_PERCENTAGE = 202;\r\n    uint256 internal constant MIN_SWAP_FEE_PERCENTAGE = 203;\r\n    uint256 internal constant MINIMUM_BPT = 204;\r\n    uint256 internal constant CALLER_NOT_VAULT = 205;\r\n    uint256 internal constant UNINITIALIZED = 206;\r\n    uint256 internal constant BPT_IN_MAX_AMOUNT = 207;\r\n    uint256 internal constant BPT_OUT_MIN_AMOUNT = 208;\r\n    uint256 internal constant EXPIRED_PERMIT = 209;\r\n\r\n    // Pools\r\n    uint256 internal constant MIN_AMP = 300;\r\n    uint256 internal constant MAX_AMP = 301;\r\n    uint256 internal constant MIN_WEIGHT = 302;\r\n    uint256 internal constant MAX_STABLE_TOKENS = 303;\r\n    uint256 internal constant MAX_IN_RATIO = 304;\r\n    uint256 internal constant MAX_OUT_RATIO = 305;\r\n    uint256 internal constant MIN_BPT_IN_FOR_TOKEN_OUT = 306;\r\n    uint256 internal constant MAX_OUT_BPT_FOR_TOKEN_IN = 307;\r\n    uint256 internal constant NORMALIZED_WEIGHT_INVARIANT = 308;\r\n    uint256 internal constant INVALID_TOKEN = 309;\r\n    uint256 internal constant UNHANDLED_JOIN_KIND = 310;\r\n    uint256 internal constant ZERO_INVARIANT = 311;\r\n\r\n    // Lib\r\n    uint256 internal constant REENTRANCY = 400;\r\n    uint256 internal constant SENDER_NOT_ALLOWED = 401;\r\n    uint256 internal constant PAUSED = 402;\r\n    uint256 internal constant PAUSE_WINDOW_EXPIRED = 403;\r\n    uint256 internal constant MAX_PAUSE_WINDOW_DURATION = 404;\r\n    uint256 internal constant MAX_BUFFER_PERIOD_DURATION = 405;\r\n    uint256 internal constant INSUFFICIENT_BALANCE = 406;\r\n    uint256 internal constant INSUFFICIENT_ALLOWANCE = 407;\r\n    uint256 internal constant ERC20_TRANSFER_FROM_ZERO_ADDRESS = 408;\r\n    uint256 internal constant ERC20_TRANSFER_TO_ZERO_ADDRESS = 409;\r\n    uint256 internal constant ERC20_MINT_TO_ZERO_ADDRESS = 410;\r\n    uint256 internal constant ERC20_BURN_FROM_ZERO_ADDRESS = 411;\r\n    uint256 internal constant ERC20_APPROVE_FROM_ZERO_ADDRESS = 412;\r\n    uint256 internal constant ERC20_APPROVE_TO_ZERO_ADDRESS = 413;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_ALLOWANCE = 414;\r\n    uint256 internal constant ERC20_DECREASED_ALLOWANCE_BELOW_ZERO = 415;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_BALANCE = 416;\r\n    uint256 internal constant ERC20_BURN_EXCEEDS_ALLOWANCE = 417;\r\n    uint256 internal constant SAFE_ERC20_CALL_FAILED = 418;\r\n    uint256 internal constant ADDRESS_INSUFFICIENT_BALANCE = 419;\r\n    uint256 internal constant ADDRESS_CANNOT_SEND_VALUE = 420;\r\n    uint256 internal constant SAFE_CAST_VALUE_CANT_FIT_INT256 = 421;\r\n    uint256 internal constant GRANT_SENDER_NOT_ADMIN = 422;\r\n    uint256 internal constant REVOKE_SENDER_NOT_ADMIN = 423;\r\n    uint256 internal constant RENOUNCE_SENDER_NOT_ALLOWED = 424;\r\n    uint256 internal constant BUFFER_PERIOD_EXPIRED = 425;\r\n\r\n    // Vault\r\n    uint256 internal constant INVALID_POOL_ID = 500;\r\n    uint256 internal constant CALLER_NOT_POOL = 501;\r\n    uint256 internal constant SENDER_NOT_ASSET_MANAGER = 502;\r\n    uint256 internal constant USER_DOESNT_ALLOW_RELAYER = 503;\r\n    uint256 internal constant INVALID_SIGNATURE = 504;\r\n    uint256 internal constant EXIT_BELOW_MIN = 505;\r\n    uint256 internal constant JOIN_ABOVE_MAX = 506;\r\n    uint256 internal constant SWAP_LIMIT = 507;\r\n    uint256 internal constant SWAP_DEADLINE = 508;\r\n    uint256 internal constant CANNOT_SWAP_SAME_TOKEN = 509;\r\n    uint256 internal constant UNKNOWN_AMOUNT_IN_FIRST_SWAP = 510;\r\n    uint256 internal constant MALCONSTRUCTED_MULTIHOP_SWAP = 511;\r\n    uint256 internal constant INTERNAL_BALANCE_OVERFLOW = 512;\r\n    uint256 internal constant INSUFFICIENT_INTERNAL_BALANCE = 513;\r\n    uint256 internal constant INVALID_ETH_INTERNAL_BALANCE = 514;\r\n    uint256 internal constant INVALID_POST_LOAN_BALANCE = 515;\r\n    uint256 internal constant INSUFFICIENT_ETH = 516;\r\n    uint256 internal constant UNALLOCATED_ETH = 517;\r\n    uint256 internal constant ETH_TRANSFER = 518;\r\n    uint256 internal constant CANNOT_USE_ETH_SENTINEL = 519;\r\n    uint256 internal constant TOKENS_MISMATCH = 520;\r\n    uint256 internal constant TOKEN_NOT_REGISTERED = 521;\r\n    uint256 internal constant TOKEN_ALREADY_REGISTERED = 522;\r\n    uint256 internal constant TOKENS_ALREADY_SET = 523;\r\n    uint256 internal constant TOKENS_LENGTH_MUST_BE_2 = 524;\r\n    uint256 internal constant NONZERO_TOKEN_BALANCE = 525;\r\n    uint256 internal constant BALANCE_TOTAL_OVERFLOW = 526;\r\n    uint256 internal constant POOL_NO_TOKENS = 527;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_BALANCE = 528;\r\n\r\n    // Fees\r\n    uint256 internal constant SWAP_FEE_PERCENTAGE_TOO_HIGH = 600;\r\n    uint256 internal constant FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH = 601;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT = 602;\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n */\r\nlibrary EnumerableSet {\r\n    // The original OpenZeppelin implementation uses a generic Set type with bytes32 values: this was replaced with\r\n    // AddressSet, which uses address keys natively, resulting in more dense bytecode.\r\n\r\n    struct AddressSet {\r\n        // Storage of set values\r\n        address[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(address => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        if (!contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\r\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\r\n\r\n            address lastValue = set._values[lastIndex];\r\n\r\n            // Move the last value to the index where the value to delete is\r\n            set._values[toDeleteIndex] = lastValue;\r\n            // Update the index for the moved value\r\n            set._indexes[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        _require(set._values.length > index, Errors.OUT_OF_BOUNDS);\r\n        return unchecked_at(set, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\r\n     * than {length}). O(1).\r\n     *\r\n     * This function performs one less storage read than {at}, but should only be used when `index` is known to be\r\n     * within bounds.\r\n     */\r\n    function unchecked_at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return set._values[index];\r\n    }\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it.\r\n */\r\nabstract contract AccessControl {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    struct RoleData {\r\n        EnumerableSet.AddressSet members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r\n        return _roles[role].members.contains(account);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of accounts that have `role`. Can be used\r\n     * together with {getRoleMember} to enumerate all bearers of a role.\r\n     */\r\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\r\n        return _roles[role].members.length();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns one of the accounts that have `role`. `index` must be a\r\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\r\n     *\r\n     * Role bearers are not sorted in any particular way, and their ordering may\r\n     * change at any point.\r\n     *\r\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\r\n     * you perform all queries on the same block. See the following\r\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n     * for more information.\r\n     */\r\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r\n        return _roles[role].members.at(index);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual {\r\n        _require(hasRole(_roles[role].adminRole, msg.sender), Errors.GRANT_SENDER_NOT_ADMIN);\r\n\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had already been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual {\r\n        _require(hasRole(_roles[role].adminRole, msg.sender), Errors.REVOKE_SENDER_NOT_ADMIN);\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    function renounceRole(bytes32 role, address account) public virtual {\r\n        _require(account == msg.sender, Errors.RENOUNCE_SENDER_NOT_ALLOWED);\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\r\n        _roles[role].adminRole = adminRole;\r\n    }\r\n\r\n    function _grantRole(bytes32 role, address account) private {\r\n        if (_roles[role].members.add(account)) {\r\n            emit RoleGranted(role, account, msg.sender);\r\n        }\r\n    }\r\n\r\n    function _revokeRole(bytes32 role, address account) private {\r\n        if (_roles[role].members.remove(account)) {\r\n            emit RoleRevoked(role, account, msg.sender);\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\nlibrary InputHelpers {\r\n    function ensureInputLengthMatch(uint256 a, uint256 b) internal pure {\r\n        _require(a == b, Errors.INPUT_LENGTH_MISMATCH);\r\n    }\r\n\r\n    function ensureInputLengthMatch(\r\n        uint256 a,\r\n        uint256 b,\r\n        uint256 c\r\n    ) internal pure {\r\n        _require(a == b && b == c, Errors.INPUT_LENGTH_MISMATCH);\r\n    }\r\n\r\n    function ensureArrayIsSorted(IAsset[] memory array) internal pure {\r\n        address[] memory addressArray;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            addressArray := array\r\n        }\r\n        ensureArrayIsSorted(addressArray);\r\n    }\r\n\r\n    function ensureArrayIsSorted(IERC20[] memory array) internal pure {\r\n        address[] memory addressArray;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            addressArray := array\r\n        }\r\n        ensureArrayIsSorted(addressArray);\r\n    }\r\n\r\n    function ensureArrayIsSorted(address[] memory array) internal pure {\r\n        if (array.length < 2) {\r\n            return;\r\n        }\r\n\r\n        address previous = array[0];\r\n        for (uint256 i = 1; i < array.length; ++i) {\r\n            address current = array[i];\r\n            _require(previous < current, Errors.UNSORTED_ARRAY);\r\n            previous = current;\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Basic Authorizer implementation, based on OpenZeppelin's Access Control.\r\n *\r\n * Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not\r\n * being truly used as such, since they each map to a single action identifier.\r\n *\r\n * This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to\r\n * manage permissions across multiple contracts and to natively handle timelocks.\r\n */\r\ncontract Authorizer is AccessControl, IAuthorizer {\r\n    constructor(address admin) {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, admin);\r\n    }\r\n\r\n    function canPerform(\r\n        bytes32 actionId,\r\n        address account,\r\n        address\r\n    ) public view override returns (bool) {\r\n        // This Authorizer ignores the 'where' field completely.\r\n        return AccessControl.hasRole(actionId, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants multiple roles to a single account.\r\n     */\r\n    function grantRoles(bytes32[] memory roles, address account) external {\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            grantRole(roles[i], account);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Grants roles to a list of accounts.\r\n     */\r\n    function grantRolesToMany(bytes32[] memory roles, address[] memory accounts) external {\r\n        InputHelpers.ensureInputLengthMatch(roles.length, accounts.length);\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            grantRole(roles[i], accounts[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes multiple roles from a single account.\r\n     */\r\n    function revokeRoles(bytes32[] memory roles, address account) external {\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            revokeRole(roles[i], account);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes roles from a list of accounts.\r\n     */\r\n    function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r\n        InputHelpers.ensureInputLengthMatch(roles.length, accounts.length);\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            revokeRole(roles[i], accounts[i]);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Authorizer.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 624,
								"contract": "contracts/Authorizer.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)620_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)620_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)620_storage"
							},
							"t_struct(AddressSet)415_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 410,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 414,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)620_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 617,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)415_storage"
									},
									{
										"astId": 619,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Authorizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "actionId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "canPerform",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "grantRolesToMany",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "revokeRolesFromMany",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Basic Authorizer implementation, based on OpenZeppelin's Access Control. Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not being truly used as such, since they each map to a single action identifier. This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to manage permissions across multiple contracts and to natively handle timelocks.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"grantRoles(bytes32[],address)": {
								"details": "Grants multiple roles to a single account."
							},
							"grantRolesToMany(bytes32[],address[])": {
								"details": "Grants roles to a list of accounts."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"revokeRoles(bytes32[],address)": {
								"details": "Revokes multiple roles from a single account."
							},
							"revokeRolesFromMany(bytes32[],address[])": {
								"details": "Revokes roles from a list of accounts."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":27151:28832  contract Authorizer is AccessControl, IAuthorizer {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Authorizer.sol\":27208:27291  constructor(address admin) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"contracts/Authorizer.sol\":27246:27283  _setupRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_5\n    /* \"contracts/Authorizer.sol\":19511:19515  0x00 */\n  0x00\n    /* \"contracts/Authorizer.sol\":27208:27291  constructor(address admin) {\r... */\n  dup3\n    /* \"contracts/Authorizer.sol\":27246:27256  _setupRole */\n  tag_6\n    /* \"contracts/Authorizer.sol\":27246:27283  _setupRole(DEFAULT_ADMIN_ROLE, admin) */\n  jump\t// in\ntag_5:\n    /* \"contracts/Authorizer.sol\":27208:27291  constructor(address admin) {\r... */\n  pop\n    /* \"contracts/Authorizer.sol\":27151:28832  contract Authorizer is AccessControl, IAuthorizer {\r... */\n  jump(tag_7)\n    /* \"contracts/Authorizer.sol\":24422:24534  function _setupRole(bytes32 role, address account) internal virtual {\r... */\ntag_6:\n    /* \"contracts/Authorizer.sol\":24501:24526  _grantRole(role, account) */\n  tag_9\n    /* \"contracts/Authorizer.sol\":24512:24516  role */\n  dup3\n    /* \"contracts/Authorizer.sol\":24518:24525  account */\n  dup3\n    /* \"contracts/Authorizer.sol\":24501:24511  _grantRole */\n  tag_10\n    /* \"contracts/Authorizer.sol\":24501:24526  _grantRole(role, account) */\n  jump\t// in\ntag_9:\n    /* \"contracts/Authorizer.sol\":24422:24534  function _setupRole(bytes32 role, address account) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":24873:25059  function _grantRole(bytes32 role, address account) private {\r... */\ntag_10:\n    /* \"contracts/Authorizer.sol\":24947:24953  _roles */\n  0x00\n    /* \"contracts/Authorizer.sol\":24947:24959  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/Authorizer.sol\":24947:24980  _roles[role].members.add(account) */\n  tag_12\n  swap2\n    /* \"contracts/Authorizer.sol\":24972:24979  account */\n  dup4\n  swap1\n    /* \"contracts/Authorizer.sol\":24947:24971  _roles[role].members.add */\n  tag_0_74\n  tag_13\n  dup3\n  shl\n  or\n    /* \"contracts/Authorizer.sol\":24947:24980  _roles[role].members.add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Authorizer.sol\":24943:25052  if (_roles[role].members.add(account)) {\r... */\n  iszero\n  tag_9\n  jumpi\n    /* \"contracts/Authorizer.sol\":25002:25040  RoleGranted(role, account, msg.sender) */\n  mload(0x40)\n    /* \"contracts/Authorizer.sol\":25029:25039  msg.sender */\n  caller\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Authorizer.sol\":25002:25040  RoleGranted(role, account, msg.sender) */\n  dup4\n  and\n  swap1\n    /* \"contracts/Authorizer.sol\":25014:25018  role */\n  dup5\n  swap1\n    /* \"contracts/Authorizer.sol\":25002:25040  RoleGranted(role, account, msg.sender) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n  0x00\n  swap1\n  log4\n    /* \"contracts/Authorizer.sol\":24873:25059  function _grantRole(bytes32 role, address account) private {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":14271:14691  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_13:\n    /* \"contracts/Authorizer.sol\":14341:14345  bool */\n  0x00\n    /* \"contracts/Authorizer.sol\":14363:14383  contains(set, value) */\n  tag_16\n    /* \"contracts/Authorizer.sol\":14372:14375  set */\n  dup4\n    /* \"contracts/Authorizer.sol\":14377:14382  value */\n  dup4\n    /* \"contracts/Authorizer.sol\":14363:14371  contains */\n  tag_17\n    /* \"contracts/Authorizer.sol\":14363:14383  contains(set, value) */\n  jump\t// in\ntag_16:\n    /* \"contracts/Authorizer.sol\":14358:14684  if (!contains(set, value)) {\r... */\n  tag_18\n  jumpi\n  pop\n    /* \"contracts/Authorizer.sol\":14400:14423  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup1\n  dup3\n  add\n  dup5\n  sstore\n  0x00\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Authorizer.sol\":14583:14601  set._values.length */\n  dup6\n  sload\n    /* \"contracts/Authorizer.sol\":14561:14580  set._indexes[value] */\n  swap1\n  dup3\n  mstore\n    /* \"contracts/Authorizer.sol\":14561:14573  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"contracts/Authorizer.sol\":14561:14580  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/Authorizer.sol\":14561:14601  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Authorizer.sol\":14616:14627  return true */\n  jump(tag_20)\n    /* \"contracts/Authorizer.sol\":14358:14684  if (!contains(set, value)) {\r... */\ntag_18:\n  pop\n    /* \"contracts/Authorizer.sol\":14667:14672  false */\n  0x00\n    /* \"contracts/Authorizer.sol\":14358:14684  if (!contains(set, value)) {\r... */\ntag_20:\n    /* \"contracts/Authorizer.sol\":14271:14691  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":16517:16653  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Authorizer.sol\":16621:16640  set._indexes[value] */\n  and\n    /* \"contracts/Authorizer.sol\":16597:16601  bool */\n  0x00\n    /* \"contracts/Authorizer.sol\":16621:16640  set._indexes[value] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/Authorizer.sol\":16621:16633  set._indexes */\n  0x01\n  swap2\n  swap1\n  swap2\n  add\n    /* \"contracts/Authorizer.sol\":16621:16640  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/Authorizer.sol\":16621:16645  set._indexes[value] != 0 */\n  iszero\n  iszero\n  swap1\n    /* \"contracts/Authorizer.sol\":16517:16653  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":27151:28832  contract Authorizer is AccessControl, IAuthorizer {\r... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":27151:28832  contract Authorizer is AccessControl, IAuthorizer {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x988360a3\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa73cb2ab\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa73cb2ab\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfcd7627e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x988360a3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9be2a884\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x18b2cde9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Authorizer.sol\":28542:28829  function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_26\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Authorizer.sol\":22095:22209  function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      calldataload\n      tag_29\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Authorizer.sol\":22471:22677  function grantRole(bytes32 role, address account) public virtual {\r... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_32\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":23646:23839  function renounceRole(bytes32 role, address account) public virtual {\r... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_35\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":21768:21906  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_38\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Authorizer.sol\":20721:20868  function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_41\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Authorizer.sol\":28276:28464  function revokeRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_9:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      swap1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      tag_47\n      swap1\n      pop\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":27299:27565  function canPerform(\r... */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      dup1\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      0x20\n      dup3\n      add\n      calldataload\n      dup2\n      and\n      swap2\n      0x40\n      add\n      calldataload\n      and\n      tag_50\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":19466:19515  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      tag_27\n      tag_52\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":27908:28191  function grantRolesToMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_12:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_61\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":21042:21169  function getRoleMemberCount(bytes32 role) public view returns (uint256) {\r... */\n    tag_13:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":22930:23139  function revokeRole(bytes32 role, address account) public virtual {\r... */\n    tag_14:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_67\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":27647:27833  function grantRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_15:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      swap1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      tag_73\n      swap1\n      pop\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":28542:28829  function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_26:\n        /* \"contracts/Authorizer.sol\":28642:28708  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      tag_76\n        /* \"contracts/Authorizer.sol\":28678:28683  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28678:28690  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28692:28700  accounts */\n      dup3\n        /* \"contracts/Authorizer.sol\":28692:28707  accounts.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28642:28677  InputHelpers.ensureInputLengthMatch */\n      tag_77\n        /* \"contracts/Authorizer.sol\":28642:28708  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/Authorizer.sol\":28724:28733  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":28719:28822  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_78:\n        /* \"contracts/Authorizer.sol\":28743:28748  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28743:28755  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28739:28740  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":28739:28755  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":28719:28822  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":28777:28810  revokeRole(roles[i], accounts[i]) */\n      tag_81\n        /* \"contracts/Authorizer.sol\":28788:28793  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":28794:28795  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":28788:28796  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28798:28806  accounts */\n      dup4\n        /* \"contracts/Authorizer.sol\":28807:28808  i */\n      dup4\n        /* \"contracts/Authorizer.sol\":28798:28809  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28777:28787  revokeRole */\n      tag_67\n        /* \"contracts/Authorizer.sol\":28777:28810  revokeRole(roles[i], accounts[i]) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Authorizer.sol\":28757:28760  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":28719:28822  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_78)\n    tag_79:\n      pop\n        /* \"contracts/Authorizer.sol\":28542:28829  function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":22095:22209  function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r... */\n    tag_29:\n        /* \"contracts/Authorizer.sol\":22152:22159  bytes32 */\n      0x00\n        /* \"contracts/Authorizer.sol\":22179:22191  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":22179:22201  _roles[role].adminRole */\n      0x02\n      add\n      sload\n      swap1\n        /* \"contracts/Authorizer.sol\":22095:22209  function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r... */\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":22471:22677  function grantRole(bytes32 role, address account) public virtual {\r... */\n    tag_32:\n        /* \"contracts/Authorizer.sol\":22564:22570  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":22564:22576  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":22564:22586  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/Authorizer.sol\":22547:22631  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.GRANT_SENDER_NOT_ADMIN) */\n      tag_86\n      swap1\n        /* \"contracts/Authorizer.sol\":22556:22599  hasRole(_roles[role].adminRole, msg.sender) */\n      tag_87\n      swap1\n        /* \"contracts/Authorizer.sol\":22588:22598  msg.sender */\n      caller\n        /* \"contracts/Authorizer.sol\":22556:22563  hasRole */\n      tag_41\n        /* \"contracts/Authorizer.sol\":22556:22599  hasRole(_roles[role].adminRole, msg.sender) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/Authorizer.sol\":10699:10702  422 */\n      0x01a6\n        /* \"contracts/Authorizer.sol\":22547:22555  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":22547:22631  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.GRANT_SENDER_NOT_ADMIN) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Authorizer.sol\":22644:22669  _grantRole(role, account) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":22655:22659  role */\n      dup3\n        /* \"contracts/Authorizer.sol\":22661:22668  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":22644:22654  _grantRole */\n      tag_90\n        /* \"contracts/Authorizer.sol\":22644:22669  _grantRole(role, account) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/Authorizer.sol\":22471:22677  function grantRole(bytes32 role, address account) public virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":23646:23839  function renounceRole(bytes32 role, address account) public virtual {\r... */\n    tag_35:\n        /* \"contracts/Authorizer.sol\":23725:23792  _require(account == msg.sender, Errors.RENOUNCE_SENDER_NOT_ALLOWED) */\n      tag_92\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":23734:23755  account == msg.sender */\n      dup3\n      and\n        /* \"contracts/Authorizer.sol\":23745:23755  msg.sender */\n      caller\n        /* \"contracts/Authorizer.sol\":23734:23755  account == msg.sender */\n      eq\n        /* \"contracts/Authorizer.sol\":10827:10830  424 */\n      0x01a8\n        /* \"contracts/Authorizer.sol\":23725:23733  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":23725:23792  _require(account == msg.sender, Errors.RENOUNCE_SENDER_NOT_ALLOWED) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Authorizer.sol\":23805:23831  _revokeRole(role, account) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":23817:23821  role */\n      dup3\n        /* \"contracts/Authorizer.sol\":23823:23830  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":23805:23816  _revokeRole */\n      tag_94\n        /* \"contracts/Authorizer.sol\":23805:23831  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":21768:21906  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r... */\n    tag_38:\n        /* \"contracts/Authorizer.sol\":21841:21848  address */\n      0x00\n        /* \"contracts/Authorizer.sol\":21868:21880  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Authorizer.sol\":21868:21898  _roles[role].members.at(index) */\n      tag_96\n      swap1\n        /* \"contracts/Authorizer.sol\":21892:21897  index */\n      dup4\n        /* \"contracts/Authorizer.sol\":21868:21891  _roles[role].members.at */\n      tag_97\n        /* \"contracts/Authorizer.sol\":21868:21898  _roles[role].members.at(index) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Authorizer.sol\":21861:21898  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"contracts/Authorizer.sol\":21768:21906  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r... */\n    tag_95:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":20721:20868  function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r... */\n    tag_41:\n        /* \"contracts/Authorizer.sol\":20798:20802  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":20822:20834  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Authorizer.sol\":20822:20860  _roles[role].members.contains(account) */\n      tag_96\n      swap1\n        /* \"contracts/Authorizer.sol\":20852:20859  account */\n      dup4\n        /* \"contracts/Authorizer.sol\":20822:20851  _roles[role].members.contains */\n      tag_100\n        /* \"contracts/Authorizer.sol\":20822:20860  _roles[role].members.contains(account) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":28276:28464  function revokeRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_47:\n        /* \"contracts/Authorizer.sol\":28363:28372  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":28358:28457  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_102:\n        /* \"contracts/Authorizer.sol\":28382:28387  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28382:28394  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28378:28379  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":28378:28394  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":28358:28457  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":28416:28445  revokeRole(roles[i], account) */\n      tag_105\n        /* \"contracts/Authorizer.sol\":28427:28432  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":28433:28434  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":28427:28435  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28437:28444  account */\n      dup4\n        /* \"contracts/Authorizer.sol\":28416:28426  revokeRole */\n      tag_67\n        /* \"contracts/Authorizer.sol\":28416:28445  revokeRole(roles[i], account) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/Authorizer.sol\":28396:28399  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":28358:28457  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_102)\n        /* \"contracts/Authorizer.sol\":27299:27565  function canPerform(\r... */\n    tag_50:\n        /* \"contracts/Authorizer.sol\":27427:27431  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":27517:27557  AccessControl.hasRole(actionId, account) */\n      tag_108\n        /* \"contracts/Authorizer.sol\":27539:27547  actionId */\n      dup5\n        /* \"contracts/Authorizer.sol\":27549:27556  account */\n      dup5\n        /* \"contracts/Authorizer.sol\":27517:27538  AccessControl.hasRole */\n      tag_41\n        /* \"contracts/Authorizer.sol\":27517:27557  AccessControl.hasRole(actionId, account) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Authorizer.sol\":27510:27557  return AccessControl.hasRole(actionId, account) */\n      swap5\n        /* \"contracts/Authorizer.sol\":27299:27565  function canPerform(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":19466:19515  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_52:\n        /* \"contracts/Authorizer.sol\":19511:19515  0x00 */\n      0x00\n        /* \"contracts/Authorizer.sol\":19466:19515  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":27908:28191  function grantRolesToMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_61:\n        /* \"contracts/Authorizer.sol\":28005:28071  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      tag_110\n        /* \"contracts/Authorizer.sol\":28041:28046  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28041:28053  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28055:28063  accounts */\n      dup3\n        /* \"contracts/Authorizer.sol\":28055:28070  accounts.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28005:28040  InputHelpers.ensureInputLengthMatch */\n      tag_77\n        /* \"contracts/Authorizer.sol\":28005:28071  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Authorizer.sol\":28087:28096  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":28082:28184  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_111:\n        /* \"contracts/Authorizer.sol\":28106:28111  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28106:28118  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28102:28103  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":28102:28118  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":28082:28184  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":28140:28172  grantRole(roles[i], accounts[i]) */\n      tag_114\n        /* \"contracts/Authorizer.sol\":28150:28155  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":28156:28157  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":28150:28158  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28160:28168  accounts */\n      dup4\n        /* \"contracts/Authorizer.sol\":28169:28170  i */\n      dup4\n        /* \"contracts/Authorizer.sol\":28160:28171  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28140:28149  grantRole */\n      tag_32\n        /* \"contracts/Authorizer.sol\":28140:28172  grantRole(roles[i], accounts[i]) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/Authorizer.sol\":28120:28123  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":28082:28184  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_111)\n        /* \"contracts/Authorizer.sol\":21042:21169  function getRoleMemberCount(bytes32 role) public view returns (uint256) {\r... */\n    tag_64:\n        /* \"contracts/Authorizer.sol\":21105:21112  uint256 */\n      0x00\n        /* \"contracts/Authorizer.sol\":21132:21144  _roles[role] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Authorizer.sol\":21132:21161  _roles[role].members.length() */\n      tag_95\n      swap1\n        /* \"contracts/Authorizer.sol\":21132:21159  _roles[role].members.length */\n      tag_119\n        /* \"contracts/Authorizer.sol\":21132:21161  _roles[role].members.length() */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":22930:23139  function revokeRole(bytes32 role, address account) public virtual {\r... */\n    tag_67:\n        /* \"contracts/Authorizer.sol\":23024:23030  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":23024:23036  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":23024:23046  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/Authorizer.sol\":23007:23092  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.REVOKE_SENDER_NOT_ADMIN) */\n      tag_92\n      swap1\n        /* \"contracts/Authorizer.sol\":23016:23059  hasRole(_roles[role].adminRole, msg.sender) */\n      tag_122\n      swap1\n        /* \"contracts/Authorizer.sol\":23048:23058  msg.sender */\n      caller\n        /* \"contracts/Authorizer.sol\":23016:23023  hasRole */\n      tag_41\n        /* \"contracts/Authorizer.sol\":23016:23059  hasRole(_roles[role].adminRole, msg.sender) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/Authorizer.sol\":10761:10764  423 */\n      0x01a7\n        /* \"contracts/Authorizer.sol\":23007:23015  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":23007:23092  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.REVOKE_SENDER_NOT_ADMIN) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":27647:27833  function grantRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_73:\n        /* \"contracts/Authorizer.sol\":27733:27742  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":27728:27826  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_125:\n        /* \"contracts/Authorizer.sol\":27752:27757  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":27752:27764  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":27748:27749  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":27748:27764  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":27728:27826  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":27786:27814  grantRole(roles[i], account) */\n      tag_128\n        /* \"contracts/Authorizer.sol\":27796:27801  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":27802:27803  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":27796:27804  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":27806:27813  account */\n      dup4\n        /* \"contracts/Authorizer.sol\":27786:27795  grantRole */\n      tag_32\n        /* \"contracts/Authorizer.sol\":27786:27814  grantRole(roles[i], account) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/Authorizer.sol\":27766:27769  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":27728:27826  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_125)\n        /* \"contracts/Authorizer.sol\":14271:14691  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_74:\n        /* \"contracts/Authorizer.sol\":14341:14345  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":14363:14383  contains(set, value) */\n      tag_131\n        /* \"contracts/Authorizer.sol\":14372:14375  set */\n      dup4\n        /* \"contracts/Authorizer.sol\":14377:14382  value */\n      dup4\n        /* \"contracts/Authorizer.sol\":14363:14371  contains */\n      tag_100\n        /* \"contracts/Authorizer.sol\":14363:14383  contains(set, value) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/Authorizer.sol\":14358:14684  if (!contains(set, value)) {\r... */\n      tag_132\n      jumpi\n      pop\n        /* \"contracts/Authorizer.sol\":14400:14423  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup5\n      sstore\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Authorizer.sol\":14583:14601  set._values.length */\n      dup6\n      sload\n        /* \"contracts/Authorizer.sol\":14561:14580  set._indexes[value] */\n      swap1\n      dup3\n      mstore\n        /* \"contracts/Authorizer.sol\":14561:14573  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"contracts/Authorizer.sol\":14561:14580  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":14561:14601  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Authorizer.sol\":14616:14627  return true */\n      jump(tag_95)\n        /* \"contracts/Authorizer.sol\":14358:14684  if (!contains(set, value)) {\r... */\n    tag_132:\n      pop\n        /* \"contracts/Authorizer.sol\":14667:14672  false */\n      0x00\n        /* \"contracts/Authorizer.sol\":14660:14672  return false */\n      jump(tag_95)\n        /* \"contracts/Authorizer.sol\":25319:25452  function ensureInputLengthMatch(uint256 a, uint256 b) internal pure {\r... */\n    tag_77:\n        /* \"contracts/Authorizer.sol\":25398:25444  _require(a == b, Errors.INPUT_LENGTH_MISMATCH) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":25412:25413  b */\n      dup2\n        /* \"contracts/Authorizer.sol\":25407:25408  a */\n      dup4\n        /* \"contracts/Authorizer.sol\":25407:25413  a == b */\n      eq\n        /* \"contracts/Authorizer.sol\":7923:7926  103 */\n      0x67\n        /* \"contracts/Authorizer.sol\":3710:3813  function _require(bool condition, uint256 errorCode) pure {\r... */\n    tag_88:\n        /* \"contracts/Authorizer.sol\":3780:3789  condition */\n      dup2\n        /* \"contracts/Authorizer.sol\":3775:3809  if (!condition) _revert(errorCode) */\n      tag_89\n      jumpi\n        /* \"contracts/Authorizer.sol\":3791:3809  _revert(errorCode) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":3799:3808  errorCode */\n      dup2\n        /* \"contracts/Authorizer.sol\":3791:3798  _revert */\n      tag_140\n        /* \"contracts/Authorizer.sol\":3791:3809  _revert(errorCode) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":24873:25059  function _grantRole(bytes32 role, address account) private {\r... */\n    tag_90:\n        /* \"contracts/Authorizer.sol\":24947:24953  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":24947:24959  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":24947:24980  _roles[role].members.add(account) */\n      tag_142\n      swap1\n        /* \"contracts/Authorizer.sol\":24972:24979  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":24947:24971  _roles[role].members.add */\n      tag_74\n        /* \"contracts/Authorizer.sol\":24947:24980  _roles[role].members.add(account) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/Authorizer.sol\":24943:25052  if (_roles[role].members.add(account)) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/Authorizer.sol\":25002:25040  RoleGranted(role, account, msg.sender) */\n      mload(0x40)\n        /* \"contracts/Authorizer.sol\":25029:25039  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":25002:25040  RoleGranted(role, account, msg.sender) */\n      dup4\n      and\n      swap1\n        /* \"contracts/Authorizer.sol\":25014:25018  role */\n      dup5\n      swap1\n        /* \"contracts/Authorizer.sol\":25002:25040  RoleGranted(role, account, msg.sender) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n      0x00\n      swap1\n      log4\n        /* \"contracts/Authorizer.sol\":24873:25059  function _grantRole(bytes32 role, address account) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":25067:25257  function _revokeRole(bytes32 role, address account) private {\r... */\n    tag_94:\n        /* \"contracts/Authorizer.sol\":25142:25148  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":25142:25154  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":25142:25178  _roles[role].members.remove(account) */\n      tag_145\n      swap1\n        /* \"contracts/Authorizer.sol\":25170:25177  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":25142:25169  _roles[role].members.remove */\n      tag_146\n        /* \"contracts/Authorizer.sol\":25142:25178  _roles[role].members.remove(account) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/Authorizer.sol\":25138:25250  if (_roles[role].members.remove(account)) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/Authorizer.sol\":25200:25238  RoleRevoked(role, account, msg.sender) */\n      mload(0x40)\n        /* \"contracts/Authorizer.sol\":25227:25237  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":25200:25238  RoleRevoked(role, account, msg.sender) */\n      dup4\n      and\n      swap1\n        /* \"contracts/Authorizer.sol\":25212:25216  role */\n      dup5\n      swap1\n        /* \"contracts/Authorizer.sol\":25200:25238  RoleRevoked(role, account, msg.sender) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n      0x00\n      swap1\n      log4\n        /* \"contracts/Authorizer.sol\":25067:25257  function _revokeRole(bytes32 role, address account) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":17209:17411  function at(AddressSet storage set, uint256 index) internal view returns (address) {\r... */\n    tag_97:\n        /* \"contracts/Authorizer.sol\":17312:17330  set._values.length */\n      dup2\n      sload\n        /* \"contracts/Authorizer.sol\":17283:17290  address */\n      0x00\n      swap1\n        /* \"contracts/Authorizer.sol\":17303:17361  _require(set._values.length > index, Errors.OUT_OF_BOUNDS) */\n      tag_149\n      swap1\n        /* \"contracts/Authorizer.sol\":17312:17338  set._values.length > index */\n      dup4\n      lt\n        /* \"contracts/Authorizer.sol\":7756:7759  100 */\n      0x64\n        /* \"contracts/Authorizer.sol\":17303:17311  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":17303:17361  _require(set._values.length > index, Errors.OUT_OF_BOUNDS) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/Authorizer.sol\":17379:17403  unchecked_at(set, index) */\n      tag_96\n        /* \"contracts/Authorizer.sol\":17392:17395  set */\n      dup4\n        /* \"contracts/Authorizer.sol\":17397:17402  index */\n      dup4\n        /* \"contracts/Authorizer.sol\":17379:17391  unchecked_at */\n      tag_151\n        /* \"contracts/Authorizer.sol\":17379:17403  unchecked_at(set, index) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":16517:16653  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":16621:16640  set._indexes[value] */\n      and\n        /* \"contracts/Authorizer.sol\":16597:16601  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":16621:16640  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Authorizer.sol\":16621:16633  set._indexes */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/Authorizer.sol\":16621:16640  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Authorizer.sol\":16621:16645  set._indexes[value] != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/Authorizer.sol\":16517:16653  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":16739:16855  function length(AddressSet storage set) internal view returns (uint256) {\r... */\n    tag_119:\n        /* \"contracts/Authorizer.sol\":16829:16847  set._values.length */\n      sload\n      swap1\n        /* \"contracts/Authorizer.sol\":16739:16855  function length(AddressSet storage set) internal view returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":3925:7148  function _revert(uint256 errorCode) pure {\r... */\n    tag_140:\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/Authorizer.sol\":6478:6481  0x0 */\n      0x00\n        /* \"contracts/Authorizer.sol\":6471:6550  mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Authorizer.sol\":6691:6757  0x0000000000000000000000000000000000000000000000000000000000000020 */\n      0x20\n        /* \"contracts/Authorizer.sol\":6685:6689  0x04 */\n      0x04\n        /* \"contracts/Authorizer.sol\":6678:6758  mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020) */\n      mstore\n        /* \"contracts/Authorizer.sol\":6835:6836  7 */\n      0x07\n        /* \"contracts/Authorizer.sol\":6829:6833  0x24 */\n      0x24\n        /* \"contracts/Authorizer.sol\":6822:6837  mstore(0x24, 7) */\n      mstore\n        /* \"contracts/Authorizer.sol\":5881:5954  add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))) */\n      0x42414c23000030\n        /* \"contracts/Authorizer.sol\":5077:5079  10 */\n      0x0a\n        /* \"contracts/Authorizer.sol\":5112:5130  div(errorCode, 10) */\n      dup1\n      dup5\n      div\n        /* \"contracts/Authorizer.sol\":5158:5176  mod(errorCode, 10) */\n      dup2\n      dup2\n      mod\n        /* \"contracts/Authorizer.sol\":5082:5086  0x30 */\n      0x30\n        /* \"contracts/Authorizer.sol\":5154:5183  add(mod(errorCode, 10), 0x30) */\n      swap1\n      dup2\n      add\n        /* \"contracts/Authorizer.sol\":5922:5923  8 */\n      0x08\n        /* \"contracts/Authorizer.sol\":5918:5932  shl(8, tenths) */\n      shl\n        /* \"contracts/Authorizer.sol\":5062:5080  mod(errorCode, 10) */\n      swap6\n      dup4\n      swap1\n      mod\n        /* \"contracts/Authorizer.sol\":5907:5933  add(units, shl(8, tenths)) */\n      swap6\n      swap1\n      swap6\n      add\n        /* \"contracts/Authorizer.sol\":5208:5226  div(errorCode, 10) */\n      swap1\n      dup3\n      swap1\n      div\n        /* \"contracts/Authorizer.sol\":5256:5274  mod(errorCode, 10) */\n      swap2\n      dup3\n      mod\n        /* \"contracts/Authorizer.sol\":5252:5281  add(mod(errorCode, 10), 0x30) */\n      swap1\n      swap5\n      add\n        /* \"contracts/Authorizer.sol\":5939:5941  16 */\n      0x10\n        /* \"contracts/Authorizer.sol\":5935:5952  shl(16, hundreds) */\n      shl\n        /* \"contracts/Authorizer.sol\":5903:5953  add(add(units, shl(8, tenths)), shl(16, hundreds)) */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"contracts/Authorizer.sol\":5881:5954  add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))) */\n      add\n        /* \"contracts/Authorizer.sol\":5876:5879  200 */\n      0xc8\n        /* \"contracts/Authorizer.sol\":5872:5955  shl(200, add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds)))) */\n      shl\n        /* \"contracts/Authorizer.sol\":6904:6908  0x44 */\n      0x44\n        /* \"contracts/Authorizer.sol\":6897:6923  mstore(0x44, revertReason) */\n      mstore\n        /* \"contracts/Authorizer.sol\":7134:7137  100 */\n      0x64\n      swap1\n        /* \"contracts/Authorizer.sol\":7124:7138  revert(0, 100) */\n      revert\n        /* \"contracts/Authorizer.sol\":14867:16431  function remove(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":15079:15098  set._indexes[value] */\n      dup2\n      and\n        /* \"contracts/Authorizer.sol\":14940:14944  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":15079:15098  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Authorizer.sol\":15079:15091  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"contracts/Authorizer.sol\":15079:15098  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Authorizer.sol\":15115:15130  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"contracts/Authorizer.sol\":15111:16424  if (valueIndex != 0) {\r... */\n      tag_156\n      jumpi\n        /* \"contracts/Authorizer.sol\":15563:15581  set._values.length */\n      dup4\n      sload\n      not(0x00)\n        /* \"contracts/Authorizer.sol\":15514:15528  valueIndex - 1 */\n      dup1\n      dup4\n      add\n      swap2\n        /* \"contracts/Authorizer.sol\":15563:15585  set._values.length - 1 */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"contracts/Authorizer.sol\":15490:15511  uint256 toDeleteIndex */\n      0x00\n      swap1\n        /* \"contracts/Authorizer.sol\":15563:15566  set */\n      dup8\n      swap1\n        /* \"contracts/Authorizer.sol\":15563:15585  set._values.length - 1 */\n      dup4\n      swap1\n        /* \"contracts/Authorizer.sol\":15850:15872  set._values[lastIndex] */\n      dup2\n      lt\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/Authorizer.sol\":15967:15993  set._values[toDeleteIndex] */\n      dup8\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":15850:15872  set._values[lastIndex] */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"contracts/Authorizer.sol\":15967:15970  set */\n      dup9\n      swap1\n        /* \"contracts/Authorizer.sol\":15979:15992  toDeleteIndex */\n      dup6\n      swap1\n        /* \"contracts/Authorizer.sol\":15967:15993  set._values[toDeleteIndex] */\n      dup2\n      lt\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/Authorizer.sol\":15967:16005  set._values[toDeleteIndex] = lastValue */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Authorizer.sol\":16073:16096  set._indexes[lastValue] */\n      swap2\n      dup4\n      and\n      dup2\n      mstore\n      0x01\n        /* \"contracts/Authorizer.sol\":16073:16085  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"contracts/Authorizer.sol\":16073:16096  set._indexes[lastValue] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":16099:16116  toDeleteIndex + 1 */\n      swap1\n      dup5\n      add\n        /* \"contracts/Authorizer.sol\":16073:16116  set._indexes[lastValue] = toDeleteIndex + 1 */\n      swap1\n      sstore\n        /* \"contracts/Authorizer.sol\":16225:16242  set._values.pop() */\n      dup7\n      sload\n        /* \"contracts/Authorizer.sol\":16073:16085  set._indexes */\n      dup8\n      swap1\n        /* \"contracts/Authorizer.sol\":16225:16242  set._values.pop() */\n      dup1\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":16320:16339  set._indexes[value] */\n      dup9\n      and\n      dup3\n      mstore\n        /* \"contracts/Authorizer.sol\":16225:16242  set._values.pop() */\n      0x01\n        /* \"contracts/Authorizer.sol\":16320:16332  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"contracts/Authorizer.sol\":16320:16339  set._indexes[value] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Authorizer.sol\":16313:16339  delete set._indexes[value] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Authorizer.sol\":16225:16242  set._values.pop() */\n      swap5\n      pop\n        /* \"contracts/Authorizer.sol\":16356:16367  return true */\n      tag_95\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/Authorizer.sol\":15111:16424  if (valueIndex != 0) {\r... */\n    tag_156:\n        /* \"contracts/Authorizer.sol\":16407:16412  false */\n      0x00\n        /* \"contracts/Authorizer.sol\":16400:16412  return false */\n      swap2\n      pop\n      pop\n      jump(tag_95)\n        /* \"contracts/Authorizer.sol\":17732:17869  function unchecked_at(AddressSet storage set, uint256 index) internal view returns (address) {\r... */\n    tag_151:\n        /* \"contracts/Authorizer.sol\":17816:17823  address */\n      0x00\n        /* \"contracts/Authorizer.sol\":17843:17846  set */\n      dup3\n        /* \"contracts/Authorizer.sol\":17843:17854  set._values */\n      0x00\n      add\n        /* \"contracts/Authorizer.sol\":17855:17860  index */\n      dup3\n        /* \"contracts/Authorizer.sol\":17843:17861  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_165\n      jumpi\n      invalid\n    tag_165:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap4\n        /* \"contracts/Authorizer.sol\":17732:17869  function unchecked_at(AddressSet storage set, uint256 index) internal view returns (address) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a6b58eb42d3a51ccc02cc4f0f9163c26f20f64d944f055faae462f97aa19063e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c79380380610c798339818101604052602081101561003357600080fd5b5051610040600082610046565b5061013d565b6100508282610054565b5050565b6000828152602081815260409091206100769183906108036100b7821b17901c565b156100505760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b60006100c3838361011c565b61011257508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03861690811790915585549082528286019093526040902091909155610116565b5060005b92915050565b6001600160a01b031660009081526001919091016020526040902054151590565b610b2d8061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063988360a31161008c578063a73cb2ab11610066578063a73cb2ab146103e7578063ca15c8731461050a578063d547741f14610527578063fcd7627e14610553576100cf565b8063988360a3146102ff5780639be2a884146103ab578063a217fddf146103df576100cf565b806318b2cde9146100d4578063248a9ca3146101f95780632f2ff15d1461022857806336568abe146102545780639010d07c1461028057806391d14854146102bf575b600080fd5b6101f7600480360360408110156100ea57600080fd5b810190602081018135600160201b81111561010457600080fd5b82018360208201111561011657600080fd5b803590602001918460208302840111600160201b8311171561013757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561018657600080fd5b82018360208201111561019857600080fd5b803590602001918460208302840111600160201b831117156101b957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506105ff945050505050565b005b6102166004803603602081101561020f57600080fd5b5035610654565b60408051918252519081900360200190f35b6101f76004803603604081101561023e57600080fd5b50803590602001356001600160a01b0316610669565b6101f76004803603604081101561026a57600080fd5b50803590602001356001600160a01b031661069f565b6102a36004803603604081101561029657600080fd5b50803590602001356106c0565b604080516001600160a01b039092168252519081900360200190f35b6102eb600480360360408110156102d557600080fd5b50803590602001356001600160a01b03166106e1565b604080519115158252519081900360200190f35b6101f76004803603604081101561031557600080fd5b810190602081018135600160201b81111561032f57600080fd5b82018360208201111561034157600080fd5b803590602001918460208302840111600160201b8311171561036257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506106f99050565b6102eb600480360360608110156103c157600080fd5b508035906001600160a01b036020820135811691604001351661072a565b61021661073e565b6101f7600480360360408110156103fd57600080fd5b810190602081018135600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460208302840111600160201b8311171561044a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561049957600080fd5b8201836020820111156104ab57600080fd5b803590602001918460208302840111600160201b831117156104cc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610743945050505050565b6102166004803603602081101561052057600080fd5b5035610793565b6101f76004803603604081101561053d57600080fd5b50803590602001356001600160a01b03166107aa565b6101f76004803603604081101561056957600080fd5b810190602081018135600160201b81111561058357600080fd5b82018360208201111561059557600080fd5b803590602001918460208302840111600160201b831117156105b657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506107d29050565b61060b82518251610866565b60005b825181101561064f5761064783828151811061062657fe5b602002602001015183838151811061063a57fe5b60200260200101516107aa565b60010161060e565b505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546106919061068990336106e1565b6101a661086f565b61069b828261087d565b5050565b6106b66001600160a01b03821633146101a861086f565b61069b82826108d6565b60008281526020819052604081206106d8908361092f565b90505b92915050565b60008281526020819052604081206106d8908361094b565b60005b825181101561064f5761072283828151811061071457fe5b6020026020010151836107aa565b6001016106fc565b600061073684846106e1565b949350505050565b600081565b61074f82518251610866565b60005b825181101561064f5761078b83828151811061076a57fe5b602002602001015183838151811061077e57fe5b6020026020010151610669565b600101610752565b60008181526020819052604081206106db9061096c565b6000828152602081905260409020600201546106b6906107ca90336106e1565b6101a761086f565b60005b825181101561064f576107fb8382815181106107ed57fe5b602002602001015183610669565b6001016107d5565b600061080f838361094b565b61085e57508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b038616908117909155855490825282860190935260409020919091556106db565b5060006106db565b61069b81831460675b8161069b5761069b81610970565b60008281526020819052604090206108959082610803565b1561069b5760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b60008281526020819052604090206108ee90826109c3565b1561069b5760405133906001600160a01b0383169084907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a45050565b8154600090610941908310606461086f565b6106d88383610aca565b6001600160a01b031660009081526001919091016020526040902054151590565b5490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b03811660009081526001830160205260408120548015610ac05783546000198083019190810190600090879083908110610a0057fe5b60009182526020909120015487546001600160a01b0390911691508190889085908110610a2957fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918316815260018981019092526040902090840190558654879080610a7257fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03881682526001898101909152604082209190915594506106db9350505050565b60009150506106db565b6000826000018281548110610adb57fe5b6000918252602090912001546001600160a01b0316939250505056fea2646970667358221220a6b58eb42d3a51ccc02cc4f0f9163c26f20f64d944f055faae462f97aa19063e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC79 CODESIZE SUB DUP1 PUSH2 0xC79 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x40 PUSH1 0x0 DUP3 PUSH2 0x46 JUMP JUMPDEST POP PUSH2 0x13D JUMP JUMPDEST PUSH2 0x50 DUP3 DUP3 PUSH2 0x54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x76 SWAP2 DUP4 SWAP1 PUSH2 0x803 PUSH2 0xB7 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST ISZERO PUSH2 0x50 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3 DUP4 DUP4 PUSH2 0x11C JUMP JUMPDEST PUSH2 0x112 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x116 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xB2D DUP1 PUSH2 0x14C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x988360A3 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA73CB2AB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA73CB2AB EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xFCD7627E EQ PUSH2 0x553 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x988360A3 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x9BE2A884 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3DF JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x18B2CDE9 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x5FF SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x669 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x6F9 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x72A JUMP JUMPDEST PUSH2 0x216 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x743 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x793 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x7D2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x647 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x63A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x60E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x691 SWAP1 PUSH2 0x689 SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x87D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ PUSH2 0x1A8 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x722 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP5 DUP5 PUSH2 0x6E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x74F DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x78B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x76A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x77E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6DB SWAP1 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x7CA SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x7FB DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7ED JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP4 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x85E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6DB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x69B DUP2 DUP4 EQ PUSH1 0x67 JUMPDEST DUP2 PUSH2 0x69B JUMPI PUSH2 0x69B DUP2 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x895 SWAP1 DUP3 PUSH2 0x803 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8EE SWAP1 DUP3 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x941 SWAP1 DUP4 LT PUSH1 0x64 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x6D8 DUP4 DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAC0 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xA00 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xA29 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0xA72 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP5 POP PUSH2 0x6DB SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xB5 DUP15 0xB4 0x2D GASPRICE MLOAD 0xCC 0xC0 0x2C 0xC4 CREATE 0xF9 AND EXTCODECOPY 0x26 CALLCODE 0xF PUSH5 0xD944F055FA 0xAE CHAINID 0x2F SWAP8 0xAA NOT MOD RETURNDATACOPY PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "27151:1681:0:-:0;;;27208:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27208:83:0;27246:37;19511:4;27208:83;27246:10;:37::i;:::-;27208:83;27151:1681;;24422:112;24501:25;24512:4;24518:7;24501:10;:25::i;:::-;24422:112;;:::o;24873:186::-;24947:6;:12;;;;;;;;;;;:33;;24972:7;;24947:24;;;;;:33;;:::i;:::-;24943:109;;;25002:38;;25029:10;;-1:-1:-1;;;;;25002:38:0;;;25014:4;;25002:38;;;;;24873:186;;:::o;14271:420::-;14341:4;14363:20;14372:3;14377:5;14363:8;:20::i;:::-;14358:326;;-1:-1:-1;14400:23:0;;;;;;;;-1:-1:-1;14400:23:0;;;;;;;;;;;;-1:-1:-1;;;;;;14400:23:0;-1:-1:-1;;;;;14400:23:0;;;;;;;;14583:18;;14561:19;;;:12;;;:19;;;;;;:40;;;;14616:11;;14358:326;-1:-1:-1;14667:5:0;14358:326;14271:420;;;;:::o;16517:136::-;-1:-1:-1;;;;;16621:19:0;16597:4;16621:19;;;:12;;;;;:19;;;;;;:24;;;16517:136::o;27151:1681::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063988360a31161008c578063a73cb2ab11610066578063a73cb2ab146103e7578063ca15c8731461050a578063d547741f14610527578063fcd7627e14610553576100cf565b8063988360a3146102ff5780639be2a884146103ab578063a217fddf146103df576100cf565b806318b2cde9146100d4578063248a9ca3146101f95780632f2ff15d1461022857806336568abe146102545780639010d07c1461028057806391d14854146102bf575b600080fd5b6101f7600480360360408110156100ea57600080fd5b810190602081018135600160201b81111561010457600080fd5b82018360208201111561011657600080fd5b803590602001918460208302840111600160201b8311171561013757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561018657600080fd5b82018360208201111561019857600080fd5b803590602001918460208302840111600160201b831117156101b957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506105ff945050505050565b005b6102166004803603602081101561020f57600080fd5b5035610654565b60408051918252519081900360200190f35b6101f76004803603604081101561023e57600080fd5b50803590602001356001600160a01b0316610669565b6101f76004803603604081101561026a57600080fd5b50803590602001356001600160a01b031661069f565b6102a36004803603604081101561029657600080fd5b50803590602001356106c0565b604080516001600160a01b039092168252519081900360200190f35b6102eb600480360360408110156102d557600080fd5b50803590602001356001600160a01b03166106e1565b604080519115158252519081900360200190f35b6101f76004803603604081101561031557600080fd5b810190602081018135600160201b81111561032f57600080fd5b82018360208201111561034157600080fd5b803590602001918460208302840111600160201b8311171561036257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506106f99050565b6102eb600480360360608110156103c157600080fd5b508035906001600160a01b036020820135811691604001351661072a565b61021661073e565b6101f7600480360360408110156103fd57600080fd5b810190602081018135600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460208302840111600160201b8311171561044a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561049957600080fd5b8201836020820111156104ab57600080fd5b803590602001918460208302840111600160201b831117156104cc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610743945050505050565b6102166004803603602081101561052057600080fd5b5035610793565b6101f76004803603604081101561053d57600080fd5b50803590602001356001600160a01b03166107aa565b6101f76004803603604081101561056957600080fd5b810190602081018135600160201b81111561058357600080fd5b82018360208201111561059557600080fd5b803590602001918460208302840111600160201b831117156105b657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506107d29050565b61060b82518251610866565b60005b825181101561064f5761064783828151811061062657fe5b602002602001015183838151811061063a57fe5b60200260200101516107aa565b60010161060e565b505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546106919061068990336106e1565b6101a661086f565b61069b828261087d565b5050565b6106b66001600160a01b03821633146101a861086f565b61069b82826108d6565b60008281526020819052604081206106d8908361092f565b90505b92915050565b60008281526020819052604081206106d8908361094b565b60005b825181101561064f5761072283828151811061071457fe5b6020026020010151836107aa565b6001016106fc565b600061073684846106e1565b949350505050565b600081565b61074f82518251610866565b60005b825181101561064f5761078b83828151811061076a57fe5b602002602001015183838151811061077e57fe5b6020026020010151610669565b600101610752565b60008181526020819052604081206106db9061096c565b6000828152602081905260409020600201546106b6906107ca90336106e1565b6101a761086f565b60005b825181101561064f576107fb8382815181106107ed57fe5b602002602001015183610669565b6001016107d5565b600061080f838361094b565b61085e57508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b038616908117909155855490825282860190935260409020919091556106db565b5060006106db565b61069b81831460675b8161069b5761069b81610970565b60008281526020819052604090206108959082610803565b1561069b5760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b60008281526020819052604090206108ee90826109c3565b1561069b5760405133906001600160a01b0383169084907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a45050565b8154600090610941908310606461086f565b6106d88383610aca565b6001600160a01b031660009081526001919091016020526040902054151590565b5490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b03811660009081526001830160205260408120548015610ac05783546000198083019190810190600090879083908110610a0057fe5b60009182526020909120015487546001600160a01b0390911691508190889085908110610a2957fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918316815260018981019092526040902090840190558654879080610a7257fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03881682526001898101909152604082209190915594506106db9350505050565b60009150506106db565b6000826000018281548110610adb57fe5b6000918252602090912001546001600160a01b0316939250505056fea2646970667358221220a6b58eb42d3a51ccc02cc4f0f9163c26f20f64d944f055faae462f97aa19063e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x988360A3 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA73CB2AB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA73CB2AB EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xFCD7627E EQ PUSH2 0x553 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x988360A3 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x9BE2A884 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3DF JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x18B2CDE9 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x5FF SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x669 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x6F9 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x72A JUMP JUMPDEST PUSH2 0x216 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x743 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x793 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x7D2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x647 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x63A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x60E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x691 SWAP1 PUSH2 0x689 SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x87D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ PUSH2 0x1A8 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x722 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP5 DUP5 PUSH2 0x6E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x74F DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x78B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x76A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x77E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6DB SWAP1 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x7CA SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x7FB DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7ED JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP4 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x85E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6DB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x69B DUP2 DUP4 EQ PUSH1 0x67 JUMPDEST DUP2 PUSH2 0x69B JUMPI PUSH2 0x69B DUP2 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x895 SWAP1 DUP3 PUSH2 0x803 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8EE SWAP1 DUP3 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x941 SWAP1 DUP4 LT PUSH1 0x64 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x6D8 DUP4 DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAC0 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xA00 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xA29 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0xA72 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP5 POP PUSH2 0x6DB SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xB5 DUP15 0xB4 0x2D GASPRICE MLOAD 0xCC 0xC0 0x2C 0xC4 CREATE 0xF9 AND EXTCODECOPY 0x26 CALLCODE 0xF PUSH5 0xD944F055FA 0xAE CHAINID 0x2F SWAP8 0xAA NOT MOD RETURNDATACOPY PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "27151:1681:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28542:287;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28542:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28542:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28542:287:0;;;;;;;;-1:-1:-1;28542:287:0;;-1:-1:-1;;;;;28542:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28542:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28542:287:0;;-1:-1:-1;28542:287:0;;-1:-1:-1;;;;;28542:287:0:i;:::-;;22095:114;;;;;;;;;;;;;;;;-1:-1:-1;22095:114:0;;:::i;:::-;;;;;;;;;;;;;;;;22471:206;;;;;;;;;;;;;;;;-1:-1:-1;22471:206:0;;;;;;-1:-1:-1;;;;;22471:206:0;;:::i;23646:193::-;;;;;;;;;;;;;;;;-1:-1:-1;23646:193:0;;;;;;-1:-1:-1;;;;;23646:193:0;;:::i;21768:138::-;;;;;;;;;;;;;;;;-1:-1:-1;21768:138:0;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;21768:138:0;;;;;;;;;;;;;;20721:147;;;;;;;;;;;;;;;;-1:-1:-1;20721:147:0;;;;;;-1:-1:-1;;;;;20721:147:0;;:::i;:::-;;;;;;;;;;;;;;;;;;28276:188;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28276:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28276:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28276:188:0;;-1:-1:-1;;;28276:188:0;;-1:-1:-1;;;;;28276:188:0;;-1:-1:-1;28276:188:0;;-1:-1:-1;28276:188:0:i;27299:266::-;;;;;;;;;;;;;;;;-1:-1:-1;27299:266:0;;;-1:-1:-1;;;;;27299:266:0;;;;;;;;;;;;:::i;19466:49::-;;;:::i;27908:283::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27908:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27908:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27908:283:0;;;;;;;;-1:-1:-1;27908:283:0;;-1:-1:-1;;;;;27908:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27908:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27908:283:0;;-1:-1:-1;27908:283:0;;-1:-1:-1;;;;;27908:283:0:i;21042:127::-;;;;;;;;;;;;;;;;-1:-1:-1;21042:127:0;;:::i;22930:209::-;;;;;;;;;;;;;;;;-1:-1:-1;22930:209:0;;;;;;-1:-1:-1;;;;;22930:209:0;;:::i;27647:186::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27647:186:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27647:186:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27647:186:0;;-1:-1:-1;;;27647:186:0;;-1:-1:-1;;;;;27647:186:0;;-1:-1:-1;27647:186:0;;-1:-1:-1;27647:186:0:i;28542:287::-;28642:66;28678:5;:12;28692:8;:15;28642:35;:66::i;:::-;28724:9;28719:103;28743:5;:12;28739:1;:16;28719:103;;;28777:33;28788:5;28794:1;28788:8;;;;;;;;;;;;;;28798;28807:1;28798:11;;;;;;;;;;;;;;28777:10;:33::i;:::-;28757:3;;28719:103;;;;28542:287;;:::o;22095:114::-;22152:7;22179:12;;;;;;;;;;:22;;;;22095:114::o;22471:206::-;22564:6;:12;;;;;;;;;;:22;;;22547:84;;22556:43;;22588:10;22556:7;:43::i;:::-;10699:3;22547:8;:84::i;:::-;22644:25;22655:4;22661:7;22644:10;:25::i;:::-;22471:206;;:::o;23646:193::-;23725:67;-1:-1:-1;;;;;23734:21:0;;23745:10;23734:21;10827:3;23725:8;:67::i;:::-;23805:26;23817:4;23823:7;23805:11;:26::i;21768:138::-;21841:7;21868:12;;;;;;;;;;:30;;21892:5;21868:23;:30::i;:::-;21861:37;;21768:138;;;;;:::o;20721:147::-;20798:4;20822:12;;;;;;;;;;:38;;20852:7;20822:29;:38::i;28276:188::-;28363:9;28358:99;28382:5;:12;28378:1;:16;28358:99;;;28416:29;28427:5;28433:1;28427:8;;;;;;;;;;;;;;28437:7;28416:10;:29::i;:::-;28396:3;;28358:99;;27299:266;27427:4;27517:40;27539:8;27549:7;27517:21;:40::i;:::-;27510:47;27299:266;-1:-1:-1;;;;27299:266:0:o;19466:49::-;19511:4;19466:49;:::o;27908:283::-;28005:66;28041:5;:12;28055:8;:15;28005:35;:66::i;:::-;28087:9;28082:102;28106:5;:12;28102:1;:16;28082:102;;;28140:32;28150:5;28156:1;28150:8;;;;;;;;;;;;;;28160;28169:1;28160:11;;;;;;;;;;;;;;28140:9;:32::i;:::-;28120:3;;28082:102;;21042:127;21105:7;21132:12;;;;;;;;;;:29;;:27;:29::i;22930:209::-;23024:6;:12;;;;;;;;;;:22;;;23007:85;;23016:43;;23048:10;23016:7;:43::i;:::-;10761:3;23007:8;:85::i;27647:186::-;27733:9;27728:98;27752:5;:12;27748:1;:16;27728:98;;;27786:28;27796:5;27802:1;27796:8;;;;;;;;;;;;;;27806:7;27786:9;:28::i;:::-;27766:3;;27728:98;;14271:420;14341:4;14363:20;14372:3;14377:5;14363:8;:20::i;:::-;14358:326;;-1:-1:-1;14400:23:0;;;;;;;;-1:-1:-1;14400:23:0;;;;;;;;;;;;-1:-1:-1;;;;;;14400:23:0;-1:-1:-1;;;;;14400:23:0;;;;;;;;14583:18;;14561:19;;;:12;;;:19;;;;;;:40;;;;14616:11;;14358:326;-1:-1:-1;14667:5:0;14660:12;;25319:133;25398:46;25412:1;25407;:6;7923:3;3710:103;3780:9;3775:34;;3791:18;3799:9;3791:7;:18::i;24873:186::-;24947:6;:12;;;;;;;;;;:33;;24972:7;24947:24;:33::i;:::-;24943:109;;;25002:38;;25029:10;;-1:-1:-1;;;;;25002:38:0;;;25014:4;;25002:38;;;;;24873:186;;:::o;25067:190::-;25142:6;:12;;;;;;;;;;:36;;25170:7;25142:27;:36::i;:::-;25138:112;;;25200:38;;25227:10;;-1:-1:-1;;;;;25200:38:0;;;25212:4;;25200:38;;;;;25067:190;;:::o;17209:202::-;17312:18;;17283:7;;17303:58;;17312:26;-1:-1:-1;7756:3:0;17303:8;:58::i;:::-;17379:24;17392:3;17397:5;17379:12;:24::i;16517:136::-;-1:-1:-1;;;;;16621:19:0;16597:4;16621:19;;;:12;;;;;:19;;;;;;:24;;;16517:136::o;16739:116::-;16829:18;;16739:116::o;3925:3223::-;-1:-1:-1;;;6478:3:0;6471:79;;;6691:66;6685:4;6678:80;6835:1;6829:4;6822:15;5881:73;5077:2;5112:18;;;5158;;;5082:4;5154:29;;;5922:1;5918:14;5062:18;;;;5907:26;;;;5208:18;;;;5256;;;5252:29;;;5939:2;5935:17;5903:50;;;;5881:73;5876:3;5872:83;6904:4;6897:26;7134:3;;7124:14;14867:1564;-1:-1:-1;;;;;15079:19:0;;14940:4;15079:19;;;:12;;;:19;;;;;;15115:15;;15111:1313;;15563:18;;-1:-1:-1;;15514:14:0;;;;15563:22;;;;15490:21;;15563:3;;:22;;15850;;;;;;;;;;;;;;;;15967:26;;-1:-1:-1;;;;;15850:22:0;;;;-1:-1:-1;15850:22:0;;15967:3;;15979:13;;15967:26;;;;;;;;;;;;;;;;;;:38;;-1:-1:-1;;;;;;15967:38:0;-1:-1:-1;;;;;15967:38:0;;;;;;16073:23;;;;;-1:-1:-1;16073:12:0;;;:23;;;;;;16099:17;;;16073:43;;16225:17;;16073:12;;16225:17;;;;;;;;;;;;;;;-1:-1:-1;;16225:17:0;;;;;-1:-1:-1;;;;;;16225:17:0;;;;;;;;;-1:-1:-1;;;;;16320:19:0;;;;16225:17;16320:12;;;:19;;;;;;16313:26;;;;16225:17;-1:-1:-1;16356:11:0;;-1:-1:-1;;;;16356:11:0;15111:1313;16407:5;16400:12;;;;;17732:137;17816:7;17843:3;:11;;17855:5;17843:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17843:18:0;;17732:137;-1:-1:-1;;;17732:137:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "572200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "265",
								"canPerform(bytes32,address,address)": "1412",
								"getRoleAdmin(bytes32)": "1138",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "1190",
								"grantRole(bytes32,address)": "infinite",
								"grantRoles(bytes32[],address)": "infinite",
								"grantRolesToMany(bytes32[],address[])": "infinite",
								"hasRole(bytes32,address)": "1410",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"revokeRoles(bytes32[],address)": "infinite",
								"revokeRolesFromMany(bytes32[],address[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27151,
									"end": 28832,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27246,
									"end": 27283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 19511,
									"end": 19515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27246,
									"end": 27256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27246,
									"end": 27283,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27246,
									"end": 27283,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 27246,
									"end": 27283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27208,
									"end": 27291,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24422,
									"end": 24534,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24422,
									"end": 24534,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24501,
									"end": 24526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24512,
									"end": 24516,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24518,
									"end": 24525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24501,
									"end": 24511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24501,
									"end": 24526,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24501,
									"end": 24526,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24501,
									"end": 24526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24422,
									"end": 24534,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24422,
									"end": 24534,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24422,
									"end": 24534,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 24873,
									"end": 25059,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24873,
									"end": 25059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24980,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24947,
									"end": 24980,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24972,
									"end": 24979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24972,
									"end": 24979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551690"
								},
								{
									"begin": 24947,
									"end": 24971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 24947,
									"end": 24971,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24971,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24971,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24980,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24980,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 24947,
									"end": 24980,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24947,
									"end": 24980,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24947,
									"end": 24980,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24943,
									"end": 25052,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24943,
									"end": 25052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24943,
									"end": 25052,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25029,
									"end": 25039,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 25029,
									"end": 25039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25014,
									"end": 25018,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 25014,
									"end": 25018,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25002,
									"end": 25040,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 24873,
									"end": 25059,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24873,
									"end": 25059,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24873,
									"end": 25059,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14271,
									"end": 14691,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 14271,
									"end": 14691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14341,
									"end": 14345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14363,
									"end": 14383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 14372,
									"end": 14375,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14377,
									"end": 14382,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14363,
									"end": 14371,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 14363,
									"end": 14383,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 14363,
									"end": 14383,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 14363,
									"end": 14383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14358,
									"end": 14684,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 14358,
									"end": 14684,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14400,
									"end": 14423,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14583,
									"end": 14601,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 14583,
									"end": 14601,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14573,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14573,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14573,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14580,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14601,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14601,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14601,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14561,
									"end": 14601,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14616,
									"end": 14627,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14616,
									"end": 14627,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14358,
									"end": 14684,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 14358,
									"end": 14684,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14667,
									"end": 14672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14358,
									"end": 14684,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14358,
									"end": 14684,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14271,
									"end": 14691,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 14271,
									"end": 14691,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14271,
									"end": 14691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14271,
									"end": 14691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14271,
									"end": 14691,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 16517,
									"end": 16653,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 16517,
									"end": 16653,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16597,
									"end": 16601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16633,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16621,
									"end": 16633,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16633,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16633,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16640,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16645,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16645,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16621,
									"end": 16645,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16653,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27151,
									"end": 28832,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6b58eb42d3a51ccc02cc4f0f9163c26f20f64d944f055faae462f97aa19063e64736f6c63430007060033",
									".code": [
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "988360A3"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "A73CB2AB"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "A73CB2AB"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "FCD7627E"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "988360A3"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "9BE2A884"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "18B2CDE9"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 28832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28642,
											"end": 28708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28678,
											"end": 28683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28642,
											"end": 28677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28642,
											"end": 28708,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28642,
											"end": 28708,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28642,
											"end": 28708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28724,
											"end": 28733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28743,
											"end": 28748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28743,
											"end": 28755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 28740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 28755,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28788,
											"end": 28793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28794,
											"end": 28795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28807,
											"end": 28808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28777,
											"end": 28810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28777,
											"end": 28810,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28777,
											"end": 28810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 28760,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28757,
											"end": 28760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28719,
											"end": 28822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28829,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22152,
											"end": 22159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22191,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22201,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22179,
											"end": 22201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22209,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22586,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22564,
											"end": 22586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22564,
											"end": 22586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22547,
											"end": 22631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 22547,
											"end": 22631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22556,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22556,
											"end": 22599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22556,
											"end": 22563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22556,
											"end": 22599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22556,
											"end": 22599,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22556,
											"end": 22599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10699,
											"end": 10702,
											"name": "PUSH",
											"source": 0,
											"value": "1A6"
										},
										{
											"begin": 22547,
											"end": 22555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22547,
											"end": 22631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22547,
											"end": 22631,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 22547,
											"end": 22631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22644,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22655,
											"end": 22659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22661,
											"end": 22668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22644,
											"end": 22654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 22644,
											"end": 22669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22644,
											"end": 22669,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22644,
											"end": 22669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22471,
											"end": 22677,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23646,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23725,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23734,
											"end": 23755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23734,
											"end": 23755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23745,
											"end": 23755,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23734,
											"end": 23755,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10830,
											"name": "PUSH",
											"source": 0,
											"value": "1A8"
										},
										{
											"begin": 23725,
											"end": 23733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23725,
											"end": 23792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23725,
											"end": 23792,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23725,
											"end": 23792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23805,
											"end": 23831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23817,
											"end": 23821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23823,
											"end": 23830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23805,
											"end": 23816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23805,
											"end": 23831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21841,
											"end": 21848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21861,
											"end": 21898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21861,
											"end": 21898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21768,
											"end": 21906,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20721,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20798,
											"end": 20802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20822,
											"end": 20860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20852,
											"end": 20859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20822,
											"end": 20851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20822,
											"end": 20860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28276,
											"end": 28464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28358,
											"end": 28457,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28358,
											"end": 28457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28382,
											"end": 28387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28382,
											"end": 28394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28394,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28358,
											"end": 28457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28416,
											"end": 28445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28427,
											"end": 28432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28433,
											"end": 28434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28427,
											"end": 28435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28437,
											"end": 28444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28416,
											"end": 28426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28416,
											"end": 28445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28416,
											"end": 28445,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28416,
											"end": 28445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28396,
											"end": 28399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28358,
											"end": 28457,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27517,
											"end": 27557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27539,
											"end": 27547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27549,
											"end": 27556,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27517,
											"end": 27538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27517,
											"end": 27557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27517,
											"end": 27557,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27517,
											"end": 27557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27557,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27299,
											"end": 27565,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19511,
											"end": 19515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19466,
											"end": 19515,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27908,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28005,
											"end": 28071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 28041,
											"end": 28046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28041,
											"end": 28053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28055,
											"end": 28063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28055,
											"end": 28070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28005,
											"end": 28040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28005,
											"end": 28071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28005,
											"end": 28071,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 28005,
											"end": 28071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28082,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28082,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28106,
											"end": 28111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28106,
											"end": 28118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28118,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28082,
											"end": 28184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28082,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28082,
											"end": 28184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28140,
											"end": 28172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28150,
											"end": 28155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28156,
											"end": 28157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28150,
											"end": 28158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28160,
											"end": 28171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28140,
											"end": 28149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28140,
											"end": 28172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28140,
											"end": 28172,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28140,
											"end": 28172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28120,
											"end": 28123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28082,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28082,
											"end": 28184,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21042,
											"end": 21169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21105,
											"end": 21112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 21132,
											"end": 21161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21132,
											"end": 21159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21132,
											"end": 21161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22930,
											"end": 23139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23046,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23024,
											"end": 23046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23007,
											"end": 23092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23007,
											"end": 23092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23016,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23016,
											"end": 23059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23048,
											"end": 23058,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23016,
											"end": 23023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23016,
											"end": 23059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23016,
											"end": 23059,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23016,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10764,
											"name": "PUSH",
											"source": 0,
											"value": "1A7"
										},
										{
											"begin": 23007,
											"end": 23015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23007,
											"end": 23092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27647,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27728,
											"end": 27826,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27728,
											"end": 27826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27748,
											"end": 27749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27748,
											"end": 27764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27728,
											"end": 27826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27728,
											"end": 27826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27728,
											"end": 27826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27786,
											"end": 27814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27796,
											"end": 27801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27802,
											"end": 27803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27806,
											"end": 27813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27786,
											"end": 27795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27786,
											"end": 27814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27786,
											"end": 27814,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27786,
											"end": 27814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27766,
											"end": 27769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27728,
											"end": 27826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27728,
											"end": 27826,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14691,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14271,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 14372,
											"end": 14375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14363,
											"end": 14383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14363,
											"end": 14383,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 14363,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14358,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14358,
											"end": 14684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14573,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14561,
											"end": 14601,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14616,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14616,
											"end": 14627,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14358,
											"end": 14684,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14358,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14667,
											"end": 14672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14660,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14660,
											"end": 14672,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25319,
											"end": 25452,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25319,
											"end": 25452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25398,
											"end": 25444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25412,
											"end": 25413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25407,
											"end": 25408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25407,
											"end": 25413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7926,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3710,
											"end": 3813,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3710,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24873,
											"end": 25059,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24873,
											"end": 25059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 24947,
											"end": 24980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24972,
											"end": 24979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 24971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24947,
											"end": 24980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24947,
											"end": 24980,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 24947,
											"end": 24980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24943,
											"end": 25052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24943,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24943,
											"end": 25052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25029,
											"end": 25039,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25029,
											"end": 25039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25014,
											"end": 25018,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25014,
											"end": 25018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25002,
											"end": 25040,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 24873,
											"end": 25059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24873,
											"end": 25059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24873,
											"end": 25059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25067,
											"end": 25257,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25067,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 25142,
											"end": 25178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25142,
											"end": 25169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25142,
											"end": 25178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25142,
											"end": 25178,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 25142,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25138,
											"end": 25250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25227,
											"end": 25237,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25227,
											"end": 25237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25200,
											"end": 25238,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 25067,
											"end": 25257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25067,
											"end": 25257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25067,
											"end": 25257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17209,
											"end": 17411,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17209,
											"end": 17411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17283,
											"end": 17290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17283,
											"end": 17290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17303,
											"end": 17361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17303,
											"end": 17361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7756,
											"end": 7759,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17303,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17303,
											"end": 17361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17303,
											"end": 17361,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17303,
											"end": 17361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17379,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17392,
											"end": 17395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17379,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17379,
											"end": 17403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16517,
											"end": 16653,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16517,
											"end": 16653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16597,
											"end": 16601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16633,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16621,
											"end": 16633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16653,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16739,
											"end": 16855,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16739,
											"end": 16855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16739,
											"end": 16855,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3925,
											"end": 7148,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3925,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6678,
											"end": 6758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 6836,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6829,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6822,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5954,
											"name": "PUSH",
											"source": 0,
											"value": "42414C23000030"
										},
										{
											"begin": 5077,
											"end": 5079,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5086,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5918,
											"end": 5932,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5080,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5080,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5933,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5933,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 5252,
											"end": 5281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5252,
											"end": 5281,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5252,
											"end": 5281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5935,
											"end": 5952,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5953,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5953,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 5872,
											"end": 5955,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6904,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6897,
											"end": 6923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7137,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7134,
											"end": 7137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 16431,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14867,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15079,
											"end": 15091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15115,
											"end": 15130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15115,
											"end": 15130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15111,
											"end": 16424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15111,
											"end": 16424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15514,
											"end": 15528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15514,
											"end": 15528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15514,
											"end": 15528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15514,
											"end": 15528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15490,
											"end": 15511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15490,
											"end": 15511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15566,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15970,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 15992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 15992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 16005,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 16073,
											"end": 16085,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16116,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16116,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16085,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16320,
											"end": 16332,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16339,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16242,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16356,
											"end": 16367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16356,
											"end": 16367,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16356,
											"end": 16367,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15111,
											"end": 16424,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15111,
											"end": 16424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16407,
											"end": 16412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16400,
											"end": 16412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16400,
											"end": 16412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16400,
											"end": 16412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16400,
											"end": 16412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16400,
											"end": 16412,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17732,
											"end": 17869,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17732,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17816,
											"end": 17823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17843,
											"end": 17846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17843,
											"end": 17854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17855,
											"end": 17860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17732,
											"end": 17869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17732,
											"end": 17869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"canPerform(bytes32,address,address)": "9be2a884",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"grantRoles(bytes32[],address)": "fcd7627e",
							"grantRolesToMany(bytes32[],address[])": "a73cb2ab",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"revokeRoles(bytes32[],address)": "988360a3",
							"revokeRolesFromMany(bytes32[],address[])": "18b2cde9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"grantRolesToMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokeRolesFromMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic Authorizer implementation, based on OpenZeppelin's Access Control. Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not being truly used as such, since they each map to a single action identifier. This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to manage permissions across multiple contracts and to natively handle timelocks.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"grantRoles(bytes32[],address)\":{\"details\":\"Grants multiple roles to a single account.\"},\"grantRolesToMany(bytes32[],address[])\":{\"details\":\"Grants roles to a list of accounts.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"revokeRoles(bytes32[],address)\":{\"details\":\"Revokes multiple roles from a single account.\"},\"revokeRolesFromMany(bytes32[],address[])\":{\"details\":\"Revokes roles from a list of accounts.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"Authorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 624,
								"contract": "contracts/Authorizer.sol:Authorizer",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)620_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)620_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)620_storage"
							},
							"t_struct(AddressSet)415_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 410,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 414,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)620_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 617,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)415_storage"
									},
									{
										"astId": 619,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":13597:17872  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":13597:17872  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b572f9fe1feb4c0f4024a403c2240b154ef8e99856e2cda489f31aabda6bbf0a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b572f9fe1feb4c0f4024a403c2240b154ef8e99856e2cda489f31aabda6bbf0a64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH19 0xF9FE1FEB4C0F4024A403C2240B154EF8E99856 0xE2 0xCD LOG4 DUP10 RETURN BYTE 0xAB 0xDA PUSH12 0xBF0A64736F6C634300070600 CALLER ",
							"sourceMap": "13597:4275:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b572f9fe1feb4c0f4024a403c2240b154ef8e99856e2cda489f31aabda6bbf0a64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH19 0xF9FE1FEB4C0F4024A403C2240B154EF8E99856 0xE2 0xCD LOG4 DUP10 RETURN BYTE 0xAB 0xDA PUSH12 0xBF0A64736F6C634300070600 CALLER ",
							"sourceMap": "13597:4275:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"unchecked_at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13597,
									"end": 17872,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b572f9fe1feb4c0f4024a403c2240b154ef8e99856e2cda489f31aabda6bbf0a64736f6c63430007060033",
									".code": [
										{
											"begin": 13597,
											"end": 17872,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 17872,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Errors": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":7152:12855  library Errors {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":7152:12855  library Errors {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8542e83bb50f38a52546907e76a9b4eaf3581789f6285aa3a6cc253dab162db64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8542e83bb50f38a52546907e76a9b4eaf3581789f6285aa3a6cc253dab162db64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SLOAD 0x2E DUP4 0xBB POP RETURN DUP11 MSTORE SLOAD PUSH10 0x7E76A9B4EAF3581789F PUSH3 0x85AA3A PUSH13 0xC253DAB162DB64736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "7152:5703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8542e83bb50f38a52546907e76a9b4eaf3581789f6285aa3a6cc253dab162db64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SLOAD 0x2E DUP4 0xBB POP RETURN DUP11 MSTORE SLOAD PUSH10 0x7E76A9B4EAF3581789F PUSH3 0x85AA3A PUSH13 0xC253DAB162DB64736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "7152:5703:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 12855,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8542e83bb50f38a52546907e76a9b4eaf3581789f6285aa3a6cc253dab162db64736f6c63430007060033",
									".code": [
										{
											"begin": 7152,
											"end": 12855,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 12855,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAsset": {
					"abi": [],
					"devdoc": {
						"details": "This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"IAsset\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAuthorizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "actionId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								}
							],
							"name": "canPerform",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"canPerform(bytes32,address,address)": {
								"details": "Returns true if `account` can perform the action described by `actionId` in the contract `where`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canPerform(bytes32,address,address)": "9be2a884"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"InputHelpers": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":25291:26622  library InputHelpers {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":25291:26622  library InputHelpers {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e259f2524a6cf885e17493a2ef435c5b93cc21b61c2533af5817d3765f5ccabe64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e259f2524a6cf885e17493a2ef435c5b93cc21b61c2533af5817d3765f5ccabe64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 MSIZE CALLCODE MSTORE 0x4A PUSH13 0xF885E17493A2EF435C5B93CC21 0xB6 SHR 0x25 CALLER 0xAF PC OR 0xD3 PUSH23 0x5F5CCABE64736F6C634300070600330000000000000000 ",
							"sourceMap": "25291:1331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e259f2524a6cf885e17493a2ef435c5b93cc21b61c2533af5817d3765f5ccabe64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 MSIZE CALLCODE MSTORE 0x4A PUSH13 0xF885E17493A2EF435C5B93CC21 0xB6 SHR 0x25 CALLER 0xAF PC OR 0xD3 PUSH23 0x5F5CCABE64736F6C634300070600330000000000000000 ",
							"sourceMap": "25291:1331:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"ensureArrayIsSorted(address[] memory)": "infinite",
								"ensureArrayIsSorted(contract IAsset[] memory)": "infinite",
								"ensureArrayIsSorted(contract IERC20[] memory)": "infinite",
								"ensureInputLengthMatch(uint256,uint256)": "infinite",
								"ensureInputLengthMatch(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25291,
									"end": 26622,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e259f2524a6cf885e17493a2ef435c5b93cc21b61c2533af5817d3765f5ccabe64736f6c63430007060033",
									".code": [
										{
											"begin": 25291,
											"end": 26622,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25291,
											"end": 26622,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"InputHelpers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0x8541742940cf508d4e0b8eff6f2144f6e46151d4947d515a6f2e95580cf37ba6\",\"urls\":[\"bzz-raw://e9d8b06e4217c5e3126d61286c4aa60ed79534e2d67327a43cb7c5c78125cda0\",\"dweb:/ipfs/QmUiEFCEHATD1A8C8EzYEqKaaXYVPQUBkUKLWRXkAxNKw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/Authorizer.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Authorizer.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Authorizer.sol": {
				"ast": {
					"absolutePath": "contracts/Authorizer.sol",
					"exportedSymbols": {
						"AccessControl": [
							887
						],
						"Authorizer": [
							1195
						],
						"EnumerableSet": [
							610
						],
						"Errors": [
							405
						],
						"IAsset": [
							17
						],
						"IAuthorizer": [
							14
						],
						"IERC20": [
							94
						],
						"InputHelpers": [
							1014
						],
						"_require": [
							111
						],
						"_revert": [
							119
						]
					},
					"id": 1196,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 14,
							"linearizedBaseContracts": [
								14
							],
							"name": "IAuthorizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "58:123:0",
										"text": " @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."
									},
									"functionSelector": "9be2a884",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canPerform",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "actionId",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "217:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "244:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "where",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:84:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "314:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:6:0"
									},
									"scope": 14,
									"src": "187:133:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1196,
							"src": "29:294:0"
						},
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "327:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "354:315:0",
								"text": " @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."
							},
							"fullyImplemented": true,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IAsset",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1196,
							"src": "671:75:0"
						},
						{
							"id": 18,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "750:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 19,
								"nodeType": "StructuredDocumentation",
								"src": "777:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 94,
							"linearizedBaseContracts": [
								94
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "875:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "995:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:9:0"
									},
									"scope": 94,
									"src": "949:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1012:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:9:0"
									},
									"scope": 94,
									"src": "1092:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1168:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1407:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:35:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1460:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:6:0"
									},
									"scope": 94,
									"src": "1389:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1474:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1769:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1768:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:0"
									},
									"scope": 94,
									"src": "1750:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1841:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2519:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2536:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2518:33:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2570:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:6:0"
									},
									"scope": 94,
									"src": "2502:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2584:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2926:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2951:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2979:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:85:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:6:0"
									},
									"scope": 94,
									"src": "2894:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "3033:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 84,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3217:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3239:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3259:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3216:57:0"
									},
									"src": "3202:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3282:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 93,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3454:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3477:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3453:63:0"
									},
									"src": "3439:78:0"
								}
							],
							"scope": 1196,
							"src": "851:2669:0"
						},
						{
							"id": 95,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3524:23:0"
						},
						{
							"body": {
								"id": 110,
								"nodeType": "Block",
								"src": "3768:45:0",
								"statements": [
									{
										"condition": {
											"id": 104,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "!",
											"prefix": true,
											"src": "3779:10:0",
											"subExpression": {
												"id": 103,
												"name": "condition",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 98,
												"src": "3780:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 109,
										"nodeType": "IfStatement",
										"src": "3775:34:0",
										"trueBody": {
											"expression": {
												"arguments": [
													{
														"id": 106,
														"name": "errorCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3799:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													],
													"id": 105,
													"name": "_revert",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 119,
													"src": "3791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
														"typeString": "function (uint256) pure"
													}
												},
												"id": 107,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "3791:18:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_tuple$__$",
													"typeString": "tuple()"
												}
											},
											"id": 108,
											"nodeType": "ExpressionStatement",
											"src": "3791:18:0"
										}
									}
								]
							},
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "3573:135:0",
								"text": " @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n supported."
							},
							"id": 111,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_require",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 101,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 98,
										"mutability": "mutable",
										"name": "condition",
										"nodeType": "VariableDeclaration",
										"scope": 111,
										"src": "3728:14:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 97,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3728:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 100,
										"mutability": "mutable",
										"name": "errorCode",
										"nodeType": "VariableDeclaration",
										"scope": 111,
										"src": "3744:17:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 99,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3744:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3727:35:0"
							},
							"returnParameters": {
								"id": 102,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3768:0:0"
							},
							"scope": 1196,
							"src": "3710:103:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 118,
								"nodeType": "Block",
								"src": "3966:3182:0",
								"statements": [
									{
										"AST": {
											"nodeType": "YulBlock",
											"src": "4766:2379:0",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5045:42:0",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "errorCode",
																		"nodeType": "YulIdentifier",
																		"src": "5066:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5077:2:0",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5062:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:18:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5082:4:0",
																"type": "",
																"value": "0x30"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5058:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5058:29:0"
													},
													"variables": [
														{
															"name": "units",
															"nodeType": "YulTypedName",
															"src": "5049:5:0",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5099:31:0",
													"value": {
														"arguments": [
															{
																"name": "errorCode",
																"nodeType": "YulIdentifier",
																"src": "5116:9:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5127:2:0",
																"type": "",
																"value": "10"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "5112:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5112:18:0"
													},
													"variableNames": [
														{
															"name": "errorCode",
															"nodeType": "YulIdentifier",
															"src": "5099:9:0"
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5140:43:0",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "errorCode",
																		"nodeType": "YulIdentifier",
																		"src": "5162:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5173:2:0",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:18:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5178:4:0",
																"type": "",
																"value": "0x30"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5154:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5154:29:0"
													},
													"variables": [
														{
															"name": "tenths",
															"nodeType": "YulTypedName",
															"src": "5144:6:0",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5195:31:0",
													"value": {
														"arguments": [
															{
																"name": "errorCode",
																"nodeType": "YulIdentifier",
																"src": "5212:9:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5223:2:0",
																"type": "",
																"value": "10"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "5208:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5208:18:0"
													},
													"variableNames": [
														{
															"name": "errorCode",
															"nodeType": "YulIdentifier",
															"src": "5195:9:0"
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5236:45:0",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "errorCode",
																		"nodeType": "YulIdentifier",
																		"src": "5260:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5271:2:0",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5256:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5256:18:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5276:4:0",
																"type": "",
																"value": "0x30"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5252:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5252:29:0"
													},
													"variables": [
														{
															"name": "hundreds",
															"nodeType": "YulTypedName",
															"src": "5240:8:0",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5852:103:0",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5876:3:0",
																"type": "",
																"value": "200"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5885:16:0",
																		"type": "",
																		"value": "0x42414c23000000"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "units",
																						"nodeType": "YulIdentifier",
																						"src": "5911:5:0"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5922:1:0",
																								"type": "",
																								"value": "8"
																							},
																							{
																								"name": "tenths",
																								"nodeType": "YulIdentifier",
																								"src": "5925:6:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5918:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5918:14:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5907:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5907:26:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5939:2:0",
																						"type": "",
																						"value": "16"
																					},
																					{
																						"name": "hundreds",
																						"nodeType": "YulIdentifier",
																						"src": "5943:8:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5935:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5935:17:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5903:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5903:50:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5881:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:73:0"
															}
														],
														"functionName": {
															"name": "shl",
															"nodeType": "YulIdentifier",
															"src": "5872:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5872:83:0"
													},
													"variables": [
														{
															"name": "revertReason",
															"nodeType": "YulTypedName",
															"src": "5856:12:0",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6478:3:0",
																"type": "",
																"value": "0x0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6483:66:0",
																"type": "",
																"value": "0x08c379a000000000000000000000000000000000000000000000000000000000"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "6471:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "6471:79:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6471:79:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6685:4:0",
																"type": "",
																"value": "0x04"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6691:66:0",
																"type": "",
																"value": "0x0000000000000000000000000000000000000000000000000000000000000020"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "6678:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "6678:80:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6678:80:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6829:4:0",
																"type": "",
																"value": "0x24"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6835:1:0",
																"type": "",
																"value": "7"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "6822:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "6822:15:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6822:15:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6904:4:0",
																"type": "",
																"value": "0x44"
															},
															{
																"name": "revertReason",
																"nodeType": "YulIdentifier",
																"src": "6910:12:0"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "6897:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "6897:26:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6897:26:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7131:1:0",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7134:3:0",
																"type": "",
																"value": "100"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "7124:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "7124:14:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7124:14:0"
												}
											]
										},
										"evmVersion": "istanbul",
										"externalReferences": [
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5066:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5099:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5116:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5162:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5195:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5212:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5260:9:0",
												"valueSize": 1
											}
										],
										"id": 117,
										"nodeType": "InlineAssembly",
										"src": "4757:2388:0"
									}
								]
							},
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "3817:106:0",
								"text": " @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported."
							},
							"id": 119,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_revert",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 115,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 114,
										"mutability": "mutable",
										"name": "errorCode",
										"nodeType": "VariableDeclaration",
										"scope": 119,
										"src": "3942:17:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 113,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3942:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3941:19:0"
							},
							"returnParameters": {
								"id": 116,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3966:0:0"
							},
							"scope": 1196,
							"src": "3925:3223:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 405,
							"linearizedBaseContracts": [
								405
							],
							"name": "Errors",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 122,
									"mutability": "constant",
									"name": "ADD_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7187:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7228:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 125,
									"mutability": "constant",
									"name": "SUB_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7236:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 123,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7277:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 128,
									"mutability": "constant",
									"name": "SUB_UNDERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7285:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7285:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 127,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7327:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 131,
									"mutability": "constant",
									"name": "MUL_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7335:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7335:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 130,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7376:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 134,
									"mutability": "constant",
									"name": "ZERO_DIVISION",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7384:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7384:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7426:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 137,
									"mutability": "constant",
									"name": "DIV_INTERNAL",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7434:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7434:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7475:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 140,
									"mutability": "constant",
									"name": "X_OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7483:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7483:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7527:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 143,
									"mutability": "constant",
									"name": "Y_OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7535:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7535:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7579:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 146,
									"mutability": "constant",
									"name": "PRODUCT_OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7587:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7587:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7637:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 149,
									"mutability": "constant",
									"name": "INVALID_EXPONENT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7645:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7645:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7690:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 152,
									"mutability": "constant",
									"name": "OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7714:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7714:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7756:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 155,
									"mutability": "constant",
									"name": "UNSORTED_ARRAY",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7766:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7766:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313031",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7809:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										},
										"value": "101"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 158,
									"mutability": "constant",
									"name": "UNSORTED_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7819:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7819:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313032",
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7863:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102_by_1",
											"typeString": "int_const 102"
										},
										"value": "102"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 161,
									"mutability": "constant",
									"name": "INPUT_LENGTH_MISMATCH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7873:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7873:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313033",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7923:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_103_by_1",
											"typeString": "int_const 103"
										},
										"value": "103"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 164,
									"mutability": "constant",
									"name": "ZERO_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7933:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7933:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313034",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7972:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_104_by_1",
											"typeString": "int_const 104"
										},
										"value": "104"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 167,
									"mutability": "constant",
									"name": "MIN_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8005:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8005:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8044:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 170,
									"mutability": "constant",
									"name": "MAX_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8054:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 168,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8054:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323031",
										"id": 169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8093:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_201_by_1",
											"typeString": "int_const 201"
										},
										"value": "201"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 173,
									"mutability": "constant",
									"name": "MAX_SWAP_FEE_PERCENTAGE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8103:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8103:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323032",
										"id": 172,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8155:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_202_by_1",
											"typeString": "int_const 202"
										},
										"value": "202"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 176,
									"mutability": "constant",
									"name": "MIN_SWAP_FEE_PERCENTAGE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8165:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 174,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8165:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323033",
										"id": 175,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8217:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_203_by_1",
											"typeString": "int_const 203"
										},
										"value": "203"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 179,
									"mutability": "constant",
									"name": "MINIMUM_BPT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8227:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 177,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8227:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323034",
										"id": 178,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8267:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_204_by_1",
											"typeString": "int_const 204"
										},
										"value": "204"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 182,
									"mutability": "constant",
									"name": "CALLER_NOT_VAULT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8277:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 180,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8277:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323035",
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8322:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_205_by_1",
											"typeString": "int_const 205"
										},
										"value": "205"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 185,
									"mutability": "constant",
									"name": "UNINITIALIZED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8332:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 183,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8332:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323036",
										"id": 184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8374:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_206_by_1",
											"typeString": "int_const 206"
										},
										"value": "206"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 188,
									"mutability": "constant",
									"name": "BPT_IN_MAX_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8384:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8384:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323037",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8430:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_207_by_1",
											"typeString": "int_const 207"
										},
										"value": "207"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 191,
									"mutability": "constant",
									"name": "BPT_OUT_MIN_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8440:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 189,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8440:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323038",
										"id": 190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8487:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_208_by_1",
											"typeString": "int_const 208"
										},
										"value": "208"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 194,
									"mutability": "constant",
									"name": "EXPIRED_PERMIT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8497:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 192,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8497:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323039",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8540:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_209_by_1",
											"typeString": "int_const 209"
										},
										"value": "209"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 197,
									"mutability": "constant",
									"name": "MIN_AMP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8566:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8602:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 200,
									"mutability": "constant",
									"name": "MAX_AMP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8612:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8612:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333031",
										"id": 199,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8648:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_301_by_1",
											"typeString": "int_const 301"
										},
										"value": "301"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 203,
									"mutability": "constant",
									"name": "MIN_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8658:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 201,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333032",
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8697:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_302_by_1",
											"typeString": "int_const 302"
										},
										"value": "302"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 206,
									"mutability": "constant",
									"name": "MAX_STABLE_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8707:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8707:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333033",
										"id": 205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8753:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_303_by_1",
											"typeString": "int_const 303"
										},
										"value": "303"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 209,
									"mutability": "constant",
									"name": "MAX_IN_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8763:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8763:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333034",
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8804:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_304_by_1",
											"typeString": "int_const 304"
										},
										"value": "304"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 212,
									"mutability": "constant",
									"name": "MAX_OUT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8814:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8814:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333035",
										"id": 211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8856:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_305_by_1",
											"typeString": "int_const 305"
										},
										"value": "305"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 215,
									"mutability": "constant",
									"name": "MIN_BPT_IN_FOR_TOKEN_OUT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8866:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8866:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333036",
										"id": 214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8919:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_306_by_1",
											"typeString": "int_const 306"
										},
										"value": "306"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 218,
									"mutability": "constant",
									"name": "MAX_OUT_BPT_FOR_TOKEN_IN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8929:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8929:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333037",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8982:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_307_by_1",
											"typeString": "int_const 307"
										},
										"value": "307"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 221,
									"mutability": "constant",
									"name": "NORMALIZED_WEIGHT_INVARIANT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8992:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8992:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333038",
										"id": 220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9048:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_308_by_1",
											"typeString": "int_const 308"
										},
										"value": "308"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 224,
									"mutability": "constant",
									"name": "INVALID_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9058:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 222,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9058:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333039",
										"id": 223,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9100:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_309_by_1",
											"typeString": "int_const 309"
										},
										"value": "309"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 227,
									"mutability": "constant",
									"name": "UNHANDLED_JOIN_KIND",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9110:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 225,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9110:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333130",
										"id": 226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9158:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_310_by_1",
											"typeString": "int_const 310"
										},
										"value": "310"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 230,
									"mutability": "constant",
									"name": "ZERO_INVARIANT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9168:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9168:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333131",
										"id": 229,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9211:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_311_by_1",
											"typeString": "int_const 311"
										},
										"value": "311"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 233,
									"mutability": "constant",
									"name": "REENTRANCY",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9235:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9274:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 236,
									"mutability": "constant",
									"name": "SENDER_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9284:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 234,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9284:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343031",
										"id": 235,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9331:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_401_by_1",
											"typeString": "int_const 401"
										},
										"value": "401"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 239,
									"mutability": "constant",
									"name": "PAUSED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9341:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 237,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9341:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343032",
										"id": 238,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9376:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_402_by_1",
											"typeString": "int_const 402"
										},
										"value": "402"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 242,
									"mutability": "constant",
									"name": "PAUSE_WINDOW_EXPIRED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9386:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9386:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343033",
										"id": 241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9435:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_403_by_1",
											"typeString": "int_const 403"
										},
										"value": "403"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 245,
									"mutability": "constant",
									"name": "MAX_PAUSE_WINDOW_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9445:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9445:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343034",
										"id": 244,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9499:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_404_by_1",
											"typeString": "int_const 404"
										},
										"value": "404"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 248,
									"mutability": "constant",
									"name": "MAX_BUFFER_PERIOD_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9509:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 246,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9509:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343035",
										"id": 247,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9564:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_405_by_1",
											"typeString": "int_const 405"
										},
										"value": "405"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 251,
									"mutability": "constant",
									"name": "INSUFFICIENT_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9574:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 249,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9574:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343036",
										"id": 250,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9623:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_406_by_1",
											"typeString": "int_const 406"
										},
										"value": "406"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "INSUFFICIENT_ALLOWANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9633:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 252,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9633:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343037",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9684:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_407_by_1",
											"typeString": "int_const 407"
										},
										"value": "407"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 257,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_FROM_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9694:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 255,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9694:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343038",
										"id": 256,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9755:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_408_by_1",
											"typeString": "int_const 408"
										},
										"value": "408"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 260,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_TO_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9765:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 258,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9765:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343039",
										"id": 259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9824:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_409_by_1",
											"typeString": "int_const 409"
										},
										"value": "409"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 263,
									"mutability": "constant",
									"name": "ERC20_MINT_TO_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9834:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9834:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343130",
										"id": 262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9889:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_410_by_1",
											"typeString": "int_const 410"
										},
										"value": "410"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 266,
									"mutability": "constant",
									"name": "ERC20_BURN_FROM_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9899:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9899:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343131",
										"id": 265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9956:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_411_by_1",
											"typeString": "int_const 411"
										},
										"value": "411"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 269,
									"mutability": "constant",
									"name": "ERC20_APPROVE_FROM_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9966:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 267,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9966:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343132",
										"id": 268,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10026:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_412_by_1",
											"typeString": "int_const 412"
										},
										"value": "412"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 272,
									"mutability": "constant",
									"name": "ERC20_APPROVE_TO_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10036:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10036:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343133",
										"id": 271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10094:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_413_by_1",
											"typeString": "int_const 413"
										},
										"value": "413"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 275,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_EXCEEDS_ALLOWANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10104:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 273,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10104:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343134",
										"id": 274,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10165:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_414_by_1",
											"typeString": "int_const 414"
										},
										"value": "414"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 278,
									"mutability": "constant",
									"name": "ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10175:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10175:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343135",
										"id": 277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10240:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_415_by_1",
											"typeString": "int_const 415"
										},
										"value": "415"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 281,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_EXCEEDS_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10250:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 279,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10250:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343136",
										"id": 280,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10309:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_416_by_1",
											"typeString": "int_const 416"
										},
										"value": "416"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 284,
									"mutability": "constant",
									"name": "ERC20_BURN_EXCEEDS_ALLOWANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10319:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10319:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343137",
										"id": 283,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10376:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_417_by_1",
											"typeString": "int_const 417"
										},
										"value": "417"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 287,
									"mutability": "constant",
									"name": "SAFE_ERC20_CALL_FAILED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10386:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10386:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343138",
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10437:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_418_by_1",
											"typeString": "int_const 418"
										},
										"value": "418"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "ADDRESS_INSUFFICIENT_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10447:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10447:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343139",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10504:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_419_by_1",
											"typeString": "int_const 419"
										},
										"value": "419"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "ADDRESS_CANNOT_SEND_VALUE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10514:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10514:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343230",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10568:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_420_by_1",
											"typeString": "int_const 420"
										},
										"value": "420"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 296,
									"mutability": "constant",
									"name": "SAFE_CAST_VALUE_CANT_FIT_INT256",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10578:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10578:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343231",
										"id": 295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10638:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_421_by_1",
											"typeString": "int_const 421"
										},
										"value": "421"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 299,
									"mutability": "constant",
									"name": "GRANT_SENDER_NOT_ADMIN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10648:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 297,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10648:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343232",
										"id": 298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10699:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_422_by_1",
											"typeString": "int_const 422"
										},
										"value": "422"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 302,
									"mutability": "constant",
									"name": "REVOKE_SENDER_NOT_ADMIN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10709:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 300,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10709:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343233",
										"id": 301,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10761:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_423_by_1",
											"typeString": "int_const 423"
										},
										"value": "423"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 305,
									"mutability": "constant",
									"name": "RENOUNCE_SENDER_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10771:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 303,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10771:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343234",
										"id": 304,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10827:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_424_by_1",
											"typeString": "int_const 424"
										},
										"value": "424"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 308,
									"mutability": "constant",
									"name": "BUFFER_PERIOD_EXPIRED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10837:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 306,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10837:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343235",
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10887:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_425_by_1",
											"typeString": "int_const 425"
										},
										"value": "425"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 311,
									"mutability": "constant",
									"name": "INVALID_POOL_ID",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10913:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 309,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10913:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10957:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 314,
									"mutability": "constant",
									"name": "CALLER_NOT_POOL",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10967:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 312,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10967:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353031",
										"id": 313,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11011:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_501_by_1",
											"typeString": "int_const 501"
										},
										"value": "501"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 317,
									"mutability": "constant",
									"name": "SENDER_NOT_ASSET_MANAGER",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11021:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11021:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353032",
										"id": 316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11074:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_502_by_1",
											"typeString": "int_const 502"
										},
										"value": "502"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 320,
									"mutability": "constant",
									"name": "USER_DOESNT_ALLOW_RELAYER",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11084:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11084:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353033",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11138:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_503_by_1",
											"typeString": "int_const 503"
										},
										"value": "503"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 323,
									"mutability": "constant",
									"name": "INVALID_SIGNATURE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11148:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11148:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353034",
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11194:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_504_by_1",
											"typeString": "int_const 504"
										},
										"value": "504"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 326,
									"mutability": "constant",
									"name": "EXIT_BELOW_MIN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11204:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 324,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11204:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353035",
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11247:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_505_by_1",
											"typeString": "int_const 505"
										},
										"value": "505"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 329,
									"mutability": "constant",
									"name": "JOIN_ABOVE_MAX",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11257:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11257:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353036",
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11300:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_506_by_1",
											"typeString": "int_const 506"
										},
										"value": "506"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 332,
									"mutability": "constant",
									"name": "SWAP_LIMIT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11310:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 330,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11310:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353037",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11349:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_507_by_1",
											"typeString": "int_const 507"
										},
										"value": "507"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 335,
									"mutability": "constant",
									"name": "SWAP_DEADLINE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11359:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11359:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353038",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11401:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_508_by_1",
											"typeString": "int_const 508"
										},
										"value": "508"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 338,
									"mutability": "constant",
									"name": "CANNOT_SWAP_SAME_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11411:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11411:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353039",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11462:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_509_by_1",
											"typeString": "int_const 509"
										},
										"value": "509"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 341,
									"mutability": "constant",
									"name": "UNKNOWN_AMOUNT_IN_FIRST_SWAP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11472:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11472:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353130",
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11529:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_510_by_1",
											"typeString": "int_const 510"
										},
										"value": "510"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 344,
									"mutability": "constant",
									"name": "MALCONSTRUCTED_MULTIHOP_SWAP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11539:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11539:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353131",
										"id": 343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11596:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_511_by_1",
											"typeString": "int_const 511"
										},
										"value": "511"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 347,
									"mutability": "constant",
									"name": "INTERNAL_BALANCE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11606:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11606:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353132",
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11660:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_512_by_1",
											"typeString": "int_const 512"
										},
										"value": "512"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 350,
									"mutability": "constant",
									"name": "INSUFFICIENT_INTERNAL_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11670:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11670:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353133",
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11728:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_513_by_1",
											"typeString": "int_const 513"
										},
										"value": "513"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 353,
									"mutability": "constant",
									"name": "INVALID_ETH_INTERNAL_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11738:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11738:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353134",
										"id": 352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11795:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_514_by_1",
											"typeString": "int_const 514"
										},
										"value": "514"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 356,
									"mutability": "constant",
									"name": "INVALID_POST_LOAN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11805:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11805:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353135",
										"id": 355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11859:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_515_by_1",
											"typeString": "int_const 515"
										},
										"value": "515"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 359,
									"mutability": "constant",
									"name": "INSUFFICIENT_ETH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11869:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11869:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353136",
										"id": 358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11914:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_516_by_1",
											"typeString": "int_const 516"
										},
										"value": "516"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 362,
									"mutability": "constant",
									"name": "UNALLOCATED_ETH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11924:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11924:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353137",
										"id": 361,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11968:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_517_by_1",
											"typeString": "int_const 517"
										},
										"value": "517"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 365,
									"mutability": "constant",
									"name": "ETH_TRANSFER",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11978:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11978:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353138",
										"id": 364,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12019:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_518_by_1",
											"typeString": "int_const 518"
										},
										"value": "518"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 368,
									"mutability": "constant",
									"name": "CANNOT_USE_ETH_SENTINEL",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12029:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12029:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353139",
										"id": 367,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12081:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_519_by_1",
											"typeString": "int_const 519"
										},
										"value": "519"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 371,
									"mutability": "constant",
									"name": "TOKENS_MISMATCH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12091:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 369,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12091:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353230",
										"id": 370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12135:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_520_by_1",
											"typeString": "int_const 520"
										},
										"value": "520"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 374,
									"mutability": "constant",
									"name": "TOKEN_NOT_REGISTERED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12145:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12145:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353231",
										"id": 373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12194:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_521_by_1",
											"typeString": "int_const 521"
										},
										"value": "521"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 377,
									"mutability": "constant",
									"name": "TOKEN_ALREADY_REGISTERED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12204:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12204:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353232",
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12257:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_522_by_1",
											"typeString": "int_const 522"
										},
										"value": "522"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 380,
									"mutability": "constant",
									"name": "TOKENS_ALREADY_SET",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12267:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12267:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353233",
										"id": 379,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12314:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_523_by_1",
											"typeString": "int_const 523"
										},
										"value": "523"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 383,
									"mutability": "constant",
									"name": "TOKENS_LENGTH_MUST_BE_2",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12324:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 381,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12324:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353234",
										"id": 382,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12376:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_524_by_1",
											"typeString": "int_const 524"
										},
										"value": "524"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 386,
									"mutability": "constant",
									"name": "NONZERO_TOKEN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12386:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12386:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353235",
										"id": 385,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12436:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_525_by_1",
											"typeString": "int_const 525"
										},
										"value": "525"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 389,
									"mutability": "constant",
									"name": "BALANCE_TOTAL_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12446:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12446:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353236",
										"id": 388,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12497:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_526_by_1",
											"typeString": "int_const 526"
										},
										"value": "526"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 392,
									"mutability": "constant",
									"name": "POOL_NO_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12507:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 390,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12507:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353237",
										"id": 391,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12550:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_527_by_1",
											"typeString": "int_const 527"
										},
										"value": "527"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 395,
									"mutability": "constant",
									"name": "INSUFFICIENT_FLASH_LOAN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12560:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 393,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12560:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353238",
										"id": 394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12620:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_528_by_1",
											"typeString": "int_const 528"
										},
										"value": "528"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "SWAP_FEE_PERCENTAGE_TOO_HIGH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12645:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12645:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363030",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12702:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600_by_1",
											"typeString": "int_const 600"
										},
										"value": "600"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12712:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12712:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363031",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12775:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_601_by_1",
											"typeString": "int_const 601"
										},
										"value": "601"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 404,
									"mutability": "constant",
									"name": "INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12785:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12785:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363032",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12848:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_602_by_1",
											"typeString": "int_const 602"
										},
										"value": "602"
									},
									"visibility": "internal"
								}
							],
							"scope": 1196,
							"src": "7152:5703:0"
						},
						{
							"id": 406,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12859:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 407,
								"nodeType": "StructuredDocumentation",
								"src": "12886:709:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 415,
									"members": [
										{
											"constant": false,
											"id": 410,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "13896:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 409,
												"nodeType": "ArrayTypeName",
												"src": "13896:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 414,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "14049:36:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 413,
												"keyType": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "14049:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 610,
									"src": "13833:260:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "14347:344:0",
										"statements": [
											{
												"condition": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14362:21:0",
													"subExpression": {
														"arguments": [
															{
																"id": 426,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "14372:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															{
																"id": 427,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "14377:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 425,
															"name": "contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "14363:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14363:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "14645:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14667:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 424,
															"id": 452,
															"nodeType": "Return",
															"src": "14660:12:0"
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "14358:326:0",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "14385:254:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 435,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "14417:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 430,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 418,
																			"src": "14400:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "14400:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "14400:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14400:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "14400:23:0"
														},
														{
															"expression": {
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 438,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 418,
																			"src": "14561:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 441,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "14561:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 442,
																	"indexExpression": {
																		"id": 440,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "14574:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14561:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 443,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 418,
																			"src": "14583:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "14583:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "14583:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14561:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "14561:40:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14623:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 424,
															"id": 449,
															"nodeType": "Return",
															"src": "14616:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "14101:164:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14284:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 417,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "14284:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14308:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14283:39:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14341:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14340:6:0"
									},
									"scope": 610,
									"src": "14271:420:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "14946:1485:0",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "15058:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 468,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "15079:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "15079:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "15092:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15079:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15058:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "15115:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15115:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "16385:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16407:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 465,
															"id": 532,
															"nodeType": "Return",
															"src": "16400:12:0"
														}
													]
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "15111:1313:0",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "15132:1247:0",
													"statements": [
														{
															"assignments": [
																477
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 477,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 530,
																	"src": "15490:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 476,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15490:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 481,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 478,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "15514:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15527:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "15514:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15490:38:0"
														},
														{
															"assignments": [
																483
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 483,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 530,
																	"src": "15543:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 482,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15543:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 489,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 484,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "15563:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "15563:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15563:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "15563:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15543:42:0"
														},
														{
															"assignments": [
																491
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 491,
																	"mutability": "mutable",
																	"name": "lastValue",
																	"nodeType": "VariableDeclaration",
																	"scope": 530,
																	"src": "15830:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15830:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 496,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 492,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "15850:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																			"typeString": "struct EnumerableSet.AddressSet storage pointer"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 410,
																	"src": "15850:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 495,
																"indexExpression": {
																	"id": 494,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "15862:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15850:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15830:42:0"
														},
														{
															"expression": {
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 497,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "15967:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "15967:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 501,
																	"indexExpression": {
																		"id": 499,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "15979:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15967:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 502,
																	"name": "lastValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "15996:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15967:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "15967:38:0"
														},
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 505,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "16073:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "16073:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 509,
																	"indexExpression": {
																		"id": 507,
																		"name": "lastValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "16086:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16073:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 510,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "16099:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16115:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "16099:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16073:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "16073:43:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 515,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "16225:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "16225:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "16225:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16225:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "16225:17:0"
														},
														{
															"expression": {
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "16313:26:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 522,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "16320:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "16320:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 525,
																	"indexExpression": {
																		"id": 524,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "16333:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16320:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 527,
															"nodeType": "ExpressionStatement",
															"src": "16313:26:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16363:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 465,
															"id": 529,
															"nodeType": "Return",
															"src": "16356:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "14699:162:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "14883:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 458,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "14883:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "14907:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14882:39:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "14940:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14939:6:0"
									},
									"scope": 610,
									"src": "14867:1564:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "16603:50:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 546,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "16621:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "16621:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 549,
														"indexExpression": {
															"id": 548,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "16634:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16621:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16644:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16621:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 545,
												"id": 552,
												"nodeType": "Return",
												"src": "16614:31:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "16439:72:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "16535:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 538,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "16535:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "16559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16534:39:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "16597:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16596:6:0"
									},
									"scope": 610,
									"src": "16517:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "16811:44:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 562,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "16829:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "16829:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16829:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 565,
												"nodeType": "Return",
												"src": "16822:25:0"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "16661:72:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "16755:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 556,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "16755:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16754:24:0"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "16802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16801:9:0"
									},
									"scope": 610,
									"src": "16739:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "17292:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 578,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "17312:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																			"typeString": "struct EnumerableSet.AddressSet storage pointer"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 410,
																	"src": "17312:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "17312:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 581,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "17333:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17312:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 583,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "17340:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "OUT_OF_BOUNDS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "17340:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 577,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "17303:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17303:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "17303:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "17392:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														{
															"id": 589,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "17397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "unchecked_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "17379:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17379:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 576,
												"id": 591,
												"nodeType": "Return",
												"src": "17372:31:0"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "16863:340:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "17221:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 569,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "17221:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "17245:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17220:39:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "17283:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17282:9:0"
									},
									"scope": 610,
									"src": "17209:202:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "17825:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 603,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "17843:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "17843:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 606,
													"indexExpression": {
														"id": 605,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "17855:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17843:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 602,
												"id": 607,
												"nodeType": "Return",
												"src": "17836:25:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "17419:307:0",
										"text": " @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\n than {length}). O(1).\n This function performs one less storage read than {at}, but should only be used when `index` is known to be\n within bounds."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unchecked_at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "17754:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 595,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "17754:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "17778:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17753:39:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "17816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17815:9:0"
									},
									"scope": 610,
									"src": "17732:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1196,
							"src": "13597:4275:0"
						},
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17876:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 612,
								"nodeType": "StructuredDocumentation",
								"src": "17903:1310:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 887,
							"linearizedBaseContracts": [
								887
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 615,
									"libraryName": {
										"id": 613,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 610,
										"src": "19260:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$610",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19254:49:0",
									"typeName": {
										"id": 614,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 415,
										"src": "19278:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 620,
									"members": [
										{
											"constant": false,
											"id": 617,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"scope": 620,
											"src": "19338:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"id": 616,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 415,
												"src": "19338:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 619,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"scope": 620,
											"src": "19381:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 618,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "19381:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 887,
									"src": "19311:95:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 624,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "19414:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 623,
										"keyType": {
											"id": 621,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "19422:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "19414:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 622,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 620,
											"src": "19433:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$620_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 627,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "19466:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 625,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "19466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 626,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19511:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "19524:299:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 636,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "19852:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 629,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "19874:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "19909:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 633,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19851:87:0"
									},
									"src": "19829:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "19947:203:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 645,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "20174:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 638,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "20196:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "20221:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20173:71:0"
									},
									"src": "20156:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "20253:281:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 654,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20558:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 647,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20580:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20605:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20557:71:0"
									},
									"src": "20540:89:0"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "20804:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "20852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 664,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "20822:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 666,
																"indexExpression": {
																	"id": 665,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "20829:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20822:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "20822:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "20822:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20822:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 663,
												"id": 671,
												"nodeType": "Return",
												"src": "20815:45:0"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "20637:78:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "20738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "20752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20737:31:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "20798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20797:6:0"
									},
									"scope": 887,
									"src": "20721:147:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "21114:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 681,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "21132:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 683,
																"indexExpression": {
																	"id": 682,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "21139:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21132:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "21132:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 567,
														"src": "21132:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21132:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 687,
												"nodeType": "Return",
												"src": "21125:36:0"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "20876:160:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "21070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 675,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21069:14:0"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "21105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21104:9:0"
									},
									"scope": 887,
									"src": "21042:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "21850:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "21892:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 699,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "21868:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 701,
																"indexExpression": {
																	"id": 700,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "21875:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21868:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "21868:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 593,
														"src": "21868:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21868:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 698,
												"id": 706,
												"nodeType": "Return",
												"src": "21861:37:0"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "21177:585:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "21791:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "21805:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21790:29:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "21841:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21840:9:0"
									},
									"scope": 887,
									"src": "21768:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "22161:48:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 716,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "22179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 718,
														"indexExpression": {
															"id": 717,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "22186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22179:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$620_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 619,
													"src": "22179:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 715,
												"id": 720,
												"nodeType": "Return",
												"src": "22172:29:0"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "21914:175:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "22117:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22116:14:0"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "22152:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22151:9:0"
									},
									"scope": 887,
									"src": "22095:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "22536:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 732,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "22564:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 734,
																		"indexExpression": {
																			"id": 733,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "22571:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22564:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$620_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 619,
																	"src": "22564:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 736,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "22588:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "22588:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 731,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "22556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22556:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 739,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "22601:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "GRANT_SENDER_NOT_ADMIN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 299,
															"src": "22601:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "22547:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22547:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "22547:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "22655:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 745,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "22661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 743,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "22644:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22644:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "22644:25:0"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "22217:248:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "22490:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 724,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "22504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22489:31:0"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22536:0:0"
									},
									"scope": 887,
									"src": "22471:206:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "22996:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 759,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "23024:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 761,
																		"indexExpression": {
																			"id": 760,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "23031:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23024:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$620_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 762,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 619,
																	"src": "23024:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 763,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "23048:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23048:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 758,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "23016:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23016:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 766,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "23061:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "REVOKE_SENDER_NOT_ADMIN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "23061:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "23007:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23007:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "23007:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "23117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 772,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "23123:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 770,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "23105:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23105:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "23105:26:0"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "22685:239:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had already been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "22950:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 751,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "22964:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22949:31:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22996:0:0"
									},
									"scope": 887,
									"src": "22930:209:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "23714:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "23734:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 786,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "23745:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "23745:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "23734:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 789,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "23757:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RENOUNCE_SENDER_NOT_ALLOWED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 305,
															"src": "23757:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "23725:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23725:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "23725:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "23817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 795,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "23823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 793,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "23805:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23805:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "23805:26:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "23147:493:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "23668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "23682:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23667:31:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23714:0:0"
									},
									"scope": 887,
									"src": "23646:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "24490:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "24512:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 809,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "24518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 807,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "24501:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24501:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "24501:25:0"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "23847:569:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "24442:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "24456:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24441:31:0"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24490:0:0"
									},
									"scope": 887,
									"src": "24422:112:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "24739:126:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 822,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "24772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 823,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "24778:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 825,
																"indexExpression": {
																	"id": 824,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "24785:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24778:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 619,
															"src": "24778:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 827,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "24802:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 821,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "24755:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24755:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "EmitStatement",
												"src": "24750:62:0"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 830,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "24823:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 832,
															"indexExpression": {
																"id": 831,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "24830:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24823:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$620_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 619,
														"src": "24823:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 834,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "24848:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "24823:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "24823:34:0"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "24542:118:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "24689:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "24703:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24688:33:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24739:0:0"
									},
									"scope": 887,
									"src": "24666:199:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "24932:127:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 850,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "24972:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 845,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "24947:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 847,
																"indexExpression": {
																	"id": 846,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "24954:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24947:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "24947:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 456,
														"src": "24947:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24947:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "24943:109:0",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "24982:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "25014:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 854,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "25020:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 855,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "25029:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "25029:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 852,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "25002:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25002:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "EmitStatement",
															"src": "24997:43:0"
														}
													]
												}
											}
										]
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "24893:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 839,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "24907:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24892:31:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24932:0:0"
									},
									"scope": 887,
									"src": "24873:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "25127:130:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 874,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "25170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 869,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "25142:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 871,
																"indexExpression": {
																	"id": 870,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "25149:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25142:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "25142:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 536,
														"src": "25142:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25142:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "25138:112:0",
												"trueBody": {
													"id": 883,
													"nodeType": "Block",
													"src": "25180:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 877,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "25212:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 878,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "25218:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 879,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "25227:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "25227:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 876,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "25200:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25200:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 882,
															"nodeType": "EmitStatement",
															"src": "25195:43:0"
														}
													]
												}
											}
										]
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "25088:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "25102:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25087:31:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25127:0:0"
									},
									"scope": 887,
									"src": "25067:190:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1196,
							"src": "19215:6045:0"
						},
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25264:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014
							],
							"name": "InputHelpers",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "25387:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "25407:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 897,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "25412:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25407:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 899,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "25415:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "INPUT_LENGTH_MISMATCH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 161,
															"src": "25415:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "25398:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25398:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "25398:46:0"
											}
										]
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureInputLengthMatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "25351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "25362:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25350:22:0"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25387:0:0"
									},
									"scope": 1014,
									"src": "25319:133:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "25573:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 914,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "25593:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 915,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "25598:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25593:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 917,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "25603:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 918,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "25608:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25593:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 921,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "25611:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "INPUT_LENGTH_MISMATCH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 161,
															"src": "25611:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "25584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25584:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "25584:56:0"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureInputLengthMatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "25502:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "25522:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "25542:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25491:67:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25573:0:0"
									},
									"scope": 1014,
									"src": "25460:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "25722:215:0",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "addressArray",
														"nodeType": "VariableDeclaration",
														"scope": 943,
														"src": "25733:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25733:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 935,
															"nodeType": "ArrayTypeName",
															"src": "25733:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"nodeType": "VariableDeclarationStatement",
												"src": "25733:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "25839:47:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25854:21:0",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "25870:5:0"
															},
															"variableNames": [
																{
																	"name": "addressArray",
																	"nodeType": "YulIdentifier",
																	"src": "25854:12:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 936,
														"isOffset": false,
														"isSlot": false,
														"src": "25854:12:0",
														"valueSize": 1
													},
													{
														"declaration": 929,
														"isOffset": false,
														"isSlot": false,
														"src": "25870:5:0",
														"valueSize": 1
													}
												],
												"id": 938,
												"nodeType": "InlineAssembly",
												"src": "25830:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "addressArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "25916:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 939,
														"name": "ensureArrayIsSorted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															944,
															962,
															1013
														],
														"referencedDeclaration": 1013,
														"src": "25896:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25896:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "25896:33:0"
											}
										]
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureArrayIsSorted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "array",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "25685:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$17_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 927,
														"name": "IAsset",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 17,
														"src": "25685:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$17",
															"typeString": "contract IAsset"
														}
													},
													"id": 928,
													"nodeType": "ArrayTypeName",
													"src": "25685:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$17_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25684:23:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25722:0:0"
									},
									"scope": 1014,
									"src": "25656:281:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "26011:215:0",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "addressArray",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "26022:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 952,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 953,
															"nodeType": "ArrayTypeName",
															"src": "26022:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"nodeType": "VariableDeclarationStatement",
												"src": "26022:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "26128:47:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26143:21:0",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "26159:5:0"
															},
															"variableNames": [
																{
																	"name": "addressArray",
																	"nodeType": "YulIdentifier",
																	"src": "26143:12:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "26143:12:0",
														"valueSize": 1
													},
													{
														"declaration": 947,
														"isOffset": false,
														"isSlot": false,
														"src": "26159:5:0",
														"valueSize": 1
													}
												],
												"id": 956,
												"nodeType": "InlineAssembly",
												"src": "26119:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "addressArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "26205:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 957,
														"name": "ensureArrayIsSorted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															944,
															962,
															1013
														],
														"referencedDeclaration": 1013,
														"src": "26185:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26185:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "26185:33:0"
											}
										]
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureArrayIsSorted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "array",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "25974:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$94_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 945,
														"name": "IERC20",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 94,
														"src": "25974:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$94",
															"typeString": "contract IERC20"
														}
													},
													"id": 946,
													"nodeType": "ArrayTypeName",
													"src": "25974:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$94_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25973:23:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26011:0:0"
									},
									"scope": 1014,
									"src": "25945:281:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "26301:318:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 968,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "26316:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "26316:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "32",
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26331:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "26316:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 974,
												"nodeType": "IfStatement",
												"src": "26312:55:0",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "26334:33:0",
													"statements": [
														{
															"functionReturnParameters": 967,
															"id": 972,
															"nodeType": "Return",
															"src": "26349:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "previous",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "26379:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 975,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26379:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"baseExpression": {
														"id": 977,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "26398:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 979,
													"indexExpression": {
														"hexValue": "30",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26404:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26398:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26379:27:0"
											},
											{
												"body": {
													"id": 1010,
													"nodeType": "Block",
													"src": "26460:152:0",
													"statements": [
														{
															"assignments": [
																993
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 993,
																	"mutability": "mutable",
																	"name": "current",
																	"nodeType": "VariableDeclaration",
																	"scope": 1010,
																	"src": "26475:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 992,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26475:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 997,
															"initialValue": {
																"baseExpression": {
																	"id": 994,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "26493:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 996,
																"indexExpression": {
																	"id": 995,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "26499:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26493:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26475:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 999,
																			"name": "previous",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "26525:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1000,
																			"name": "current",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "26536:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "26525:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"expression": {
																			"id": 1002,
																			"name": "Errors",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "26545:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																				"typeString": "type(library Errors)"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "UNSORTED_ARRAY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 155,
																		"src": "26545:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 998,
																	"name": "_require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "26516:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (bool,uint256) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26516:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "26516:51:0"
														},
														{
															"expression": {
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1006,
																	"name": "previous",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "26582:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1007,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "26593:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "26582:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1009,
															"nodeType": "ExpressionStatement",
															"src": "26582:18:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "26437:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 986,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "26441:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "26441:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26437:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"initializationExpression": {
													"assignments": [
														982
													],
													"declarations": [
														{
															"constant": false,
															"id": 982,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1011,
															"src": "26422:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 981,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "26422:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 984,
													"initialValue": {
														"hexValue": "31",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "26422:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "26455:3:0",
														"subExpression": {
															"id": 989,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "26457:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 991,
													"nodeType": "ExpressionStatement",
													"src": "26455:3:0"
												},
												"nodeType": "ForStatement",
												"src": "26417:195:0"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureArrayIsSorted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "array",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "26263:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 963,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "26263:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 964,
													"nodeType": "ArrayTypeName",
													"src": "26263:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26262:24:0"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26301:0:0"
									},
									"scope": 1014,
									"src": "26234:385:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1196,
							"src": "25291:1331:0"
						},
						{
							"id": 1015,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26626:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1017,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 887,
										"src": "27174:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$887",
											"typeString": "contract AccessControl"
										}
									},
									"id": 1018,
									"nodeType": "InheritanceSpecifier",
									"src": "27174:13:0"
								},
								{
									"baseName": {
										"id": 1019,
										"name": "IAuthorizer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 14,
										"src": "27189:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAuthorizer_$14",
											"typeString": "contract IAuthorizer"
										}
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "27189:11:0"
								}
							],
							"contractDependencies": [
								14,
								887
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1016,
								"nodeType": "StructuredDocumentation",
								"src": "26653:496:0",
								"text": " @dev Basic Authorizer implementation, based on OpenZeppelin's Access Control.\n Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not\n being truly used as such, since they each map to a single action identifier.\n This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to\n manage permissions across multiple contracts and to natively handle timelocks."
							},
							"fullyImplemented": true,
							"id": 1195,
							"linearizedBaseContracts": [
								1195,
								14,
								887
							],
							"name": "Authorizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "27235:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "27257:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1027,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "27277:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1025,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "27246:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27246:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "27246:37:0"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "27220:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27219:15:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27235:0:0"
									},
									"scope": 1195,
									"src": "27208:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "27433:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "actionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "27539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1046,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "27549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1043,
															"name": "AccessControl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "27517:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AccessControl_$887_$",
																"typeString": "type(contract AccessControl)"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 673,
														"src": "27517:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27517:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1042,
												"id": 1048,
												"nodeType": "Return",
												"src": "27510:47:0"
											}
										]
									},
									"functionSelector": "9be2a884",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canPerform",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1039,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27409:8:0"
									},
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "actionId",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "27329:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "27356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "27382:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27318:78:0"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "27427:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27426:6:0"
									},
									"scope": 1195,
									"src": "27299:266:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "27717:116:0",
										"statements": [
											{
												"body": {
													"id": 1077,
													"nodeType": "Block",
													"src": "27771:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1071,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "27796:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1073,
																		"indexExpression": {
																			"id": 1072,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "27802:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27796:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1074,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "27806:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1070,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "27786:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27786:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "27786:28:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "27748:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1064,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "27752:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27752:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27748:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"initializationExpression": {
													"assignments": [
														1060
													],
													"declarations": [
														{
															"constant": false,
															"id": 1060,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1078,
															"src": "27733:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1059,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27733:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1062,
													"initialValue": {
														"hexValue": "30",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27745:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27733:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "27766:3:0",
														"subExpression": {
															"id": 1067,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "27766:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1069,
													"nodeType": "ExpressionStatement",
													"src": "27766:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27728:98:0"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "27573:68:0",
										"text": " @dev Grants multiple roles to a single account."
									},
									"functionSelector": "fcd7627e",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRoles",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "27667:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1052,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "27667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1053,
													"nodeType": "ArrayTypeName",
													"src": "27667:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "27691:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27666:41:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27717:0:0"
									},
									"scope": 1195,
									"src": "27647:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "27994:197:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "28041:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28041:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1095,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "28055:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28055:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1090,
															"name": "InputHelpers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "28005:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InputHelpers_$1014_$",
																"typeString": "type(library InputHelpers)"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ensureInputLengthMatch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "28005:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28005:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "28005:66:0"
											},
											{
												"body": {
													"id": 1119,
													"nodeType": "Block",
													"src": "28125:59:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1111,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "28150:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1113,
																		"indexExpression": {
																			"id": 1112,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "28156:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28150:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1114,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "28160:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1116,
																		"indexExpression": {
																			"id": 1115,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "28169:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28160:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1110,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "28140:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28140:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "28140:32:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1103,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "28102:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1104,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "28106:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28106:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28102:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"initializationExpression": {
													"assignments": [
														1100
													],
													"declarations": [
														{
															"constant": false,
															"id": 1100,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1120,
															"src": "28087:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1099,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "28087:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1102,
													"initialValue": {
														"hexValue": "30",
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28099:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "28087:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "28120:3:0",
														"subExpression": {
															"id": 1107,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "28120:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ExpressionStatement",
													"src": "28120:3:0"
												},
												"nodeType": "ForStatement",
												"src": "28082:102:0"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "27841:61:0",
										"text": " @dev Grants roles to a list of accounts."
									},
									"functionSelector": "a73cb2ab",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRolesToMany",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "27934:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1082,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "27934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1083,
													"nodeType": "ArrayTypeName",
													"src": "27934:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "27958:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1085,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "27958:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1086,
													"nodeType": "ArrayTypeName",
													"src": "27958:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27933:51:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27994:0:0"
									},
									"scope": 1195,
									"src": "27908:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "28347:117:0",
										"statements": [
											{
												"body": {
													"id": 1149,
													"nodeType": "Block",
													"src": "28401:56:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1143,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "28427:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1145,
																		"indexExpression": {
																			"id": 1144,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "28433:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28427:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1146,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "28437:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1142,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "28416:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28416:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1148,
															"nodeType": "ExpressionStatement",
															"src": "28416:29:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "28378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1136,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "28382:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28382:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28378:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"initializationExpression": {
													"assignments": [
														1132
													],
													"declarations": [
														{
															"constant": false,
															"id": 1132,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1150,
															"src": "28363:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1131,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "28363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1134,
													"initialValue": {
														"hexValue": "30",
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28375:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "28363:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "28396:3:0",
														"subExpression": {
															"id": 1139,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "28396:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1141,
													"nodeType": "ExpressionStatement",
													"src": "28396:3:0"
												},
												"nodeType": "ForStatement",
												"src": "28358:99:0"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "28199:71:0",
										"text": " @dev Revokes multiple roles from a single account."
									},
									"functionSelector": "988360a3",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRoles",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "28297:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1124,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "28297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1125,
													"nodeType": "ArrayTypeName",
													"src": "28297:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "28321:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28296:41:0"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28347:0:0"
									},
									"scope": 1195,
									"src": "28276:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "28631:198:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1165,
																"name": "roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "28678:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1167,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "28692:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28692:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1162,
															"name": "InputHelpers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "28642:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InputHelpers_$1014_$",
																"typeString": "type(library InputHelpers)"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ensureInputLengthMatch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "28642:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28642:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "28642:66:0"
											},
											{
												"body": {
													"id": 1191,
													"nodeType": "Block",
													"src": "28762:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1183,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "28788:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1185,
																		"indexExpression": {
																			"id": 1184,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "28794:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28788:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1186,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "28798:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1188,
																		"indexExpression": {
																			"id": 1187,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "28807:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28798:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1182,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "28777:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28777:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1190,
															"nodeType": "ExpressionStatement",
															"src": "28777:33:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "28739:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1176,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "28743:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28743:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28739:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1192,
												"initializationExpression": {
													"assignments": [
														1172
													],
													"declarations": [
														{
															"constant": false,
															"id": 1172,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1192,
															"src": "28724:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1171,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "28724:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1174,
													"initialValue": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28736:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "28724:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "28757:3:0",
														"subExpression": {
															"id": 1179,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "28757:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ExpressionStatement",
													"src": "28757:3:0"
												},
												"nodeType": "ForStatement",
												"src": "28719:103:0"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "28472:64:0",
										"text": " @dev Revokes roles from a list of accounts."
									},
									"functionSelector": "18b2cde9",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRolesFromMany",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "28571:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1154,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "28571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1155,
													"nodeType": "ArrayTypeName",
													"src": "28571:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "28595:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1157,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "28595:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1158,
													"nodeType": "ArrayTypeName",
													"src": "28595:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28570:51:0"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28631:0:0"
									},
									"scope": 1195,
									"src": "28542:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1196,
							"src": "27151:1681:0"
						}
					],
					"src": "2:28830:0"
				},
				"id": 0
			}
		}
	}
}