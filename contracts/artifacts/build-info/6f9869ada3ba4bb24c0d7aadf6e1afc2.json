{
	"id": "6f9869ada3ba4bb24c0d7aadf6e1afc2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Authorizer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.7.0;\r\n\r\ninterface IAuthorizer {\r\n    /**\r\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\r\n     */\r\n    function canPerform(\r\n        bytes32 actionId,\r\n        address account,\r\n        address where\r\n    ) external view returns (bool);\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\r\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\r\n * types.\r\n *\r\n * This concept is unrelated to a Pool's Asset Managers.\r\n */\r\ninterface IAsset {\r\n    // solhint-disable-previous-line no-empty-blocks\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n// solhint-disable\r\n\r\n/**\r\n * @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\r\n * supported.\r\n */\r\nfunction _require(bool condition, uint256 errorCode) pure {\r\n    if (!condition) _revert(errorCode);\r\n}\r\n\r\n/**\r\n * @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\r\n */\r\nfunction _revert(uint256 errorCode) pure {\r\n    // We're going to dynamically create a revert string based on the error code, with the following format:\r\n    // 'BAL#{errorCode}'\r\n    // where the code is left-padded with zeroes to three digits (so they range from 000 to 999).\r\n    //\r\n    // We don't have revert strings embedded in the contract to save bytecode size: it takes much less space to store a\r\n    // number (8 to 16 bits) than the individual string characters.\r\n    //\r\n    // The dynamic string creation algorithm that follows could be implemented in Solidity, but assembly allows for a\r\n    // much denser implementation, again saving bytecode size. Given this function unconditionally reverts, this is a\r\n    // safe place to rely on it without worrying about how its usage might affect e.g. memory contents.\r\n    assembly {\r\n        // First, we need to compute the ASCII representation of the error code. We assume that it is in the 0-999\r\n        // range, so we only need to convert three digits. To convert the digits to ASCII, we add 0x30, the value for\r\n        // the '0' character.\r\n\r\n        let units := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let tenths := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let hundreds := add(mod(errorCode, 10), 0x30)\r\n\r\n        // With the individual characters, we can now construct the full string. The \"BAL#\" part is a known constant\r\n        // (0x42414c23): we simply shift this by 24 (to provide space for the 3 bytes of the error code), and add the\r\n        // characters to it, each shifted by a multiple of 8.\r\n        // The revert reason is then shifted left by 200 bits (256 minus the length of the string, 7 characters * 8 bits\r\n        // per character = 56) to locate it in the most significant part of the 256 slot (the beginning of a byte\r\n        // array).\r\n\r\n        let revertReason := shl(200, add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))))\r\n\r\n        // We can now encode the reason in memory, which can be safely overwritten as we're about to revert. The encoded\r\n        // message will have the following layout:\r\n        // [ revert reason identifier ] [ string location offset ] [ string length ] [ string contents ]\r\n\r\n        // The Solidity revert reason identifier is 0x08c739a0, the function selector of the Error(string) function. We\r\n        // also write zeroes to the next 28 bytes of memory, but those are about to be overwritten.\r\n        mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\r\n        // Next is the offset to the location of the string, which will be placed immediately after (20 bytes away).\r\n        mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020)\r\n        // The string length is fixed: 7 characters.\r\n        mstore(0x24, 7)\r\n        // Finally, the string itself is stored.\r\n        mstore(0x44, revertReason)\r\n\r\n        // Even if the string is only 7 bytes long, we need to return a full 32 byte slot containing it. The length of\r\n        // the encoded message is therefore 4 + 32 + 32 + 32 = 100.\r\n        revert(0, 100)\r\n    }\r\n}\r\n\r\nlibrary Errors {\r\n    // Math\r\n    uint256 internal constant ADD_OVERFLOW = 0;\r\n    uint256 internal constant SUB_OVERFLOW = 1;\r\n    uint256 internal constant SUB_UNDERFLOW = 2;\r\n    uint256 internal constant MUL_OVERFLOW = 3;\r\n    uint256 internal constant ZERO_DIVISION = 4;\r\n    uint256 internal constant DIV_INTERNAL = 5;\r\n    uint256 internal constant X_OUT_OF_BOUNDS = 6;\r\n    uint256 internal constant Y_OUT_OF_BOUNDS = 7;\r\n    uint256 internal constant PRODUCT_OUT_OF_BOUNDS = 8;\r\n    uint256 internal constant INVALID_EXPONENT = 9;\r\n\r\n    // Input\r\n    uint256 internal constant OUT_OF_BOUNDS = 100;\r\n    uint256 internal constant UNSORTED_ARRAY = 101;\r\n    uint256 internal constant UNSORTED_TOKENS = 102;\r\n    uint256 internal constant INPUT_LENGTH_MISMATCH = 103;\r\n    uint256 internal constant ZERO_TOKEN = 104;\r\n\r\n    // Shared pools\r\n    uint256 internal constant MIN_TOKENS = 200;\r\n    uint256 internal constant MAX_TOKENS = 201;\r\n    uint256 internal constant MAX_SWAP_FEE_PERCENTAGE = 202;\r\n    uint256 internal constant MIN_SWAP_FEE_PERCENTAGE = 203;\r\n    uint256 internal constant MINIMUM_BPT = 204;\r\n    uint256 internal constant CALLER_NOT_VAULT = 205;\r\n    uint256 internal constant UNINITIALIZED = 206;\r\n    uint256 internal constant BPT_IN_MAX_AMOUNT = 207;\r\n    uint256 internal constant BPT_OUT_MIN_AMOUNT = 208;\r\n    uint256 internal constant EXPIRED_PERMIT = 209;\r\n\r\n    // Pools\r\n    uint256 internal constant MIN_AMP = 300;\r\n    uint256 internal constant MAX_AMP = 301;\r\n    uint256 internal constant MIN_WEIGHT = 302;\r\n    uint256 internal constant MAX_STABLE_TOKENS = 303;\r\n    uint256 internal constant MAX_IN_RATIO = 304;\r\n    uint256 internal constant MAX_OUT_RATIO = 305;\r\n    uint256 internal constant MIN_BPT_IN_FOR_TOKEN_OUT = 306;\r\n    uint256 internal constant MAX_OUT_BPT_FOR_TOKEN_IN = 307;\r\n    uint256 internal constant NORMALIZED_WEIGHT_INVARIANT = 308;\r\n    uint256 internal constant INVALID_TOKEN = 309;\r\n    uint256 internal constant UNHANDLED_JOIN_KIND = 310;\r\n    uint256 internal constant ZERO_INVARIANT = 311;\r\n\r\n    // Lib\r\n    uint256 internal constant REENTRANCY = 400;\r\n    uint256 internal constant SENDER_NOT_ALLOWED = 401;\r\n    uint256 internal constant PAUSED = 402;\r\n    uint256 internal constant PAUSE_WINDOW_EXPIRED = 403;\r\n    uint256 internal constant MAX_PAUSE_WINDOW_DURATION = 404;\r\n    uint256 internal constant MAX_BUFFER_PERIOD_DURATION = 405;\r\n    uint256 internal constant INSUFFICIENT_BALANCE = 406;\r\n    uint256 internal constant INSUFFICIENT_ALLOWANCE = 407;\r\n    uint256 internal constant ERC20_TRANSFER_FROM_ZERO_ADDRESS = 408;\r\n    uint256 internal constant ERC20_TRANSFER_TO_ZERO_ADDRESS = 409;\r\n    uint256 internal constant ERC20_MINT_TO_ZERO_ADDRESS = 410;\r\n    uint256 internal constant ERC20_BURN_FROM_ZERO_ADDRESS = 411;\r\n    uint256 internal constant ERC20_APPROVE_FROM_ZERO_ADDRESS = 412;\r\n    uint256 internal constant ERC20_APPROVE_TO_ZERO_ADDRESS = 413;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_ALLOWANCE = 414;\r\n    uint256 internal constant ERC20_DECREASED_ALLOWANCE_BELOW_ZERO = 415;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_BALANCE = 416;\r\n    uint256 internal constant ERC20_BURN_EXCEEDS_ALLOWANCE = 417;\r\n    uint256 internal constant SAFE_ERC20_CALL_FAILED = 418;\r\n    uint256 internal constant ADDRESS_INSUFFICIENT_BALANCE = 419;\r\n    uint256 internal constant ADDRESS_CANNOT_SEND_VALUE = 420;\r\n    uint256 internal constant SAFE_CAST_VALUE_CANT_FIT_INT256 = 421;\r\n    uint256 internal constant GRANT_SENDER_NOT_ADMIN = 422;\r\n    uint256 internal constant REVOKE_SENDER_NOT_ADMIN = 423;\r\n    uint256 internal constant RENOUNCE_SENDER_NOT_ALLOWED = 424;\r\n    uint256 internal constant BUFFER_PERIOD_EXPIRED = 425;\r\n\r\n    // Vault\r\n    uint256 internal constant INVALID_POOL_ID = 500;\r\n    uint256 internal constant CALLER_NOT_POOL = 501;\r\n    uint256 internal constant SENDER_NOT_ASSET_MANAGER = 502;\r\n    uint256 internal constant USER_DOESNT_ALLOW_RELAYER = 503;\r\n    uint256 internal constant INVALID_SIGNATURE = 504;\r\n    uint256 internal constant EXIT_BELOW_MIN = 505;\r\n    uint256 internal constant JOIN_ABOVE_MAX = 506;\r\n    uint256 internal constant SWAP_LIMIT = 507;\r\n    uint256 internal constant SWAP_DEADLINE = 508;\r\n    uint256 internal constant CANNOT_SWAP_SAME_TOKEN = 509;\r\n    uint256 internal constant UNKNOWN_AMOUNT_IN_FIRST_SWAP = 510;\r\n    uint256 internal constant MALCONSTRUCTED_MULTIHOP_SWAP = 511;\r\n    uint256 internal constant INTERNAL_BALANCE_OVERFLOW = 512;\r\n    uint256 internal constant INSUFFICIENT_INTERNAL_BALANCE = 513;\r\n    uint256 internal constant INVALID_ETH_INTERNAL_BALANCE = 514;\r\n    uint256 internal constant INVALID_POST_LOAN_BALANCE = 515;\r\n    uint256 internal constant INSUFFICIENT_ETH = 516;\r\n    uint256 internal constant UNALLOCATED_ETH = 517;\r\n    uint256 internal constant ETH_TRANSFER = 518;\r\n    uint256 internal constant CANNOT_USE_ETH_SENTINEL = 519;\r\n    uint256 internal constant TOKENS_MISMATCH = 520;\r\n    uint256 internal constant TOKEN_NOT_REGISTERED = 521;\r\n    uint256 internal constant TOKEN_ALREADY_REGISTERED = 522;\r\n    uint256 internal constant TOKENS_ALREADY_SET = 523;\r\n    uint256 internal constant TOKENS_LENGTH_MUST_BE_2 = 524;\r\n    uint256 internal constant NONZERO_TOKEN_BALANCE = 525;\r\n    uint256 internal constant BALANCE_TOTAL_OVERFLOW = 526;\r\n    uint256 internal constant POOL_NO_TOKENS = 527;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_BALANCE = 528;\r\n\r\n    // Fees\r\n    uint256 internal constant SWAP_FEE_PERCENTAGE_TOO_HIGH = 600;\r\n    uint256 internal constant FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH = 601;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT = 602;\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n */\r\nlibrary EnumerableSet {\r\n    // The original OpenZeppelin implementation uses a generic Set type with bytes32 values: this was replaced with\r\n    // AddressSet, which uses address keys natively, resulting in more dense bytecode.\r\n\r\n    struct AddressSet {\r\n        // Storage of set values\r\n        address[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(address => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        if (!contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\r\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\r\n\r\n            address lastValue = set._values[lastIndex];\r\n\r\n            // Move the last value to the index where the value to delete is\r\n            set._values[toDeleteIndex] = lastValue;\r\n            // Update the index for the moved value\r\n            set._indexes[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        _require(set._values.length > index, Errors.OUT_OF_BOUNDS);\r\n        return unchecked_at(set, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\r\n     * than {length}). O(1).\r\n     *\r\n     * This function performs one less storage read than {at}, but should only be used when `index` is known to be\r\n     * within bounds.\r\n     */\r\n    function unchecked_at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return set._values[index];\r\n    }\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it.\r\n */\r\nabstract contract AccessControl {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    struct RoleData {\r\n        EnumerableSet.AddressSet members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r\n        return _roles[role].members.contains(account);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of accounts that have `role`. Can be used\r\n     * together with {getRoleMember} to enumerate all bearers of a role.\r\n     */\r\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\r\n        return _roles[role].members.length();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns one of the accounts that have `role`. `index` must be a\r\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\r\n     *\r\n     * Role bearers are not sorted in any particular way, and their ordering may\r\n     * change at any point.\r\n     *\r\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\r\n     * you perform all queries on the same block. See the following\r\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n     * for more information.\r\n     */\r\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r\n        return _roles[role].members.at(index);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual {\r\n        _require(hasRole(_roles[role].adminRole, msg.sender), Errors.GRANT_SENDER_NOT_ADMIN);\r\n\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had already been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual {\r\n        _require(hasRole(_roles[role].adminRole, msg.sender), Errors.REVOKE_SENDER_NOT_ADMIN);\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    function renounceRole(bytes32 role, address account) public virtual {\r\n        _require(account == msg.sender, Errors.RENOUNCE_SENDER_NOT_ALLOWED);\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\r\n        _roles[role].adminRole = adminRole;\r\n    }\r\n\r\n    function _grantRole(bytes32 role, address account) private {\r\n        if (_roles[role].members.add(account)) {\r\n            emit RoleGranted(role, account, msg.sender);\r\n        }\r\n    }\r\n\r\n    function _revokeRole(bytes32 role, address account) private {\r\n        if (_roles[role].members.remove(account)) {\r\n            emit RoleRevoked(role, account, msg.sender);\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\nlibrary InputHelpers {\r\n    function ensureInputLengthMatch(uint256 a, uint256 b) internal pure {\r\n        _require(a == b, Errors.INPUT_LENGTH_MISMATCH);\r\n    }\r\n\r\n    function ensureInputLengthMatch(\r\n        uint256 a,\r\n        uint256 b,\r\n        uint256 c\r\n    ) internal pure {\r\n        _require(a == b && b == c, Errors.INPUT_LENGTH_MISMATCH);\r\n    }\r\n\r\n    function ensureArrayIsSorted(IAsset[] memory array) internal pure {\r\n        address[] memory addressArray;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            addressArray := array\r\n        }\r\n        ensureArrayIsSorted(addressArray);\r\n    }\r\n\r\n    function ensureArrayIsSorted(IERC20[] memory array) internal pure {\r\n        address[] memory addressArray;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            addressArray := array\r\n        }\r\n        ensureArrayIsSorted(addressArray);\r\n    }\r\n\r\n    function ensureArrayIsSorted(address[] memory array) internal pure {\r\n        if (array.length < 2) {\r\n            return;\r\n        }\r\n\r\n        address previous = array[0];\r\n        for (uint256 i = 1; i < array.length; ++i) {\r\n            address current = array[i];\r\n            _require(previous < current, Errors.UNSORTED_ARRAY);\r\n            previous = current;\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Basic Authorizer implementation, based on OpenZeppelin's Access Control.\r\n *\r\n * Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not\r\n * being truly used as such, since they each map to a single action identifier.\r\n *\r\n * This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to\r\n * manage permissions across multiple contracts and to natively handle timelocks.\r\n */\r\ncontract Authorizer is AccessControl, IAuthorizer {\r\n    constructor(address admin) {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, admin);\r\n    }\r\n\r\n    function canPerform(\r\n        bytes32 actionId,\r\n        address account,\r\n        address\r\n    ) public view override returns (bool) {\r\n        // This Authorizer ignores the 'where' field completely.\r\n        return AccessControl.hasRole(actionId, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants multiple roles to a single account.\r\n     */\r\n    function grantRoles(bytes32[] memory roles, address account) external {\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            grantRole(roles[i], account);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Grants roles to a list of accounts.\r\n     */\r\n    function grantRolesToMany(bytes32[] memory roles, address[] memory accounts) external {\r\n        InputHelpers.ensureInputLengthMatch(roles.length, accounts.length);\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            grantRole(roles[i], accounts[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes multiple roles from a single account.\r\n     */\r\n    function revokeRoles(bytes32[] memory roles, address account) external {\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            revokeRole(roles[i], account);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes roles from a list of accounts.\r\n     */\r\n    function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r\n        InputHelpers.ensureInputLengthMatch(roles.length, accounts.length);\r\n        for (uint256 i = 0; i < roles.length; i++) {\r\n            revokeRole(roles[i], accounts[i]);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Authorizer.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 624,
								"contract": "contracts/Authorizer.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)620_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)620_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)620_storage"
							},
							"t_struct(AddressSet)415_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 410,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 414,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)620_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 617,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)415_storage"
									},
									{
										"astId": 619,
										"contract": "contracts/Authorizer.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Authorizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "actionId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "canPerform",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "grantRolesToMany",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								},
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "revokeRolesFromMany",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Basic Authorizer implementation, based on OpenZeppelin's Access Control. Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not being truly used as such, since they each map to a single action identifier. This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to manage permissions across multiple contracts and to natively handle timelocks.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"grantRoles(bytes32[],address)": {
								"details": "Grants multiple roles to a single account."
							},
							"grantRolesToMany(bytes32[],address[])": {
								"details": "Grants roles to a list of accounts."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"revokeRoles(bytes32[],address)": {
								"details": "Revokes multiple roles from a single account."
							},
							"revokeRolesFromMany(bytes32[],address[])": {
								"details": "Revokes roles from a list of accounts."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":27851:29532  contract Authorizer is AccessControl, IAuthorizer {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Authorizer.sol\":27908:27991  constructor(address admin) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"contracts/Authorizer.sol\":27946:27983  _setupRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_5\n    /* \"contracts/Authorizer.sol\":20211:20215  0x00 */\n  0x00\n    /* \"contracts/Authorizer.sol\":27908:27991  constructor(address admin) {\r... */\n  dup3\n    /* \"contracts/Authorizer.sol\":27946:27956  _setupRole */\n  tag_6\n    /* \"contracts/Authorizer.sol\":27946:27983  _setupRole(DEFAULT_ADMIN_ROLE, admin) */\n  jump\t// in\ntag_5:\n    /* \"contracts/Authorizer.sol\":27908:27991  constructor(address admin) {\r... */\n  pop\n    /* \"contracts/Authorizer.sol\":27851:29532  contract Authorizer is AccessControl, IAuthorizer {\r... */\n  jump(tag_7)\n    /* \"contracts/Authorizer.sol\":25122:25234  function _setupRole(bytes32 role, address account) internal virtual {\r... */\ntag_6:\n    /* \"contracts/Authorizer.sol\":25201:25226  _grantRole(role, account) */\n  tag_9\n    /* \"contracts/Authorizer.sol\":25212:25216  role */\n  dup3\n    /* \"contracts/Authorizer.sol\":25218:25225  account */\n  dup3\n    /* \"contracts/Authorizer.sol\":25201:25211  _grantRole */\n  tag_10\n    /* \"contracts/Authorizer.sol\":25201:25226  _grantRole(role, account) */\n  jump\t// in\ntag_9:\n    /* \"contracts/Authorizer.sol\":25122:25234  function _setupRole(bytes32 role, address account) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":25573:25759  function _grantRole(bytes32 role, address account) private {\r... */\ntag_10:\n    /* \"contracts/Authorizer.sol\":25647:25653  _roles */\n  0x00\n    /* \"contracts/Authorizer.sol\":25647:25659  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/Authorizer.sol\":25647:25680  _roles[role].members.add(account) */\n  tag_12\n  swap2\n    /* \"contracts/Authorizer.sol\":25672:25679  account */\n  dup4\n  swap1\n    /* \"contracts/Authorizer.sol\":25647:25671  _roles[role].members.add */\n  tag_0_74\n  tag_13\n  dup3\n  shl\n  or\n    /* \"contracts/Authorizer.sol\":25647:25680  _roles[role].members.add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Authorizer.sol\":25643:25752  if (_roles[role].members.add(account)) {\r... */\n  iszero\n  tag_9\n  jumpi\n    /* \"contracts/Authorizer.sol\":25702:25740  RoleGranted(role, account, msg.sender) */\n  mload(0x40)\n    /* \"contracts/Authorizer.sol\":25729:25739  msg.sender */\n  caller\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Authorizer.sol\":25702:25740  RoleGranted(role, account, msg.sender) */\n  dup4\n  and\n  swap1\n    /* \"contracts/Authorizer.sol\":25714:25718  role */\n  dup5\n  swap1\n    /* \"contracts/Authorizer.sol\":25702:25740  RoleGranted(role, account, msg.sender) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n  0x00\n  swap1\n  log4\n    /* \"contracts/Authorizer.sol\":25573:25759  function _grantRole(bytes32 role, address account) private {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":14971:15391  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_13:\n    /* \"contracts/Authorizer.sol\":15041:15045  bool */\n  0x00\n    /* \"contracts/Authorizer.sol\":15063:15083  contains(set, value) */\n  tag_16\n    /* \"contracts/Authorizer.sol\":15072:15075  set */\n  dup4\n    /* \"contracts/Authorizer.sol\":15077:15082  value */\n  dup4\n    /* \"contracts/Authorizer.sol\":15063:15071  contains */\n  tag_17\n    /* \"contracts/Authorizer.sol\":15063:15083  contains(set, value) */\n  jump\t// in\ntag_16:\n    /* \"contracts/Authorizer.sol\":15058:15384  if (!contains(set, value)) {\r... */\n  tag_18\n  jumpi\n  pop\n    /* \"contracts/Authorizer.sol\":15100:15123  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup1\n  dup3\n  add\n  dup5\n  sstore\n  0x00\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Authorizer.sol\":15283:15301  set._values.length */\n  dup6\n  sload\n    /* \"contracts/Authorizer.sol\":15261:15280  set._indexes[value] */\n  swap1\n  dup3\n  mstore\n    /* \"contracts/Authorizer.sol\":15261:15273  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"contracts/Authorizer.sol\":15261:15280  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/Authorizer.sol\":15261:15301  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Authorizer.sol\":15316:15327  return true */\n  jump(tag_20)\n    /* \"contracts/Authorizer.sol\":15058:15384  if (!contains(set, value)) {\r... */\ntag_18:\n  pop\n    /* \"contracts/Authorizer.sol\":15367:15372  false */\n  0x00\n    /* \"contracts/Authorizer.sol\":15058:15384  if (!contains(set, value)) {\r... */\ntag_20:\n    /* \"contracts/Authorizer.sol\":14971:15391  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":17217:17353  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Authorizer.sol\":17321:17340  set._indexes[value] */\n  and\n    /* \"contracts/Authorizer.sol\":17297:17301  bool */\n  0x00\n    /* \"contracts/Authorizer.sol\":17321:17340  set._indexes[value] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/Authorizer.sol\":17321:17333  set._indexes */\n  0x01\n  swap2\n  swap1\n  swap2\n  add\n    /* \"contracts/Authorizer.sol\":17321:17340  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/Authorizer.sol\":17321:17345  set._indexes[value] != 0 */\n  iszero\n  iszero\n  swap1\n    /* \"contracts/Authorizer.sol\":17217:17353  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n  jump\t// out\n    /* \"contracts/Authorizer.sol\":27851:29532  contract Authorizer is AccessControl, IAuthorizer {\r... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":27851:29532  contract Authorizer is AccessControl, IAuthorizer {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x988360a3\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa73cb2ab\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa73cb2ab\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfcd7627e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x988360a3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9be2a884\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x18b2cde9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Authorizer.sol\":29242:29529  function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_26\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Authorizer.sol\":22795:22909  function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      calldataload\n      tag_29\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Authorizer.sol\":23171:23377  function grantRole(bytes32 role, address account) public virtual {\r... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_32\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":24346:24539  function renounceRole(bytes32 role, address account) public virtual {\r... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_35\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":22468:22606  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_38\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Authorizer.sol\":21421:21568  function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_41\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Authorizer.sol\":28976:29164  function revokeRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_9:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      swap1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      tag_47\n      swap1\n      pop\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":27999:28265  function canPerform(\r... */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      dup1\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      0x20\n      dup3\n      add\n      calldataload\n      dup2\n      and\n      swap2\n      0x40\n      add\n      calldataload\n      and\n      tag_50\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":20166:20215  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      tag_27\n      tag_52\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":28608:28891  function grantRolesToMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_12:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_61\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":21742:21869  function getRoleMemberCount(bytes32 role) public view returns (uint256) {\r... */\n    tag_13:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":23630:23839  function revokeRole(bytes32 role, address account) public virtual {\r... */\n    tag_14:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_67\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":28347:28533  function grantRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_15:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      swap1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      tag_73\n      swap1\n      pop\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":29242:29529  function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_26:\n        /* \"contracts/Authorizer.sol\":29342:29408  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      tag_76\n        /* \"contracts/Authorizer.sol\":29378:29383  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":29378:29390  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":29392:29400  accounts */\n      dup3\n        /* \"contracts/Authorizer.sol\":29392:29407  accounts.length */\n      mload\n        /* \"contracts/Authorizer.sol\":29342:29377  InputHelpers.ensureInputLengthMatch */\n      tag_77\n        /* \"contracts/Authorizer.sol\":29342:29408  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/Authorizer.sol\":29424:29433  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":29419:29522  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_78:\n        /* \"contracts/Authorizer.sol\":29443:29448  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":29443:29455  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":29439:29440  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":29439:29455  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":29419:29522  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":29477:29510  revokeRole(roles[i], accounts[i]) */\n      tag_81\n        /* \"contracts/Authorizer.sol\":29488:29493  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":29494:29495  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":29488:29496  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":29498:29506  accounts */\n      dup4\n        /* \"contracts/Authorizer.sol\":29507:29508  i */\n      dup4\n        /* \"contracts/Authorizer.sol\":29498:29509  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":29477:29487  revokeRole */\n      tag_67\n        /* \"contracts/Authorizer.sol\":29477:29510  revokeRole(roles[i], accounts[i]) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Authorizer.sol\":29457:29460  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":29419:29522  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_78)\n    tag_79:\n      pop\n        /* \"contracts/Authorizer.sol\":29242:29529  function revokeRolesFromMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":22795:22909  function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r... */\n    tag_29:\n        /* \"contracts/Authorizer.sol\":22852:22859  bytes32 */\n      0x00\n        /* \"contracts/Authorizer.sol\":22879:22891  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":22879:22901  _roles[role].adminRole */\n      0x02\n      add\n      sload\n      swap1\n        /* \"contracts/Authorizer.sol\":22795:22909  function getRoleAdmin(bytes32 role) public view returns (bytes32) {\r... */\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":23171:23377  function grantRole(bytes32 role, address account) public virtual {\r... */\n    tag_32:\n        /* \"contracts/Authorizer.sol\":23264:23270  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":23264:23276  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":23264:23286  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/Authorizer.sol\":23247:23331  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.GRANT_SENDER_NOT_ADMIN) */\n      tag_86\n      swap1\n        /* \"contracts/Authorizer.sol\":23256:23299  hasRole(_roles[role].adminRole, msg.sender) */\n      tag_87\n      swap1\n        /* \"contracts/Authorizer.sol\":23288:23298  msg.sender */\n      caller\n        /* \"contracts/Authorizer.sol\":23256:23263  hasRole */\n      tag_41\n        /* \"contracts/Authorizer.sol\":23256:23299  hasRole(_roles[role].adminRole, msg.sender) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/Authorizer.sol\":11399:11402  422 */\n      0x01a6\n        /* \"contracts/Authorizer.sol\":23247:23255  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":23247:23331  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.GRANT_SENDER_NOT_ADMIN) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Authorizer.sol\":23344:23369  _grantRole(role, account) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":23355:23359  role */\n      dup3\n        /* \"contracts/Authorizer.sol\":23361:23368  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":23344:23354  _grantRole */\n      tag_90\n        /* \"contracts/Authorizer.sol\":23344:23369  _grantRole(role, account) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/Authorizer.sol\":23171:23377  function grantRole(bytes32 role, address account) public virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":24346:24539  function renounceRole(bytes32 role, address account) public virtual {\r... */\n    tag_35:\n        /* \"contracts/Authorizer.sol\":24425:24492  _require(account == msg.sender, Errors.RENOUNCE_SENDER_NOT_ALLOWED) */\n      tag_92\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":24434:24455  account == msg.sender */\n      dup3\n      and\n        /* \"contracts/Authorizer.sol\":24445:24455  msg.sender */\n      caller\n        /* \"contracts/Authorizer.sol\":24434:24455  account == msg.sender */\n      eq\n        /* \"contracts/Authorizer.sol\":11527:11530  424 */\n      0x01a8\n        /* \"contracts/Authorizer.sol\":24425:24433  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":24425:24492  _require(account == msg.sender, Errors.RENOUNCE_SENDER_NOT_ALLOWED) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Authorizer.sol\":24505:24531  _revokeRole(role, account) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":24517:24521  role */\n      dup3\n        /* \"contracts/Authorizer.sol\":24523:24530  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":24505:24516  _revokeRole */\n      tag_94\n        /* \"contracts/Authorizer.sol\":24505:24531  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":22468:22606  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r... */\n    tag_38:\n        /* \"contracts/Authorizer.sol\":22541:22548  address */\n      0x00\n        /* \"contracts/Authorizer.sol\":22568:22580  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Authorizer.sol\":22568:22598  _roles[role].members.at(index) */\n      tag_96\n      swap1\n        /* \"contracts/Authorizer.sol\":22592:22597  index */\n      dup4\n        /* \"contracts/Authorizer.sol\":22568:22591  _roles[role].members.at */\n      tag_97\n        /* \"contracts/Authorizer.sol\":22568:22598  _roles[role].members.at(index) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Authorizer.sol\":22561:22598  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"contracts/Authorizer.sol\":22468:22606  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\r... */\n    tag_95:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":21421:21568  function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r... */\n    tag_41:\n        /* \"contracts/Authorizer.sol\":21498:21502  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":21522:21534  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Authorizer.sol\":21522:21560  _roles[role].members.contains(account) */\n      tag_96\n      swap1\n        /* \"contracts/Authorizer.sol\":21552:21559  account */\n      dup4\n        /* \"contracts/Authorizer.sol\":21522:21551  _roles[role].members.contains */\n      tag_100\n        /* \"contracts/Authorizer.sol\":21522:21560  _roles[role].members.contains(account) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":28976:29164  function revokeRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_47:\n        /* \"contracts/Authorizer.sol\":29063:29072  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":29058:29157  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_102:\n        /* \"contracts/Authorizer.sol\":29082:29087  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":29082:29094  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":29078:29079  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":29078:29094  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":29058:29157  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":29116:29145  revokeRole(roles[i], account) */\n      tag_105\n        /* \"contracts/Authorizer.sol\":29127:29132  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":29133:29134  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":29127:29135  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":29137:29144  account */\n      dup4\n        /* \"contracts/Authorizer.sol\":29116:29126  revokeRole */\n      tag_67\n        /* \"contracts/Authorizer.sol\":29116:29145  revokeRole(roles[i], account) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/Authorizer.sol\":29096:29099  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":29058:29157  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_102)\n        /* \"contracts/Authorizer.sol\":27999:28265  function canPerform(\r... */\n    tag_50:\n        /* \"contracts/Authorizer.sol\":28127:28131  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":28217:28257  AccessControl.hasRole(actionId, account) */\n      tag_108\n        /* \"contracts/Authorizer.sol\":28239:28247  actionId */\n      dup5\n        /* \"contracts/Authorizer.sol\":28249:28256  account */\n      dup5\n        /* \"contracts/Authorizer.sol\":28217:28238  AccessControl.hasRole */\n      tag_41\n        /* \"contracts/Authorizer.sol\":28217:28257  AccessControl.hasRole(actionId, account) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Authorizer.sol\":28210:28257  return AccessControl.hasRole(actionId, account) */\n      swap5\n        /* \"contracts/Authorizer.sol\":27999:28265  function canPerform(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":20166:20215  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_52:\n        /* \"contracts/Authorizer.sol\":20211:20215  0x00 */\n      0x00\n        /* \"contracts/Authorizer.sol\":20166:20215  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":28608:28891  function grantRolesToMany(bytes32[] memory roles, address[] memory accounts) external {\r... */\n    tag_61:\n        /* \"contracts/Authorizer.sol\":28705:28771  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      tag_110\n        /* \"contracts/Authorizer.sol\":28741:28746  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28741:28753  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28755:28763  accounts */\n      dup3\n        /* \"contracts/Authorizer.sol\":28755:28770  accounts.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28705:28740  InputHelpers.ensureInputLengthMatch */\n      tag_77\n        /* \"contracts/Authorizer.sol\":28705:28771  InputHelpers.ensureInputLengthMatch(roles.length, accounts.length) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Authorizer.sol\":28787:28796  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":28782:28884  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_111:\n        /* \"contracts/Authorizer.sol\":28806:28811  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28806:28818  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28802:28803  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":28802:28818  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":28782:28884  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":28840:28872  grantRole(roles[i], accounts[i]) */\n      tag_114\n        /* \"contracts/Authorizer.sol\":28850:28855  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":28856:28857  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":28850:28858  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28860:28868  accounts */\n      dup4\n        /* \"contracts/Authorizer.sol\":28869:28870  i */\n      dup4\n        /* \"contracts/Authorizer.sol\":28860:28871  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28840:28849  grantRole */\n      tag_32\n        /* \"contracts/Authorizer.sol\":28840:28872  grantRole(roles[i], accounts[i]) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/Authorizer.sol\":28820:28823  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":28782:28884  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_111)\n        /* \"contracts/Authorizer.sol\":21742:21869  function getRoleMemberCount(bytes32 role) public view returns (uint256) {\r... */\n    tag_64:\n        /* \"contracts/Authorizer.sol\":21805:21812  uint256 */\n      0x00\n        /* \"contracts/Authorizer.sol\":21832:21844  _roles[role] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Authorizer.sol\":21832:21861  _roles[role].members.length() */\n      tag_95\n      swap1\n        /* \"contracts/Authorizer.sol\":21832:21859  _roles[role].members.length */\n      tag_119\n        /* \"contracts/Authorizer.sol\":21832:21861  _roles[role].members.length() */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":23630:23839  function revokeRole(bytes32 role, address account) public virtual {\r... */\n    tag_67:\n        /* \"contracts/Authorizer.sol\":23724:23730  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":23724:23736  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":23724:23746  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/Authorizer.sol\":23707:23792  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.REVOKE_SENDER_NOT_ADMIN) */\n      tag_92\n      swap1\n        /* \"contracts/Authorizer.sol\":23716:23759  hasRole(_roles[role].adminRole, msg.sender) */\n      tag_122\n      swap1\n        /* \"contracts/Authorizer.sol\":23748:23758  msg.sender */\n      caller\n        /* \"contracts/Authorizer.sol\":23716:23723  hasRole */\n      tag_41\n        /* \"contracts/Authorizer.sol\":23716:23759  hasRole(_roles[role].adminRole, msg.sender) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/Authorizer.sol\":11461:11464  423 */\n      0x01a7\n        /* \"contracts/Authorizer.sol\":23707:23715  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":23707:23792  _require(hasRole(_roles[role].adminRole, msg.sender), Errors.REVOKE_SENDER_NOT_ADMIN) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":28347:28533  function grantRoles(bytes32[] memory roles, address account) external {\r... */\n    tag_73:\n        /* \"contracts/Authorizer.sol\":28433:28442  uint256 i */\n      0x00\n        /* \"contracts/Authorizer.sol\":28428:28526  for (uint256 i = 0; i < roles.length; i++) {\r... */\n    tag_125:\n        /* \"contracts/Authorizer.sol\":28452:28457  roles */\n      dup3\n        /* \"contracts/Authorizer.sol\":28452:28464  roles.length */\n      mload\n        /* \"contracts/Authorizer.sol\":28448:28449  i */\n      dup2\n        /* \"contracts/Authorizer.sol\":28448:28464  i < roles.length */\n      lt\n        /* \"contracts/Authorizer.sol\":28428:28526  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Authorizer.sol\":28486:28514  grantRole(roles[i], account) */\n      tag_128\n        /* \"contracts/Authorizer.sol\":28496:28501  roles */\n      dup4\n        /* \"contracts/Authorizer.sol\":28502:28503  i */\n      dup3\n        /* \"contracts/Authorizer.sol\":28496:28504  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Authorizer.sol\":28506:28513  account */\n      dup4\n        /* \"contracts/Authorizer.sol\":28486:28495  grantRole */\n      tag_32\n        /* \"contracts/Authorizer.sol\":28486:28514  grantRole(roles[i], account) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/Authorizer.sol\":28466:28469  i++ */\n      0x01\n      add\n        /* \"contracts/Authorizer.sol\":28428:28526  for (uint256 i = 0; i < roles.length; i++) {\r... */\n      jump(tag_125)\n        /* \"contracts/Authorizer.sol\":14971:15391  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_74:\n        /* \"contracts/Authorizer.sol\":15041:15045  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":15063:15083  contains(set, value) */\n      tag_131\n        /* \"contracts/Authorizer.sol\":15072:15075  set */\n      dup4\n        /* \"contracts/Authorizer.sol\":15077:15082  value */\n      dup4\n        /* \"contracts/Authorizer.sol\":15063:15071  contains */\n      tag_100\n        /* \"contracts/Authorizer.sol\":15063:15083  contains(set, value) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/Authorizer.sol\":15058:15384  if (!contains(set, value)) {\r... */\n      tag_132\n      jumpi\n      pop\n        /* \"contracts/Authorizer.sol\":15100:15123  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup5\n      sstore\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Authorizer.sol\":15283:15301  set._values.length */\n      dup6\n      sload\n        /* \"contracts/Authorizer.sol\":15261:15280  set._indexes[value] */\n      swap1\n      dup3\n      mstore\n        /* \"contracts/Authorizer.sol\":15261:15273  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"contracts/Authorizer.sol\":15261:15280  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":15261:15301  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Authorizer.sol\":15316:15327  return true */\n      jump(tag_95)\n        /* \"contracts/Authorizer.sol\":15058:15384  if (!contains(set, value)) {\r... */\n    tag_132:\n      pop\n        /* \"contracts/Authorizer.sol\":15367:15372  false */\n      0x00\n        /* \"contracts/Authorizer.sol\":15360:15372  return false */\n      jump(tag_95)\n        /* \"contracts/Authorizer.sol\":26019:26152  function ensureInputLengthMatch(uint256 a, uint256 b) internal pure {\r... */\n    tag_77:\n        /* \"contracts/Authorizer.sol\":26098:26144  _require(a == b, Errors.INPUT_LENGTH_MISMATCH) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":26112:26113  b */\n      dup2\n        /* \"contracts/Authorizer.sol\":26107:26108  a */\n      dup4\n        /* \"contracts/Authorizer.sol\":26107:26113  a == b */\n      eq\n        /* \"contracts/Authorizer.sol\":8623:8626  103 */\n      0x67\n        /* \"contracts/Authorizer.sol\":4410:4513  function _require(bool condition, uint256 errorCode) pure {\r... */\n    tag_88:\n        /* \"contracts/Authorizer.sol\":4480:4489  condition */\n      dup2\n        /* \"contracts/Authorizer.sol\":4475:4509  if (!condition) _revert(errorCode) */\n      tag_89\n      jumpi\n        /* \"contracts/Authorizer.sol\":4491:4509  _revert(errorCode) */\n      tag_89\n        /* \"contracts/Authorizer.sol\":4499:4508  errorCode */\n      dup2\n        /* \"contracts/Authorizer.sol\":4491:4498  _revert */\n      tag_140\n        /* \"contracts/Authorizer.sol\":4491:4509  _revert(errorCode) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":25573:25759  function _grantRole(bytes32 role, address account) private {\r... */\n    tag_90:\n        /* \"contracts/Authorizer.sol\":25647:25653  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":25647:25659  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":25647:25680  _roles[role].members.add(account) */\n      tag_142\n      swap1\n        /* \"contracts/Authorizer.sol\":25672:25679  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":25647:25671  _roles[role].members.add */\n      tag_74\n        /* \"contracts/Authorizer.sol\":25647:25680  _roles[role].members.add(account) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/Authorizer.sol\":25643:25752  if (_roles[role].members.add(account)) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/Authorizer.sol\":25702:25740  RoleGranted(role, account, msg.sender) */\n      mload(0x40)\n        /* \"contracts/Authorizer.sol\":25729:25739  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":25702:25740  RoleGranted(role, account, msg.sender) */\n      dup4\n      and\n      swap1\n        /* \"contracts/Authorizer.sol\":25714:25718  role */\n      dup5\n      swap1\n        /* \"contracts/Authorizer.sol\":25702:25740  RoleGranted(role, account, msg.sender) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n      0x00\n      swap1\n      log4\n        /* \"contracts/Authorizer.sol\":25573:25759  function _grantRole(bytes32 role, address account) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":25767:25957  function _revokeRole(bytes32 role, address account) private {\r... */\n    tag_94:\n        /* \"contracts/Authorizer.sol\":25842:25848  _roles */\n      0x00\n        /* \"contracts/Authorizer.sol\":25842:25854  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":25842:25878  _roles[role].members.remove(account) */\n      tag_145\n      swap1\n        /* \"contracts/Authorizer.sol\":25870:25877  account */\n      dup3\n        /* \"contracts/Authorizer.sol\":25842:25869  _roles[role].members.remove */\n      tag_146\n        /* \"contracts/Authorizer.sol\":25842:25878  _roles[role].members.remove(account) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/Authorizer.sol\":25838:25950  if (_roles[role].members.remove(account)) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/Authorizer.sol\":25900:25938  RoleRevoked(role, account, msg.sender) */\n      mload(0x40)\n        /* \"contracts/Authorizer.sol\":25927:25937  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":25900:25938  RoleRevoked(role, account, msg.sender) */\n      dup4\n      and\n      swap1\n        /* \"contracts/Authorizer.sol\":25912:25916  role */\n      dup5\n      swap1\n        /* \"contracts/Authorizer.sol\":25900:25938  RoleRevoked(role, account, msg.sender) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n      0x00\n      swap1\n      log4\n        /* \"contracts/Authorizer.sol\":25767:25957  function _revokeRole(bytes32 role, address account) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":17909:18111  function at(AddressSet storage set, uint256 index) internal view returns (address) {\r... */\n    tag_97:\n        /* \"contracts/Authorizer.sol\":18012:18030  set._values.length */\n      dup2\n      sload\n        /* \"contracts/Authorizer.sol\":17983:17990  address */\n      0x00\n      swap1\n        /* \"contracts/Authorizer.sol\":18003:18061  _require(set._values.length > index, Errors.OUT_OF_BOUNDS) */\n      tag_149\n      swap1\n        /* \"contracts/Authorizer.sol\":18012:18038  set._values.length > index */\n      dup4\n      lt\n        /* \"contracts/Authorizer.sol\":8456:8459  100 */\n      0x64\n        /* \"contracts/Authorizer.sol\":18003:18011  _require */\n      tag_88\n        /* \"contracts/Authorizer.sol\":18003:18061  _require(set._values.length > index, Errors.OUT_OF_BOUNDS) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/Authorizer.sol\":18079:18103  unchecked_at(set, index) */\n      tag_96\n        /* \"contracts/Authorizer.sol\":18092:18095  set */\n      dup4\n        /* \"contracts/Authorizer.sol\":18097:18102  index */\n      dup4\n        /* \"contracts/Authorizer.sol\":18079:18091  unchecked_at */\n      tag_151\n        /* \"contracts/Authorizer.sol\":18079:18103  unchecked_at(set, index) */\n      jump\t// in\n        /* \"contracts/Authorizer.sol\":17217:17353  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":17321:17340  set._indexes[value] */\n      and\n        /* \"contracts/Authorizer.sol\":17297:17301  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":17321:17340  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Authorizer.sol\":17321:17333  set._indexes */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/Authorizer.sol\":17321:17340  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Authorizer.sol\":17321:17345  set._indexes[value] != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/Authorizer.sol\":17217:17353  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":17439:17555  function length(AddressSet storage set) internal view returns (uint256) {\r... */\n    tag_119:\n        /* \"contracts/Authorizer.sol\":17529:17547  set._values.length */\n      sload\n      swap1\n        /* \"contracts/Authorizer.sol\":17439:17555  function length(AddressSet storage set) internal view returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/Authorizer.sol\":4625:7848  function _revert(uint256 errorCode) pure {\r... */\n    tag_140:\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/Authorizer.sol\":7178:7181  0x0 */\n      0x00\n        /* \"contracts/Authorizer.sol\":7171:7250  mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Authorizer.sol\":7391:7457  0x0000000000000000000000000000000000000000000000000000000000000020 */\n      0x20\n        /* \"contracts/Authorizer.sol\":7385:7389  0x04 */\n      0x04\n        /* \"contracts/Authorizer.sol\":7378:7458  mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020) */\n      mstore\n        /* \"contracts/Authorizer.sol\":7535:7536  7 */\n      0x07\n        /* \"contracts/Authorizer.sol\":7529:7533  0x24 */\n      0x24\n        /* \"contracts/Authorizer.sol\":7522:7537  mstore(0x24, 7) */\n      mstore\n        /* \"contracts/Authorizer.sol\":6581:6654  add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))) */\n      0x42414c23000030\n        /* \"contracts/Authorizer.sol\":5777:5779  10 */\n      0x0a\n        /* \"contracts/Authorizer.sol\":5812:5830  div(errorCode, 10) */\n      dup1\n      dup5\n      div\n        /* \"contracts/Authorizer.sol\":5858:5876  mod(errorCode, 10) */\n      dup2\n      dup2\n      mod\n        /* \"contracts/Authorizer.sol\":5782:5786  0x30 */\n      0x30\n        /* \"contracts/Authorizer.sol\":5854:5883  add(mod(errorCode, 10), 0x30) */\n      swap1\n      dup2\n      add\n        /* \"contracts/Authorizer.sol\":6622:6623  8 */\n      0x08\n        /* \"contracts/Authorizer.sol\":6618:6632  shl(8, tenths) */\n      shl\n        /* \"contracts/Authorizer.sol\":5762:5780  mod(errorCode, 10) */\n      swap6\n      dup4\n      swap1\n      mod\n        /* \"contracts/Authorizer.sol\":6607:6633  add(units, shl(8, tenths)) */\n      swap6\n      swap1\n      swap6\n      add\n        /* \"contracts/Authorizer.sol\":5908:5926  div(errorCode, 10) */\n      swap1\n      dup3\n      swap1\n      div\n        /* \"contracts/Authorizer.sol\":5956:5974  mod(errorCode, 10) */\n      swap2\n      dup3\n      mod\n        /* \"contracts/Authorizer.sol\":5952:5981  add(mod(errorCode, 10), 0x30) */\n      swap1\n      swap5\n      add\n        /* \"contracts/Authorizer.sol\":6639:6641  16 */\n      0x10\n        /* \"contracts/Authorizer.sol\":6635:6652  shl(16, hundreds) */\n      shl\n        /* \"contracts/Authorizer.sol\":6603:6653  add(add(units, shl(8, tenths)), shl(16, hundreds)) */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"contracts/Authorizer.sol\":6581:6654  add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))) */\n      add\n        /* \"contracts/Authorizer.sol\":6576:6579  200 */\n      0xc8\n        /* \"contracts/Authorizer.sol\":6572:6655  shl(200, add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds)))) */\n      shl\n        /* \"contracts/Authorizer.sol\":7604:7608  0x44 */\n      0x44\n        /* \"contracts/Authorizer.sol\":7597:7623  mstore(0x44, revertReason) */\n      mstore\n        /* \"contracts/Authorizer.sol\":7834:7837  100 */\n      0x64\n      swap1\n        /* \"contracts/Authorizer.sol\":7824:7838  revert(0, 100) */\n      revert\n        /* \"contracts/Authorizer.sol\":15567:17131  function remove(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":15779:15798  set._indexes[value] */\n      dup2\n      and\n        /* \"contracts/Authorizer.sol\":15640:15644  bool */\n      0x00\n        /* \"contracts/Authorizer.sol\":15779:15798  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Authorizer.sol\":15779:15791  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"contracts/Authorizer.sol\":15779:15798  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Authorizer.sol\":15815:15830  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"contracts/Authorizer.sol\":15811:17124  if (valueIndex != 0) {\r... */\n      tag_156\n      jumpi\n        /* \"contracts/Authorizer.sol\":16263:16281  set._values.length */\n      dup4\n      sload\n      not(0x00)\n        /* \"contracts/Authorizer.sol\":16214:16228  valueIndex - 1 */\n      dup1\n      dup4\n      add\n      swap2\n        /* \"contracts/Authorizer.sol\":16263:16285  set._values.length - 1 */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"contracts/Authorizer.sol\":16190:16211  uint256 toDeleteIndex */\n      0x00\n      swap1\n        /* \"contracts/Authorizer.sol\":16263:16266  set */\n      dup8\n      swap1\n        /* \"contracts/Authorizer.sol\":16263:16285  set._values.length - 1 */\n      dup4\n      swap1\n        /* \"contracts/Authorizer.sol\":16550:16572  set._values[lastIndex] */\n      dup2\n      lt\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/Authorizer.sol\":16667:16693  set._values[toDeleteIndex] */\n      dup8\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":16550:16572  set._values[lastIndex] */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"contracts/Authorizer.sol\":16667:16670  set */\n      dup9\n      swap1\n        /* \"contracts/Authorizer.sol\":16679:16692  toDeleteIndex */\n      dup6\n      swap1\n        /* \"contracts/Authorizer.sol\":16667:16693  set._values[toDeleteIndex] */\n      dup2\n      lt\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/Authorizer.sol\":16667:16705  set._values[toDeleteIndex] = lastValue */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Authorizer.sol\":16773:16796  set._indexes[lastValue] */\n      swap2\n      dup4\n      and\n      dup2\n      mstore\n      0x01\n        /* \"contracts/Authorizer.sol\":16773:16785  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"contracts/Authorizer.sol\":16773:16796  set._indexes[lastValue] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Authorizer.sol\":16799:16816  toDeleteIndex + 1 */\n      swap1\n      dup5\n      add\n        /* \"contracts/Authorizer.sol\":16773:16816  set._indexes[lastValue] = toDeleteIndex + 1 */\n      swap1\n      sstore\n        /* \"contracts/Authorizer.sol\":16925:16942  set._values.pop() */\n      dup7\n      sload\n        /* \"contracts/Authorizer.sol\":16773:16785  set._indexes */\n      dup8\n      swap1\n        /* \"contracts/Authorizer.sol\":16925:16942  set._values.pop() */\n      dup1\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Authorizer.sol\":17020:17039  set._indexes[value] */\n      dup9\n      and\n      dup3\n      mstore\n        /* \"contracts/Authorizer.sol\":16925:16942  set._values.pop() */\n      0x01\n        /* \"contracts/Authorizer.sol\":17020:17032  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"contracts/Authorizer.sol\":17020:17039  set._indexes[value] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Authorizer.sol\":17013:17039  delete set._indexes[value] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Authorizer.sol\":16925:16942  set._values.pop() */\n      swap5\n      pop\n        /* \"contracts/Authorizer.sol\":17056:17067  return true */\n      tag_95\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/Authorizer.sol\":15811:17124  if (valueIndex != 0) {\r... */\n    tag_156:\n        /* \"contracts/Authorizer.sol\":17107:17112  false */\n      0x00\n        /* \"contracts/Authorizer.sol\":17100:17112  return false */\n      swap2\n      pop\n      pop\n      jump(tag_95)\n        /* \"contracts/Authorizer.sol\":18432:18569  function unchecked_at(AddressSet storage set, uint256 index) internal view returns (address) {\r... */\n    tag_151:\n        /* \"contracts/Authorizer.sol\":18516:18523  address */\n      0x00\n        /* \"contracts/Authorizer.sol\":18543:18546  set */\n      dup3\n        /* \"contracts/Authorizer.sol\":18543:18554  set._values */\n      0x00\n      add\n        /* \"contracts/Authorizer.sol\":18555:18560  index */\n      dup3\n        /* \"contracts/Authorizer.sol\":18543:18561  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_165\n      jumpi\n      invalid\n    tag_165:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap4\n        /* \"contracts/Authorizer.sol\":18432:18569  function unchecked_at(AddressSet storage set, uint256 index) internal view returns (address) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122044ed45ee654ccad527184c1d6dd05c0db7bd3afbee5cc6a750178c31fd1ee7c064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c79380380610c798339818101604052602081101561003357600080fd5b5051610040600082610046565b5061013d565b6100508282610054565b5050565b6000828152602081815260409091206100769183906108036100b7821b17901c565b156100505760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b60006100c3838361011c565b61011257508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03861690811790915585549082528286019093526040902091909155610116565b5060005b92915050565b6001600160a01b031660009081526001919091016020526040902054151590565b610b2d8061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063988360a31161008c578063a73cb2ab11610066578063a73cb2ab146103e7578063ca15c8731461050a578063d547741f14610527578063fcd7627e14610553576100cf565b8063988360a3146102ff5780639be2a884146103ab578063a217fddf146103df576100cf565b806318b2cde9146100d4578063248a9ca3146101f95780632f2ff15d1461022857806336568abe146102545780639010d07c1461028057806391d14854146102bf575b600080fd5b6101f7600480360360408110156100ea57600080fd5b810190602081018135600160201b81111561010457600080fd5b82018360208201111561011657600080fd5b803590602001918460208302840111600160201b8311171561013757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561018657600080fd5b82018360208201111561019857600080fd5b803590602001918460208302840111600160201b831117156101b957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506105ff945050505050565b005b6102166004803603602081101561020f57600080fd5b5035610654565b60408051918252519081900360200190f35b6101f76004803603604081101561023e57600080fd5b50803590602001356001600160a01b0316610669565b6101f76004803603604081101561026a57600080fd5b50803590602001356001600160a01b031661069f565b6102a36004803603604081101561029657600080fd5b50803590602001356106c0565b604080516001600160a01b039092168252519081900360200190f35b6102eb600480360360408110156102d557600080fd5b50803590602001356001600160a01b03166106e1565b604080519115158252519081900360200190f35b6101f76004803603604081101561031557600080fd5b810190602081018135600160201b81111561032f57600080fd5b82018360208201111561034157600080fd5b803590602001918460208302840111600160201b8311171561036257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506106f99050565b6102eb600480360360608110156103c157600080fd5b508035906001600160a01b036020820135811691604001351661072a565b61021661073e565b6101f7600480360360408110156103fd57600080fd5b810190602081018135600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460208302840111600160201b8311171561044a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561049957600080fd5b8201836020820111156104ab57600080fd5b803590602001918460208302840111600160201b831117156104cc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610743945050505050565b6102166004803603602081101561052057600080fd5b5035610793565b6101f76004803603604081101561053d57600080fd5b50803590602001356001600160a01b03166107aa565b6101f76004803603604081101561056957600080fd5b810190602081018135600160201b81111561058357600080fd5b82018360208201111561059557600080fd5b803590602001918460208302840111600160201b831117156105b657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506107d29050565b61060b82518251610866565b60005b825181101561064f5761064783828151811061062657fe5b602002602001015183838151811061063a57fe5b60200260200101516107aa565b60010161060e565b505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546106919061068990336106e1565b6101a661086f565b61069b828261087d565b5050565b6106b66001600160a01b03821633146101a861086f565b61069b82826108d6565b60008281526020819052604081206106d8908361092f565b90505b92915050565b60008281526020819052604081206106d8908361094b565b60005b825181101561064f5761072283828151811061071457fe5b6020026020010151836107aa565b6001016106fc565b600061073684846106e1565b949350505050565b600081565b61074f82518251610866565b60005b825181101561064f5761078b83828151811061076a57fe5b602002602001015183838151811061077e57fe5b6020026020010151610669565b600101610752565b60008181526020819052604081206106db9061096c565b6000828152602081905260409020600201546106b6906107ca90336106e1565b6101a761086f565b60005b825181101561064f576107fb8382815181106107ed57fe5b602002602001015183610669565b6001016107d5565b600061080f838361094b565b61085e57508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b038616908117909155855490825282860190935260409020919091556106db565b5060006106db565b61069b81831460675b8161069b5761069b81610970565b60008281526020819052604090206108959082610803565b1561069b5760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b60008281526020819052604090206108ee90826109c3565b1561069b5760405133906001600160a01b0383169084907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a45050565b8154600090610941908310606461086f565b6106d88383610aca565b6001600160a01b031660009081526001919091016020526040902054151590565b5490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b03811660009081526001830160205260408120548015610ac05783546000198083019190810190600090879083908110610a0057fe5b60009182526020909120015487546001600160a01b0390911691508190889085908110610a2957fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918316815260018981019092526040902090840190558654879080610a7257fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03881682526001898101909152604082209190915594506106db9350505050565b60009150506106db565b6000826000018281548110610adb57fe5b6000918252602090912001546001600160a01b0316939250505056fea264697066735822122044ed45ee654ccad527184c1d6dd05c0db7bd3afbee5cc6a750178c31fd1ee7c064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC79 CODESIZE SUB DUP1 PUSH2 0xC79 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x40 PUSH1 0x0 DUP3 PUSH2 0x46 JUMP JUMPDEST POP PUSH2 0x13D JUMP JUMPDEST PUSH2 0x50 DUP3 DUP3 PUSH2 0x54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x76 SWAP2 DUP4 SWAP1 PUSH2 0x803 PUSH2 0xB7 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST ISZERO PUSH2 0x50 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3 DUP4 DUP4 PUSH2 0x11C JUMP JUMPDEST PUSH2 0x112 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x116 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xB2D DUP1 PUSH2 0x14C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x988360A3 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA73CB2AB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA73CB2AB EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xFCD7627E EQ PUSH2 0x553 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x988360A3 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x9BE2A884 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3DF JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x18B2CDE9 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x5FF SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x669 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x6F9 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x72A JUMP JUMPDEST PUSH2 0x216 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x743 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x793 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x7D2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x647 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x63A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x60E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x691 SWAP1 PUSH2 0x689 SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x87D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ PUSH2 0x1A8 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x722 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP5 DUP5 PUSH2 0x6E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x74F DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x78B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x76A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x77E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6DB SWAP1 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x7CA SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x7FB DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7ED JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP4 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x85E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6DB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x69B DUP2 DUP4 EQ PUSH1 0x67 JUMPDEST DUP2 PUSH2 0x69B JUMPI PUSH2 0x69B DUP2 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x895 SWAP1 DUP3 PUSH2 0x803 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8EE SWAP1 DUP3 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x941 SWAP1 DUP4 LT PUSH1 0x64 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x6D8 DUP4 DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAC0 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xA00 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xA29 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0xA72 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP5 POP PUSH2 0x6DB SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xED GASLIMIT 0xEE PUSH6 0x4CCAD527184C SAR PUSH14 0xD05C0DB7BD3AFBEE5CC6A750178C BALANCE REVERT 0x1E 0xE7 0xC0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "27851:1681:0:-:0;;;27908:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27908:83:0;27946:37;20211:4;27908:83;27946:10;:37::i;:::-;27908:83;27851:1681;;25122:112;25201:25;25212:4;25218:7;25201:10;:25::i;:::-;25122:112;;:::o;25573:186::-;25647:6;:12;;;;;;;;;;;:33;;25672:7;;25647:24;;;;;:33;;:::i;:::-;25643:109;;;25702:38;;25729:10;;-1:-1:-1;;;;;25702:38:0;;;25714:4;;25702:38;;;;;25573:186;;:::o;14971:420::-;15041:4;15063:20;15072:3;15077:5;15063:8;:20::i;:::-;15058:326;;-1:-1:-1;15100:23:0;;;;;;;;-1:-1:-1;15100:23:0;;;;;;;;;;;;-1:-1:-1;;;;;;15100:23:0;-1:-1:-1;;;;;15100:23:0;;;;;;;;15283:18;;15261:19;;;:12;;;:19;;;;;;:40;;;;15316:11;;15058:326;-1:-1:-1;15367:5:0;15058:326;14971:420;;;;:::o;17217:136::-;-1:-1:-1;;;;;17321:19:0;17297:4;17321:19;;;:12;;;;;:19;;;;;;:24;;;17217:136::o;27851:1681::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063988360a31161008c578063a73cb2ab11610066578063a73cb2ab146103e7578063ca15c8731461050a578063d547741f14610527578063fcd7627e14610553576100cf565b8063988360a3146102ff5780639be2a884146103ab578063a217fddf146103df576100cf565b806318b2cde9146100d4578063248a9ca3146101f95780632f2ff15d1461022857806336568abe146102545780639010d07c1461028057806391d14854146102bf575b600080fd5b6101f7600480360360408110156100ea57600080fd5b810190602081018135600160201b81111561010457600080fd5b82018360208201111561011657600080fd5b803590602001918460208302840111600160201b8311171561013757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561018657600080fd5b82018360208201111561019857600080fd5b803590602001918460208302840111600160201b831117156101b957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506105ff945050505050565b005b6102166004803603602081101561020f57600080fd5b5035610654565b60408051918252519081900360200190f35b6101f76004803603604081101561023e57600080fd5b50803590602001356001600160a01b0316610669565b6101f76004803603604081101561026a57600080fd5b50803590602001356001600160a01b031661069f565b6102a36004803603604081101561029657600080fd5b50803590602001356106c0565b604080516001600160a01b039092168252519081900360200190f35b6102eb600480360360408110156102d557600080fd5b50803590602001356001600160a01b03166106e1565b604080519115158252519081900360200190f35b6101f76004803603604081101561031557600080fd5b810190602081018135600160201b81111561032f57600080fd5b82018360208201111561034157600080fd5b803590602001918460208302840111600160201b8311171561036257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506106f99050565b6102eb600480360360608110156103c157600080fd5b508035906001600160a01b036020820135811691604001351661072a565b61021661073e565b6101f7600480360360408110156103fd57600080fd5b810190602081018135600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460208302840111600160201b8311171561044a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561049957600080fd5b8201836020820111156104ab57600080fd5b803590602001918460208302840111600160201b831117156104cc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610743945050505050565b6102166004803603602081101561052057600080fd5b5035610793565b6101f76004803603604081101561053d57600080fd5b50803590602001356001600160a01b03166107aa565b6101f76004803603604081101561056957600080fd5b810190602081018135600160201b81111561058357600080fd5b82018360208201111561059557600080fd5b803590602001918460208302840111600160201b831117156105b657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506107d29050565b61060b82518251610866565b60005b825181101561064f5761064783828151811061062657fe5b602002602001015183838151811061063a57fe5b60200260200101516107aa565b60010161060e565b505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546106919061068990336106e1565b6101a661086f565b61069b828261087d565b5050565b6106b66001600160a01b03821633146101a861086f565b61069b82826108d6565b60008281526020819052604081206106d8908361092f565b90505b92915050565b60008281526020819052604081206106d8908361094b565b60005b825181101561064f5761072283828151811061071457fe5b6020026020010151836107aa565b6001016106fc565b600061073684846106e1565b949350505050565b600081565b61074f82518251610866565b60005b825181101561064f5761078b83828151811061076a57fe5b602002602001015183838151811061077e57fe5b6020026020010151610669565b600101610752565b60008181526020819052604081206106db9061096c565b6000828152602081905260409020600201546106b6906107ca90336106e1565b6101a761086f565b60005b825181101561064f576107fb8382815181106107ed57fe5b602002602001015183610669565b6001016107d5565b600061080f838361094b565b61085e57508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b038616908117909155855490825282860190935260409020919091556106db565b5060006106db565b61069b81831460675b8161069b5761069b81610970565b60008281526020819052604090206108959082610803565b1561069b5760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b60008281526020819052604090206108ee90826109c3565b1561069b5760405133906001600160a01b0383169084907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a45050565b8154600090610941908310606461086f565b6106d88383610aca565b6001600160a01b031660009081526001919091016020526040902054151590565b5490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b03811660009081526001830160205260408120548015610ac05783546000198083019190810190600090879083908110610a0057fe5b60009182526020909120015487546001600160a01b0390911691508190889085908110610a2957fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918316815260018981019092526040902090840190558654879080610a7257fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03881682526001898101909152604082209190915594506106db9350505050565b60009150506106db565b6000826000018281548110610adb57fe5b6000918252602090912001546001600160a01b0316939250505056fea264697066735822122044ed45ee654ccad527184c1d6dd05c0db7bd3afbee5cc6a750178c31fd1ee7c064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x988360A3 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA73CB2AB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA73CB2AB EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xFCD7627E EQ PUSH2 0x553 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x988360A3 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x9BE2A884 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3DF JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x18B2CDE9 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x5FF SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x669 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x6F9 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x72A JUMP JUMPDEST PUSH2 0x216 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x743 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x793 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x7D2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x647 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x63A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x60E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x691 SWAP1 PUSH2 0x689 SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x87D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ PUSH2 0x1A8 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6D8 SWAP1 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x722 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP5 DUP5 PUSH2 0x6E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x74F DUP3 MLOAD DUP3 MLOAD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x78B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x76A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x77E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6DB SWAP1 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x7CA SWAP1 CALLER PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH2 0x7FB DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7ED JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP4 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x85E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6DB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x69B DUP2 DUP4 EQ PUSH1 0x67 JUMPDEST DUP2 PUSH2 0x69B JUMPI PUSH2 0x69B DUP2 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x895 SWAP1 DUP3 PUSH2 0x803 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8EE SWAP1 DUP3 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x941 SWAP1 DUP4 LT PUSH1 0x64 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x6D8 DUP4 DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAC0 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xA00 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xA29 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0xA72 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP5 POP PUSH2 0x6DB SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xED GASLIMIT 0xEE PUSH6 0x4CCAD527184C SAR PUSH14 0xD05C0DB7BD3AFBEE5CC6A750178C BALANCE REVERT 0x1E 0xE7 0xC0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "27851:1681:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29242:287;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29242:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29242:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29242:287:0;;;;;;;;-1:-1:-1;29242:287:0;;-1:-1:-1;;;;;29242:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29242:287:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29242:287:0;;-1:-1:-1;29242:287:0;;-1:-1:-1;;;;;29242:287:0:i;:::-;;22795:114;;;;;;;;;;;;;;;;-1:-1:-1;22795:114:0;;:::i;:::-;;;;;;;;;;;;;;;;23171:206;;;;;;;;;;;;;;;;-1:-1:-1;23171:206:0;;;;;;-1:-1:-1;;;;;23171:206:0;;:::i;24346:193::-;;;;;;;;;;;;;;;;-1:-1:-1;24346:193:0;;;;;;-1:-1:-1;;;;;24346:193:0;;:::i;22468:138::-;;;;;;;;;;;;;;;;-1:-1:-1;22468:138:0;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;22468:138:0;;;;;;;;;;;;;;21421:147;;;;;;;;;;;;;;;;-1:-1:-1;21421:147:0;;;;;;-1:-1:-1;;;;;21421:147:0;;:::i;:::-;;;;;;;;;;;;;;;;;;28976:188;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28976:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28976:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28976:188:0;;-1:-1:-1;;;28976:188:0;;-1:-1:-1;;;;;28976:188:0;;-1:-1:-1;28976:188:0;;-1:-1:-1;28976:188:0:i;27999:266::-;;;;;;;;;;;;;;;;-1:-1:-1;27999:266:0;;;-1:-1:-1;;;;;27999:266:0;;;;;;;;;;;;:::i;20166:49::-;;;:::i;28608:283::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28608:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28608:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28608:283:0;;;;;;;;-1:-1:-1;28608:283:0;;-1:-1:-1;;;;;28608:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28608:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28608:283:0;;-1:-1:-1;28608:283:0;;-1:-1:-1;;;;;28608:283:0:i;21742:127::-;;;;;;;;;;;;;;;;-1:-1:-1;21742:127:0;;:::i;23630:209::-;;;;;;;;;;;;;;;;-1:-1:-1;23630:209:0;;;;;;-1:-1:-1;;;;;23630:209:0;;:::i;28347:186::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28347:186:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28347:186:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28347:186:0;;-1:-1:-1;;;28347:186:0;;-1:-1:-1;;;;;28347:186:0;;-1:-1:-1;28347:186:0;;-1:-1:-1;28347:186:0:i;29242:287::-;29342:66;29378:5;:12;29392:8;:15;29342:35;:66::i;:::-;29424:9;29419:103;29443:5;:12;29439:1;:16;29419:103;;;29477:33;29488:5;29494:1;29488:8;;;;;;;;;;;;;;29498;29507:1;29498:11;;;;;;;;;;;;;;29477:10;:33::i;:::-;29457:3;;29419:103;;;;29242:287;;:::o;22795:114::-;22852:7;22879:12;;;;;;;;;;:22;;;;22795:114::o;23171:206::-;23264:6;:12;;;;;;;;;;:22;;;23247:84;;23256:43;;23288:10;23256:7;:43::i;:::-;11399:3;23247:8;:84::i;:::-;23344:25;23355:4;23361:7;23344:10;:25::i;:::-;23171:206;;:::o;24346:193::-;24425:67;-1:-1:-1;;;;;24434:21:0;;24445:10;24434:21;11527:3;24425:8;:67::i;:::-;24505:26;24517:4;24523:7;24505:11;:26::i;22468:138::-;22541:7;22568:12;;;;;;;;;;:30;;22592:5;22568:23;:30::i;:::-;22561:37;;22468:138;;;;;:::o;21421:147::-;21498:4;21522:12;;;;;;;;;;:38;;21552:7;21522:29;:38::i;28976:188::-;29063:9;29058:99;29082:5;:12;29078:1;:16;29058:99;;;29116:29;29127:5;29133:1;29127:8;;;;;;;;;;;;;;29137:7;29116:10;:29::i;:::-;29096:3;;29058:99;;27999:266;28127:4;28217:40;28239:8;28249:7;28217:21;:40::i;:::-;28210:47;27999:266;-1:-1:-1;;;;27999:266:0:o;20166:49::-;20211:4;20166:49;:::o;28608:283::-;28705:66;28741:5;:12;28755:8;:15;28705:35;:66::i;:::-;28787:9;28782:102;28806:5;:12;28802:1;:16;28782:102;;;28840:32;28850:5;28856:1;28850:8;;;;;;;;;;;;;;28860;28869:1;28860:11;;;;;;;;;;;;;;28840:9;:32::i;:::-;28820:3;;28782:102;;21742:127;21805:7;21832:12;;;;;;;;;;:29;;:27;:29::i;23630:209::-;23724:6;:12;;;;;;;;;;:22;;;23707:85;;23716:43;;23748:10;23716:7;:43::i;:::-;11461:3;23707:8;:85::i;28347:186::-;28433:9;28428:98;28452:5;:12;28448:1;:16;28428:98;;;28486:28;28496:5;28502:1;28496:8;;;;;;;;;;;;;;28506:7;28486:9;:28::i;:::-;28466:3;;28428:98;;14971:420;15041:4;15063:20;15072:3;15077:5;15063:8;:20::i;:::-;15058:326;;-1:-1:-1;15100:23:0;;;;;;;;-1:-1:-1;15100:23:0;;;;;;;;;;;;-1:-1:-1;;;;;;15100:23:0;-1:-1:-1;;;;;15100:23:0;;;;;;;;15283:18;;15261:19;;;:12;;;:19;;;;;;:40;;;;15316:11;;15058:326;-1:-1:-1;15367:5:0;15360:12;;26019:133;26098:46;26112:1;26107;:6;8623:3;4410:103;4480:9;4475:34;;4491:18;4499:9;4491:7;:18::i;25573:186::-;25647:6;:12;;;;;;;;;;:33;;25672:7;25647:24;:33::i;:::-;25643:109;;;25702:38;;25729:10;;-1:-1:-1;;;;;25702:38:0;;;25714:4;;25702:38;;;;;25573:186;;:::o;25767:190::-;25842:6;:12;;;;;;;;;;:36;;25870:7;25842:27;:36::i;:::-;25838:112;;;25900:38;;25927:10;;-1:-1:-1;;;;;25900:38:0;;;25912:4;;25900:38;;;;;25767:190;;:::o;17909:202::-;18012:18;;17983:7;;18003:58;;18012:26;-1:-1:-1;8456:3:0;18003:8;:58::i;:::-;18079:24;18092:3;18097:5;18079:12;:24::i;17217:136::-;-1:-1:-1;;;;;17321:19:0;17297:4;17321:19;;;:12;;;;;:19;;;;;;:24;;;17217:136::o;17439:116::-;17529:18;;17439:116::o;4625:3223::-;-1:-1:-1;;;7178:3:0;7171:79;;;7391:66;7385:4;7378:80;7535:1;7529:4;7522:15;6581:73;5777:2;5812:18;;;5858;;;5782:4;5854:29;;;6622:1;6618:14;5762:18;;;;6607:26;;;;5908:18;;;;5956;;;5952:29;;;6639:2;6635:17;6603:50;;;;6581:73;6576:3;6572:83;7604:4;7597:26;7834:3;;7824:14;15567:1564;-1:-1:-1;;;;;15779:19:0;;15640:4;15779:19;;;:12;;;:19;;;;;;15815:15;;15811:1313;;16263:18;;-1:-1:-1;;16214:14:0;;;;16263:22;;;;16190:21;;16263:3;;:22;;16550;;;;;;;;;;;;;;;;16667:26;;-1:-1:-1;;;;;16550:22:0;;;;-1:-1:-1;16550:22:0;;16667:3;;16679:13;;16667:26;;;;;;;;;;;;;;;;;;:38;;-1:-1:-1;;;;;;16667:38:0;-1:-1:-1;;;;;16667:38:0;;;;;;16773:23;;;;;-1:-1:-1;16773:12:0;;;:23;;;;;;16799:17;;;16773:43;;16925:17;;16773:12;;16925:17;;;;;;;;;;;;;;;-1:-1:-1;;16925:17:0;;;;;-1:-1:-1;;;;;;16925:17:0;;;;;;;;;-1:-1:-1;;;;;17020:19:0;;;;16925:17;17020:12;;;:19;;;;;;17013:26;;;;16925:17;-1:-1:-1;17056:11:0;;-1:-1:-1;;;;17056:11:0;15811:1313;17107:5;17100:12;;;;;18432:137;18516:7;18543:3;:11;;18555:5;18543:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18543:18:0;;18432:137;-1:-1:-1;;;18432:137:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "572200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "265",
								"canPerform(bytes32,address,address)": "1412",
								"getRoleAdmin(bytes32)": "1138",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "1190",
								"grantRole(bytes32,address)": "infinite",
								"grantRoles(bytes32[],address)": "infinite",
								"grantRolesToMany(bytes32[],address[])": "infinite",
								"hasRole(bytes32,address)": "1410",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"revokeRoles(bytes32[],address)": "infinite",
								"revokeRolesFromMany(bytes32[],address[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27851,
									"end": 29532,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27946,
									"end": 27983,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 20211,
									"end": 20215,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27946,
									"end": 27956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27946,
									"end": 27983,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27946,
									"end": 27983,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 27946,
									"end": 27983,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27908,
									"end": 27991,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25122,
									"end": 25234,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25122,
									"end": 25234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25201,
									"end": 25226,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25212,
									"end": 25216,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25218,
									"end": 25225,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25201,
									"end": 25211,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 25201,
									"end": 25226,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 25201,
									"end": 25226,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25201,
									"end": 25226,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25122,
									"end": 25234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25122,
									"end": 25234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25122,
									"end": 25234,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 25573,
									"end": 25759,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 25573,
									"end": 25759,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25653,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25659,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 25647,
									"end": 25680,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25672,
									"end": 25679,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25672,
									"end": 25679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551690"
								},
								{
									"begin": 25647,
									"end": 25671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 25647,
									"end": 25671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25671,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25671,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25680,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25680,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25647,
									"end": 25680,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 25647,
									"end": 25680,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 25647,
									"end": 25680,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25643,
									"end": 25752,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25643,
									"end": 25752,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25643,
									"end": 25752,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25729,
									"end": 25739,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 25729,
									"end": 25739,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25714,
									"end": 25718,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 25714,
									"end": 25718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25702,
									"end": 25740,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 25573,
									"end": 25759,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25573,
									"end": 25759,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25573,
									"end": 25759,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14971,
									"end": 15391,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 14971,
									"end": 15391,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15041,
									"end": 15045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15063,
									"end": 15083,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 15072,
									"end": 15075,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15077,
									"end": 15082,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15063,
									"end": 15071,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 15063,
									"end": 15083,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15063,
									"end": 15083,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 15063,
									"end": 15083,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15058,
									"end": 15384,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 15058,
									"end": 15384,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15100,
									"end": 15123,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15283,
									"end": 15301,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15283,
									"end": 15301,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15273,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15273,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15273,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15280,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15301,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15301,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15261,
									"end": 15301,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15316,
									"end": 15327,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15316,
									"end": 15327,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15058,
									"end": 15384,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 15058,
									"end": 15384,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15367,
									"end": 15372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15058,
									"end": 15384,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15058,
									"end": 15384,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14971,
									"end": 15391,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 14971,
									"end": 15391,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14971,
									"end": 15391,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14971,
									"end": 15391,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14971,
									"end": 15391,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 17217,
									"end": 17353,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 17217,
									"end": 17353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17297,
									"end": 17301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17333,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17321,
									"end": 17333,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17333,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17333,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17333,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17340,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17345,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17345,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17321,
									"end": 17345,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17353,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27851,
									"end": 29532,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044ed45ee654ccad527184c1d6dd05c0db7bd3afbee5cc6a750178c31fd1ee7c064736f6c63430007060033",
									".code": [
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "988360A3"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "A73CB2AB"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "A73CB2AB"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "FCD7627E"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "988360A3"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "9BE2A884"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "18B2CDE9"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27851,
											"end": 29532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29342,
											"end": 29408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29378,
											"end": 29383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29378,
											"end": 29390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29392,
											"end": 29400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29392,
											"end": 29407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29342,
											"end": 29377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 29342,
											"end": 29408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29342,
											"end": 29408,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29342,
											"end": 29408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29424,
											"end": 29433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29443,
											"end": 29448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29443,
											"end": 29455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29439,
											"end": 29440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29439,
											"end": 29455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29477,
											"end": 29510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 29488,
											"end": 29493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29494,
											"end": 29495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29507,
											"end": 29508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29477,
											"end": 29487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29477,
											"end": 29510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29477,
											"end": 29510,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 29477,
											"end": 29510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29457,
											"end": 29460,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29457,
											"end": 29460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29419,
											"end": 29522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29529,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22901,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22879,
											"end": 22901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23286,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23264,
											"end": 23286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23247,
											"end": 23331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23247,
											"end": 23331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23256,
											"end": 23299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23256,
											"end": 23299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23288,
											"end": 23298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23256,
											"end": 23263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23256,
											"end": 23299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23256,
											"end": 23299,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23256,
											"end": 23299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "1A6"
										},
										{
											"begin": 23247,
											"end": 23255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23247,
											"end": 23331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23247,
											"end": 23331,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23247,
											"end": 23331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23355,
											"end": 23359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23344,
											"end": 23369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23344,
											"end": 23369,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23344,
											"end": 23369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23377,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24346,
											"end": 24539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24434,
											"end": 24455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24434,
											"end": 24455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24445,
											"end": 24455,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24434,
											"end": 24455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11530,
											"name": "PUSH",
											"source": 0,
											"value": "1A8"
										},
										{
											"begin": 24425,
											"end": 24433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24425,
											"end": 24492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24425,
											"end": 24492,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24425,
											"end": 24492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24505,
											"end": 24531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24517,
											"end": 24521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24523,
											"end": 24530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24505,
											"end": 24516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24505,
											"end": 24531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22541,
											"end": 22548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22568,
											"end": 22598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 22597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 22568,
											"end": 22598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22568,
											"end": 22598,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22568,
											"end": 22598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22561,
											"end": 22598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22561,
											"end": 22598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22468,
											"end": 22606,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21421,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21498,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21522,
											"end": 21560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21552,
											"end": 21559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21522,
											"end": 21551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21522,
											"end": 21560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28976,
											"end": 29164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29063,
											"end": 29072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29058,
											"end": 29157,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29058,
											"end": 29157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29082,
											"end": 29087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29082,
											"end": 29094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29094,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29058,
											"end": 29157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29127,
											"end": 29132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29133,
											"end": 29134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29137,
											"end": 29144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29116,
											"end": 29145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29116,
											"end": 29145,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29116,
											"end": 29145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29096,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29096,
											"end": 29099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29058,
											"end": 29157,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28127,
											"end": 28131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28217,
											"end": 28257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 28239,
											"end": 28247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28217,
											"end": 28238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28217,
											"end": 28257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28217,
											"end": 28257,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 28217,
											"end": 28257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28210,
											"end": 28257,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27999,
											"end": 28265,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20211,
											"end": 20215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20166,
											"end": 20215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28608,
											"end": 28891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 28741,
											"end": 28746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28741,
											"end": 28753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28755,
											"end": 28763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28755,
											"end": 28770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28705,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28705,
											"end": 28771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28705,
											"end": 28771,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 28705,
											"end": 28771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28782,
											"end": 28884,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28782,
											"end": 28884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 28811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 28818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 28803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 28818,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28782,
											"end": 28884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28840,
											"end": 28872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28850,
											"end": 28855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28856,
											"end": 28857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28869,
											"end": 28870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28860,
											"end": 28871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28840,
											"end": 28849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28840,
											"end": 28872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28840,
											"end": 28872,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28840,
											"end": 28872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28823,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28820,
											"end": 28823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28782,
											"end": 28884,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21742,
											"end": 21869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21805,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 21832,
											"end": 21861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21832,
											"end": 21861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23630,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23746,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23724,
											"end": 23746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23724,
											"end": 23746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23707,
											"end": 23792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23716,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23716,
											"end": 23759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23748,
											"end": 23758,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23716,
											"end": 23723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23716,
											"end": 23759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23716,
											"end": 23759,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23716,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11461,
											"end": 11464,
											"name": "PUSH",
											"source": 0,
											"value": "1A7"
										},
										{
											"begin": 23707,
											"end": 23715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23707,
											"end": 23792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28347,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28433,
											"end": 28442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28428,
											"end": 28526,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28428,
											"end": 28526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28448,
											"end": 28449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28448,
											"end": 28464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28428,
											"end": 28526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28428,
											"end": 28526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28428,
											"end": 28526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28486,
											"end": 28514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28496,
											"end": 28501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28486,
											"end": 28495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28486,
											"end": 28514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28486,
											"end": 28514,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28486,
											"end": 28514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28466,
											"end": 28469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28428,
											"end": 28526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28428,
											"end": 28526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 15391,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14971,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15063,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 15072,
											"end": 15075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15077,
											"end": 15082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15063,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15063,
											"end": 15083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15063,
											"end": 15083,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 15063,
											"end": 15083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15058,
											"end": 15384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15100,
											"end": 15123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15283,
											"end": 15301,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15283,
											"end": 15301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15273,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15301,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15316,
											"end": 15327,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15384,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15058,
											"end": 15384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15367,
											"end": 15372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15360,
											"end": 15372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15360,
											"end": 15372,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26019,
											"end": 26152,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26019,
											"end": 26152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26098,
											"end": 26144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 26112,
											"end": 26113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26107,
											"end": 26108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26107,
											"end": 26113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8626,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4410,
											"end": 4513,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4410,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4475,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4475,
											"end": 4509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25573,
											"end": 25759,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25573,
											"end": 25759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25647,
											"end": 25680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25672,
											"end": 25679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25647,
											"end": 25671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25647,
											"end": 25680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25647,
											"end": 25680,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25647,
											"end": 25680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25643,
											"end": 25752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25643,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25643,
											"end": 25752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25729,
											"end": 25739,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25729,
											"end": 25739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25714,
											"end": 25718,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25714,
											"end": 25718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25740,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 25573,
											"end": 25759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25573,
											"end": 25759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25573,
											"end": 25759,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25767,
											"end": 25957,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25767,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25854,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 25842,
											"end": 25878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25870,
											"end": 25877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25842,
											"end": 25869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25842,
											"end": 25878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25842,
											"end": 25878,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 25842,
											"end": 25878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25838,
											"end": 25950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25838,
											"end": 25950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25838,
											"end": 25950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25927,
											"end": 25937,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25927,
											"end": 25937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25912,
											"end": 25916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25912,
											"end": 25916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25900,
											"end": 25938,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 25767,
											"end": 25957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25767,
											"end": 25957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25767,
											"end": 25957,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17909,
											"end": 18111,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17909,
											"end": 18111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 17990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 17990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18003,
											"end": 18061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18003,
											"end": 18061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8456,
											"end": 8459,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18003,
											"end": 18011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18003,
											"end": 18061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18003,
											"end": 18061,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18003,
											"end": 18061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18079,
											"end": 18103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18092,
											"end": 18095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18097,
											"end": 18102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18079,
											"end": 18091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18079,
											"end": 18103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17217,
											"end": 17353,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17217,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17321,
											"end": 17333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17353,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17439,
											"end": 17555,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17439,
											"end": 17555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17555,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4625,
											"end": 7848,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4625,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7178,
											"end": 7181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7391,
											"end": 7457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7378,
											"end": 7458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7536,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7529,
											"end": 7533,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7522,
											"end": 7537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "42414C23000030"
										},
										{
											"begin": 5777,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 5782,
											"end": 5786,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5854,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 5883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6618,
											"end": 6632,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 5981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 5981,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 5981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6639,
											"end": 6641,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6635,
											"end": 6652,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6603,
											"end": 6653,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6603,
											"end": 6653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6603,
											"end": 6653,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6603,
											"end": 6653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 6572,
											"end": 6655,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7604,
											"end": 7608,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7597,
											"end": 7623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7837,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7834,
											"end": 7837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 17131,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 15567,
											"end": 17131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15791,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15779,
											"end": 15791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15815,
											"end": 15830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15815,
											"end": 15830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15811,
											"end": 17124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15811,
											"end": 17124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16214,
											"end": 16228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16190,
											"end": 16211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16190,
											"end": 16211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16266,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16670,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16679,
											"end": 16692,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16679,
											"end": 16692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16705,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 16773,
											"end": 16785,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16799,
											"end": 16816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16799,
											"end": 16816,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16799,
											"end": 16816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16816,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16785,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17020,
											"end": 17032,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17039,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16942,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17056,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17056,
											"end": 17067,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17056,
											"end": 17067,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15811,
											"end": 17124,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15811,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17100,
											"end": 17112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17100,
											"end": 17112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17100,
											"end": 17112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17100,
											"end": 17112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17100,
											"end": 17112,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18432,
											"end": 18569,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18432,
											"end": 18569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18516,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18543,
											"end": 18546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18543,
											"end": 18554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18432,
											"end": 18569,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18432,
											"end": 18569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"canPerform(bytes32,address,address)": "9be2a884",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"grantRoles(bytes32[],address)": "fcd7627e",
							"grantRolesToMany(bytes32[],address[])": "a73cb2ab",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"revokeRoles(bytes32[],address)": "988360a3",
							"revokeRolesFromMany(bytes32[],address[])": "18b2cde9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"grantRolesToMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokeRolesFromMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic Authorizer implementation, based on OpenZeppelin's Access Control. Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not being truly used as such, since they each map to a single action identifier. This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to manage permissions across multiple contracts and to natively handle timelocks.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"grantRoles(bytes32[],address)\":{\"details\":\"Grants multiple roles to a single account.\"},\"grantRolesToMany(bytes32[],address[])\":{\"details\":\"Grants roles to a list of accounts.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had already been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"revokeRoles(bytes32[],address)\":{\"details\":\"Revokes multiple roles from a single account.\"},\"revokeRolesFromMany(bytes32[],address[])\":{\"details\":\"Revokes roles from a list of accounts.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"Authorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 624,
								"contract": "contracts/Authorizer.sol:Authorizer",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)620_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)620_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)620_storage"
							},
							"t_struct(AddressSet)415_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 410,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 414,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)620_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 617,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)415_storage"
									},
									{
										"astId": 619,
										"contract": "contracts/Authorizer.sol:Authorizer",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":14297:18572  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":14297:18572  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220abc70879009d16764f47d43ad2921b9323e4a81ee4b238c79b771c282806312b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abc70879009d16764f47d43ad2921b9323e4a81ee4b238c79b771c282806312b64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 ADDMOD PUSH26 0x9D16764F47D43AD2921B9323E4A81EE4B238C79B771C282806 BALANCE 0x2B PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "14297:4275:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abc70879009d16764f47d43ad2921b9323e4a81ee4b238c79b771c282806312b64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 ADDMOD PUSH26 0x9D16764F47D43AD2921B9323E4A81EE4B238C79B771C282806 BALANCE 0x2B PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "14297:4275:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"unchecked_at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14297,
									"end": 18572,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abc70879009d16764f47d43ad2921b9323e4a81ee4b238c79b771c282806312b64736f6c63430007060033",
									".code": [
										{
											"begin": 14297,
											"end": 18572,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 18572,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Errors": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":7852:13555  library Errors {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":7852:13555  library Errors {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203cd00aa56a343c63c070110d4f3d52cd8aaae0f2775ba822049315fab3aed10e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203cd00aa56a343c63c070110d4f3d52cd8aaae0f2775ba822049315fab3aed10e64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xD0 EXP 0xA5 PUSH11 0x343C63C070110D4F3D52CD DUP11 0xAA 0xE0 CALLCODE PUSH24 0x5BA822049315FAB3AED10E64736F6C634300070600330000 ",
							"sourceMap": "7852:5703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203cd00aa56a343c63c070110d4f3d52cd8aaae0f2775ba822049315fab3aed10e64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xD0 EXP 0xA5 PUSH11 0x343C63C070110D4F3D52CD DUP11 0xAA 0xE0 CALLCODE PUSH24 0x5BA822049315FAB3AED10E64736F6C634300070600330000 ",
							"sourceMap": "7852:5703:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7852,
									"end": 13555,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cd00aa56a343c63c070110d4f3d52cd8aaae0f2775ba822049315fab3aed10e64736f6c63430007060033",
									".code": [
										{
											"begin": 7852,
											"end": 13555,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7852,
											"end": 13555,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAsset": {
					"abi": [],
					"devdoc": {
						"details": "This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"IAsset\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAuthorizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "actionId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								}
							],
							"name": "canPerform",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"canPerform(bytes32,address,address)": {
								"details": "Returns true if `account` can perform the action described by `actionId` in the contract `where`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canPerform(bytes32,address,address)": "9be2a884"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"InputHelpers": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Authorizer.sol\":25991:27322  library InputHelpers {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Authorizer.sol\":25991:27322  library InputHelpers {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ece004e0df602e981f97d51d3f797e1a10cbd6b2697a4b4f4ba0574654d4565764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ece004e0df602e981f97d51d3f797e1a10cbd6b2697a4b4f4ba0574654d4565764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xE0 DIV 0xE0 0xDF PUSH1 0x2E SWAP9 0x1F SWAP8 0xD5 SAR EXTCODEHASH PUSH26 0x7E1A10CBD6B2697A4B4F4BA0574654D4565764736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "25991:1331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ece004e0df602e981f97d51d3f797e1a10cbd6b2697a4b4f4ba0574654d4565764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xE0 DIV 0xE0 0xDF PUSH1 0x2E SWAP9 0x1F SWAP8 0xD5 SAR EXTCODEHASH PUSH26 0x7E1A10CBD6B2697A4B4F4BA0574654D4565764736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "25991:1331:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"ensureArrayIsSorted(address[] memory)": "infinite",
								"ensureArrayIsSorted(contract IAsset[] memory)": "infinite",
								"ensureArrayIsSorted(contract IERC20[] memory)": "infinite",
								"ensureInputLengthMatch(uint256,uint256)": "infinite",
								"ensureInputLengthMatch(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25991,
									"end": 27322,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ece004e0df602e981f97d51d3f797e1a10cbd6b2697a4b4f4ba0574654d4565764736f6c63430007060033",
									".code": [
										{
											"begin": 25991,
											"end": 27322,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 27322,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizer.sol\":\"InputHelpers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Authorizer.sol\":{\"keccak256\":\"0xf3d48ec1aedecb593cdff40bbadd3d82efd682d403bcedc01c1c2d480a71bb8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://609d198a328e4e0c0071728fdf0ed115be48ad5af8e4f8908089c3847f1f4c0b\",\"dweb:/ipfs/QmTGWicab2Q6rZjRRhTi4ACaxUJJfuJ8719BkFcoMbCSVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Authorizer.sol": {
				"ast": {
					"absolutePath": "contracts/Authorizer.sol",
					"exportedSymbols": {
						"AccessControl": [
							887
						],
						"Authorizer": [
							1195
						],
						"EnumerableSet": [
							610
						],
						"Errors": [
							405
						],
						"IAsset": [
							17
						],
						"IAuthorizer": [
							14
						],
						"IERC20": [
							94
						],
						"InputHelpers": [
							1014
						],
						"_require": [
							111
						],
						"_revert": [
							119
						]
					},
					"id": 1196,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "702:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 14,
							"linearizedBaseContracts": [
								14
							],
							"name": "IAuthorizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "758:123:0",
										"text": " @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."
									},
									"functionSelector": "9be2a884",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canPerform",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "actionId",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "917:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "944:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "where",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:84:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1014:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1014:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:6:0"
									},
									"scope": 14,
									"src": "887:133:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1196,
							"src": "729:294:0"
						},
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1027:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "1054:315:0",
								"text": " @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."
							},
							"fullyImplemented": true,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IAsset",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1196,
							"src": "1371:75:0"
						},
						{
							"id": 18,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1450:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 19,
								"nodeType": "StructuredDocumentation",
								"src": "1477:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 94,
							"linearizedBaseContracts": [
								94
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1575:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1694:9:0"
									},
									"scope": 94,
									"src": "1649:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1712:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1811:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:9:0"
									},
									"scope": 94,
									"src": "1792:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1868:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2107:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2126:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:35:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2160:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:6:0"
									},
									"scope": 94,
									"src": "2089:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "2174:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2484:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2524:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:9:0"
									},
									"scope": 94,
									"src": "2450:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2541:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:33:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3270:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3269:6:0"
									},
									"scope": 94,
									"src": "3202:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "3284:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3626:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3651:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3679:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3615:85:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3719:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:6:0"
									},
									"scope": 94,
									"src": "3594:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "3733:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 84,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3917:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3939:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3959:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:57:0"
									},
									"src": "3902:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3982:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 93,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4154:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4177:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4202:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4153:63:0"
									},
									"src": "4139:78:0"
								}
							],
							"scope": 1196,
							"src": "1551:2669:0"
						},
						{
							"id": 95,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4224:23:0"
						},
						{
							"body": {
								"id": 110,
								"nodeType": "Block",
								"src": "4468:45:0",
								"statements": [
									{
										"condition": {
											"id": 104,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "!",
											"prefix": true,
											"src": "4479:10:0",
											"subExpression": {
												"id": 103,
												"name": "condition",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 98,
												"src": "4480:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 109,
										"nodeType": "IfStatement",
										"src": "4475:34:0",
										"trueBody": {
											"expression": {
												"arguments": [
													{
														"id": 106,
														"name": "errorCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "4499:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													],
													"id": 105,
													"name": "_revert",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 119,
													"src": "4491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
														"typeString": "function (uint256) pure"
													}
												},
												"id": 107,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "4491:18:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_tuple$__$",
													"typeString": "tuple()"
												}
											},
											"id": 108,
											"nodeType": "ExpressionStatement",
											"src": "4491:18:0"
										}
									}
								]
							},
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "4273:135:0",
								"text": " @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n supported."
							},
							"id": 111,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_require",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 101,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 98,
										"mutability": "mutable",
										"name": "condition",
										"nodeType": "VariableDeclaration",
										"scope": 111,
										"src": "4428:14:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 97,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4428:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 100,
										"mutability": "mutable",
										"name": "errorCode",
										"nodeType": "VariableDeclaration",
										"scope": 111,
										"src": "4444:17:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 99,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4444:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4427:35:0"
							},
							"returnParameters": {
								"id": 102,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4468:0:0"
							},
							"scope": 1196,
							"src": "4410:103:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 118,
								"nodeType": "Block",
								"src": "4666:3182:0",
								"statements": [
									{
										"AST": {
											"nodeType": "YulBlock",
											"src": "5466:2379:0",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5745:42:0",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "errorCode",
																		"nodeType": "YulIdentifier",
																		"src": "5766:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5777:2:0",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5762:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:18:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5782:4:0",
																"type": "",
																"value": "0x30"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5758:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5758:29:0"
													},
													"variables": [
														{
															"name": "units",
															"nodeType": "YulTypedName",
															"src": "5749:5:0",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5799:31:0",
													"value": {
														"arguments": [
															{
																"name": "errorCode",
																"nodeType": "YulIdentifier",
																"src": "5816:9:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5827:2:0",
																"type": "",
																"value": "10"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "5812:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5812:18:0"
													},
													"variableNames": [
														{
															"name": "errorCode",
															"nodeType": "YulIdentifier",
															"src": "5799:9:0"
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5840:43:0",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "errorCode",
																		"nodeType": "YulIdentifier",
																		"src": "5862:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5873:2:0",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5858:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:18:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5878:4:0",
																"type": "",
																"value": "0x30"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5854:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5854:29:0"
													},
													"variables": [
														{
															"name": "tenths",
															"nodeType": "YulTypedName",
															"src": "5844:6:0",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5895:31:0",
													"value": {
														"arguments": [
															{
																"name": "errorCode",
																"nodeType": "YulIdentifier",
																"src": "5912:9:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5923:2:0",
																"type": "",
																"value": "10"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "5908:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5908:18:0"
													},
													"variableNames": [
														{
															"name": "errorCode",
															"nodeType": "YulIdentifier",
															"src": "5895:9:0"
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5936:45:0",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "errorCode",
																		"nodeType": "YulIdentifier",
																		"src": "5960:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5971:2:0",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5956:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:18:0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5976:4:0",
																"type": "",
																"value": "0x30"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5952:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "5952:29:0"
													},
													"variables": [
														{
															"name": "hundreds",
															"nodeType": "YulTypedName",
															"src": "5940:8:0",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "6552:103:0",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6576:3:0",
																"type": "",
																"value": "200"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:16:0",
																		"type": "",
																		"value": "0x42414c23000000"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "units",
																						"nodeType": "YulIdentifier",
																						"src": "6611:5:0"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6622:1:0",
																								"type": "",
																								"value": "8"
																							},
																							{
																								"name": "tenths",
																								"nodeType": "YulIdentifier",
																								"src": "6625:6:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6618:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6618:14:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6607:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6607:26:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6639:2:0",
																						"type": "",
																						"value": "16"
																					},
																					{
																						"name": "hundreds",
																						"nodeType": "YulIdentifier",
																						"src": "6643:8:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6635:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6635:17:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6603:50:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6581:73:0"
															}
														],
														"functionName": {
															"name": "shl",
															"nodeType": "YulIdentifier",
															"src": "6572:3:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "6572:83:0"
													},
													"variables": [
														{
															"name": "revertReason",
															"nodeType": "YulTypedName",
															"src": "6556:12:0",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7178:3:0",
																"type": "",
																"value": "0x0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7183:66:0",
																"type": "",
																"value": "0x08c379a000000000000000000000000000000000000000000000000000000000"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "7171:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "7171:79:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7171:79:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7385:4:0",
																"type": "",
																"value": "0x04"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7391:66:0",
																"type": "",
																"value": "0x0000000000000000000000000000000000000000000000000000000000000020"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "7378:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "7378:80:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7378:80:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7529:4:0",
																"type": "",
																"value": "0x24"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7535:1:0",
																"type": "",
																"value": "7"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "7522:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "7522:15:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7522:15:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7604:4:0",
																"type": "",
																"value": "0x44"
															},
															{
																"name": "revertReason",
																"nodeType": "YulIdentifier",
																"src": "7610:12:0"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "7597:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "7597:26:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7597:26:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7831:1:0",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7834:3:0",
																"type": "",
																"value": "100"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "7824:6:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "7824:14:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7824:14:0"
												}
											]
										},
										"evmVersion": "istanbul",
										"externalReferences": [
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5766:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5799:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5816:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5862:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5895:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5912:9:0",
												"valueSize": 1
											},
											{
												"declaration": 114,
												"isOffset": false,
												"isSlot": false,
												"src": "5960:9:0",
												"valueSize": 1
											}
										],
										"id": 117,
										"nodeType": "InlineAssembly",
										"src": "5457:2388:0"
									}
								]
							},
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "4517:106:0",
								"text": " @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported."
							},
							"id": 119,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_revert",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 115,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 114,
										"mutability": "mutable",
										"name": "errorCode",
										"nodeType": "VariableDeclaration",
										"scope": 119,
										"src": "4642:17:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 113,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4642:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4641:19:0"
							},
							"returnParameters": {
								"id": 116,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4666:0:0"
							},
							"scope": 1196,
							"src": "4625:3223:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 405,
							"linearizedBaseContracts": [
								405
							],
							"name": "Errors",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 122,
									"mutability": "constant",
									"name": "ADD_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7887:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7887:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7928:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 125,
									"mutability": "constant",
									"name": "SUB_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7936:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 123,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7936:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7977:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 128,
									"mutability": "constant",
									"name": "SUB_UNDERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "7985:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7985:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 127,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8027:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 131,
									"mutability": "constant",
									"name": "MUL_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8035:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8035:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 130,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8076:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 134,
									"mutability": "constant",
									"name": "ZERO_DIVISION",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8084:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8084:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8126:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 137,
									"mutability": "constant",
									"name": "DIV_INTERNAL",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8134:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8134:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8175:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 140,
									"mutability": "constant",
									"name": "X_OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8183:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8183:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8227:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 143,
									"mutability": "constant",
									"name": "Y_OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8235:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8279:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 146,
									"mutability": "constant",
									"name": "PRODUCT_OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8287:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8287:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8337:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 149,
									"mutability": "constant",
									"name": "INVALID_EXPONENT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8345:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8345:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8390:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 152,
									"mutability": "constant",
									"name": "OUT_OF_BOUNDS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8414:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8414:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8456:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 155,
									"mutability": "constant",
									"name": "UNSORTED_ARRAY",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8466:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313031",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8509:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										},
										"value": "101"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 158,
									"mutability": "constant",
									"name": "UNSORTED_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8519:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8519:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313032",
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8563:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102_by_1",
											"typeString": "int_const 102"
										},
										"value": "102"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 161,
									"mutability": "constant",
									"name": "INPUT_LENGTH_MISMATCH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8573:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8573:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313033",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8623:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_103_by_1",
											"typeString": "int_const 103"
										},
										"value": "103"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 164,
									"mutability": "constant",
									"name": "ZERO_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8633:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8633:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313034",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8672:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_104_by_1",
											"typeString": "int_const 104"
										},
										"value": "104"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 167,
									"mutability": "constant",
									"name": "MIN_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8705:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8705:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8744:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 170,
									"mutability": "constant",
									"name": "MAX_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8754:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 168,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8754:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323031",
										"id": 169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8793:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_201_by_1",
											"typeString": "int_const 201"
										},
										"value": "201"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 173,
									"mutability": "constant",
									"name": "MAX_SWAP_FEE_PERCENTAGE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8803:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8803:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323032",
										"id": 172,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8855:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_202_by_1",
											"typeString": "int_const 202"
										},
										"value": "202"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 176,
									"mutability": "constant",
									"name": "MIN_SWAP_FEE_PERCENTAGE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8865:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 174,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8865:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323033",
										"id": 175,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8917:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_203_by_1",
											"typeString": "int_const 203"
										},
										"value": "203"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 179,
									"mutability": "constant",
									"name": "MINIMUM_BPT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8927:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 177,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8927:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323034",
										"id": 178,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8967:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_204_by_1",
											"typeString": "int_const 204"
										},
										"value": "204"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 182,
									"mutability": "constant",
									"name": "CALLER_NOT_VAULT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "8977:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 180,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8977:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323035",
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9022:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_205_by_1",
											"typeString": "int_const 205"
										},
										"value": "205"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 185,
									"mutability": "constant",
									"name": "UNINITIALIZED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9032:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 183,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9032:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323036",
										"id": 184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9074:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_206_by_1",
											"typeString": "int_const 206"
										},
										"value": "206"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 188,
									"mutability": "constant",
									"name": "BPT_IN_MAX_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9084:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9084:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323037",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9130:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_207_by_1",
											"typeString": "int_const 207"
										},
										"value": "207"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 191,
									"mutability": "constant",
									"name": "BPT_OUT_MIN_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9140:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 189,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9140:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323038",
										"id": 190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9187:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_208_by_1",
											"typeString": "int_const 208"
										},
										"value": "208"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 194,
									"mutability": "constant",
									"name": "EXPIRED_PERMIT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9197:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 192,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9197:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323039",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9240:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_209_by_1",
											"typeString": "int_const 209"
										},
										"value": "209"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 197,
									"mutability": "constant",
									"name": "MIN_AMP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9266:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9266:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9302:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 200,
									"mutability": "constant",
									"name": "MAX_AMP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9312:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9312:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333031",
										"id": 199,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9348:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_301_by_1",
											"typeString": "int_const 301"
										},
										"value": "301"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 203,
									"mutability": "constant",
									"name": "MIN_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9358:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 201,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333032",
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9397:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_302_by_1",
											"typeString": "int_const 302"
										},
										"value": "302"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 206,
									"mutability": "constant",
									"name": "MAX_STABLE_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9407:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9407:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333033",
										"id": 205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9453:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_303_by_1",
											"typeString": "int_const 303"
										},
										"value": "303"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 209,
									"mutability": "constant",
									"name": "MAX_IN_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9463:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9463:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333034",
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9504:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_304_by_1",
											"typeString": "int_const 304"
										},
										"value": "304"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 212,
									"mutability": "constant",
									"name": "MAX_OUT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9514:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9514:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333035",
										"id": 211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9556:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_305_by_1",
											"typeString": "int_const 305"
										},
										"value": "305"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 215,
									"mutability": "constant",
									"name": "MIN_BPT_IN_FOR_TOKEN_OUT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9566:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333036",
										"id": 214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9619:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_306_by_1",
											"typeString": "int_const 306"
										},
										"value": "306"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 218,
									"mutability": "constant",
									"name": "MAX_OUT_BPT_FOR_TOKEN_IN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9629:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9629:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333037",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9682:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_307_by_1",
											"typeString": "int_const 307"
										},
										"value": "307"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 221,
									"mutability": "constant",
									"name": "NORMALIZED_WEIGHT_INVARIANT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9692:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9692:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333038",
										"id": 220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9748:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_308_by_1",
											"typeString": "int_const 308"
										},
										"value": "308"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 224,
									"mutability": "constant",
									"name": "INVALID_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9758:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 222,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9758:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333039",
										"id": 223,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9800:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_309_by_1",
											"typeString": "int_const 309"
										},
										"value": "309"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 227,
									"mutability": "constant",
									"name": "UNHANDLED_JOIN_KIND",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9810:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 225,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9810:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333130",
										"id": 226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9858:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_310_by_1",
											"typeString": "int_const 310"
										},
										"value": "310"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 230,
									"mutability": "constant",
									"name": "ZERO_INVARIANT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9868:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9868:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333131",
										"id": 229,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9911:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_311_by_1",
											"typeString": "int_const 311"
										},
										"value": "311"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 233,
									"mutability": "constant",
									"name": "REENTRANCY",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9935:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9935:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9974:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 236,
									"mutability": "constant",
									"name": "SENDER_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "9984:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 234,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9984:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343031",
										"id": 235,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10031:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_401_by_1",
											"typeString": "int_const 401"
										},
										"value": "401"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 239,
									"mutability": "constant",
									"name": "PAUSED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10041:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 237,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10041:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343032",
										"id": 238,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10076:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_402_by_1",
											"typeString": "int_const 402"
										},
										"value": "402"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 242,
									"mutability": "constant",
									"name": "PAUSE_WINDOW_EXPIRED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10086:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10086:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343033",
										"id": 241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10135:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_403_by_1",
											"typeString": "int_const 403"
										},
										"value": "403"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 245,
									"mutability": "constant",
									"name": "MAX_PAUSE_WINDOW_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10145:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10145:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343034",
										"id": 244,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10199:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_404_by_1",
											"typeString": "int_const 404"
										},
										"value": "404"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 248,
									"mutability": "constant",
									"name": "MAX_BUFFER_PERIOD_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10209:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 246,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10209:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343035",
										"id": 247,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10264:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_405_by_1",
											"typeString": "int_const 405"
										},
										"value": "405"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 251,
									"mutability": "constant",
									"name": "INSUFFICIENT_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10274:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 249,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10274:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343036",
										"id": 250,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10323:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_406_by_1",
											"typeString": "int_const 406"
										},
										"value": "406"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "INSUFFICIENT_ALLOWANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10333:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 252,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10333:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343037",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10384:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_407_by_1",
											"typeString": "int_const 407"
										},
										"value": "407"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 257,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_FROM_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10394:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 255,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10394:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343038",
										"id": 256,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10455:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_408_by_1",
											"typeString": "int_const 408"
										},
										"value": "408"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 260,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_TO_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10465:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 258,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10465:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343039",
										"id": 259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10524:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_409_by_1",
											"typeString": "int_const 409"
										},
										"value": "409"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 263,
									"mutability": "constant",
									"name": "ERC20_MINT_TO_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10534:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10534:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343130",
										"id": 262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10589:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_410_by_1",
											"typeString": "int_const 410"
										},
										"value": "410"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 266,
									"mutability": "constant",
									"name": "ERC20_BURN_FROM_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10599:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10599:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343131",
										"id": 265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10656:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_411_by_1",
											"typeString": "int_const 411"
										},
										"value": "411"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 269,
									"mutability": "constant",
									"name": "ERC20_APPROVE_FROM_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10666:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 267,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10666:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343132",
										"id": 268,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10726:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_412_by_1",
											"typeString": "int_const 412"
										},
										"value": "412"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 272,
									"mutability": "constant",
									"name": "ERC20_APPROVE_TO_ZERO_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10736:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10736:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343133",
										"id": 271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10794:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_413_by_1",
											"typeString": "int_const 413"
										},
										"value": "413"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 275,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_EXCEEDS_ALLOWANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10804:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 273,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10804:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343134",
										"id": 274,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10865:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_414_by_1",
											"typeString": "int_const 414"
										},
										"value": "414"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 278,
									"mutability": "constant",
									"name": "ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10875:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10875:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343135",
										"id": 277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10940:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_415_by_1",
											"typeString": "int_const 415"
										},
										"value": "415"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 281,
									"mutability": "constant",
									"name": "ERC20_TRANSFER_EXCEEDS_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "10950:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 279,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10950:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343136",
										"id": 280,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11009:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_416_by_1",
											"typeString": "int_const 416"
										},
										"value": "416"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 284,
									"mutability": "constant",
									"name": "ERC20_BURN_EXCEEDS_ALLOWANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11019:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11019:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343137",
										"id": 283,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11076:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_417_by_1",
											"typeString": "int_const 417"
										},
										"value": "417"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 287,
									"mutability": "constant",
									"name": "SAFE_ERC20_CALL_FAILED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11086:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11086:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343138",
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11137:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_418_by_1",
											"typeString": "int_const 418"
										},
										"value": "418"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "ADDRESS_INSUFFICIENT_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11147:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11147:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343139",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11204:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_419_by_1",
											"typeString": "int_const 419"
										},
										"value": "419"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "ADDRESS_CANNOT_SEND_VALUE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11214:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11214:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343230",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11268:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_420_by_1",
											"typeString": "int_const 420"
										},
										"value": "420"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 296,
									"mutability": "constant",
									"name": "SAFE_CAST_VALUE_CANT_FIT_INT256",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11278:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11278:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343231",
										"id": 295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11338:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_421_by_1",
											"typeString": "int_const 421"
										},
										"value": "421"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 299,
									"mutability": "constant",
									"name": "GRANT_SENDER_NOT_ADMIN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11348:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 297,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11348:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343232",
										"id": 298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11399:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_422_by_1",
											"typeString": "int_const 422"
										},
										"value": "422"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 302,
									"mutability": "constant",
									"name": "REVOKE_SENDER_NOT_ADMIN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11409:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 300,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11409:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343233",
										"id": 301,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11461:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_423_by_1",
											"typeString": "int_const 423"
										},
										"value": "423"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 305,
									"mutability": "constant",
									"name": "RENOUNCE_SENDER_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11471:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 303,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11471:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343234",
										"id": 304,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11527:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_424_by_1",
											"typeString": "int_const 424"
										},
										"value": "424"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 308,
									"mutability": "constant",
									"name": "BUFFER_PERIOD_EXPIRED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11537:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 306,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343235",
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11587:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_425_by_1",
											"typeString": "int_const 425"
										},
										"value": "425"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 311,
									"mutability": "constant",
									"name": "INVALID_POOL_ID",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11613:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 309,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11613:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11657:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 314,
									"mutability": "constant",
									"name": "CALLER_NOT_POOL",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11667:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 312,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11667:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353031",
										"id": 313,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11711:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_501_by_1",
											"typeString": "int_const 501"
										},
										"value": "501"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 317,
									"mutability": "constant",
									"name": "SENDER_NOT_ASSET_MANAGER",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11721:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11721:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353032",
										"id": 316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11774:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_502_by_1",
											"typeString": "int_const 502"
										},
										"value": "502"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 320,
									"mutability": "constant",
									"name": "USER_DOESNT_ALLOW_RELAYER",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11784:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11784:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353033",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11838:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_503_by_1",
											"typeString": "int_const 503"
										},
										"value": "503"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 323,
									"mutability": "constant",
									"name": "INVALID_SIGNATURE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11848:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11848:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353034",
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11894:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_504_by_1",
											"typeString": "int_const 504"
										},
										"value": "504"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 326,
									"mutability": "constant",
									"name": "EXIT_BELOW_MIN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11904:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 324,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11904:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353035",
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11947:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_505_by_1",
											"typeString": "int_const 505"
										},
										"value": "505"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 329,
									"mutability": "constant",
									"name": "JOIN_ABOVE_MAX",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "11957:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11957:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353036",
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12000:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_506_by_1",
											"typeString": "int_const 506"
										},
										"value": "506"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 332,
									"mutability": "constant",
									"name": "SWAP_LIMIT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12010:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 330,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12010:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353037",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12049:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_507_by_1",
											"typeString": "int_const 507"
										},
										"value": "507"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 335,
									"mutability": "constant",
									"name": "SWAP_DEADLINE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12059:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12059:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353038",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12101:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_508_by_1",
											"typeString": "int_const 508"
										},
										"value": "508"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 338,
									"mutability": "constant",
									"name": "CANNOT_SWAP_SAME_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12111:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12111:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353039",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12162:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_509_by_1",
											"typeString": "int_const 509"
										},
										"value": "509"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 341,
									"mutability": "constant",
									"name": "UNKNOWN_AMOUNT_IN_FIRST_SWAP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12172:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12172:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353130",
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12229:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_510_by_1",
											"typeString": "int_const 510"
										},
										"value": "510"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 344,
									"mutability": "constant",
									"name": "MALCONSTRUCTED_MULTIHOP_SWAP",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12239:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12239:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353131",
										"id": 343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12296:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_511_by_1",
											"typeString": "int_const 511"
										},
										"value": "511"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 347,
									"mutability": "constant",
									"name": "INTERNAL_BALANCE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12306:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12306:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353132",
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12360:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_512_by_1",
											"typeString": "int_const 512"
										},
										"value": "512"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 350,
									"mutability": "constant",
									"name": "INSUFFICIENT_INTERNAL_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12370:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12370:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353133",
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12428:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_513_by_1",
											"typeString": "int_const 513"
										},
										"value": "513"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 353,
									"mutability": "constant",
									"name": "INVALID_ETH_INTERNAL_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12438:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12438:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353134",
										"id": 352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12495:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_514_by_1",
											"typeString": "int_const 514"
										},
										"value": "514"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 356,
									"mutability": "constant",
									"name": "INVALID_POST_LOAN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12505:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12505:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353135",
										"id": 355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12559:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_515_by_1",
											"typeString": "int_const 515"
										},
										"value": "515"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 359,
									"mutability": "constant",
									"name": "INSUFFICIENT_ETH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12569:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12569:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353136",
										"id": 358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12614:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_516_by_1",
											"typeString": "int_const 516"
										},
										"value": "516"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 362,
									"mutability": "constant",
									"name": "UNALLOCATED_ETH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12624:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12624:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353137",
										"id": 361,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12668:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_517_by_1",
											"typeString": "int_const 517"
										},
										"value": "517"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 365,
									"mutability": "constant",
									"name": "ETH_TRANSFER",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12678:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12678:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353138",
										"id": 364,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12719:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_518_by_1",
											"typeString": "int_const 518"
										},
										"value": "518"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 368,
									"mutability": "constant",
									"name": "CANNOT_USE_ETH_SENTINEL",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12729:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12729:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353139",
										"id": 367,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12781:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_519_by_1",
											"typeString": "int_const 519"
										},
										"value": "519"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 371,
									"mutability": "constant",
									"name": "TOKENS_MISMATCH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12791:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 369,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12791:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353230",
										"id": 370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12835:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_520_by_1",
											"typeString": "int_const 520"
										},
										"value": "520"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 374,
									"mutability": "constant",
									"name": "TOKEN_NOT_REGISTERED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12845:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12845:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353231",
										"id": 373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12894:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_521_by_1",
											"typeString": "int_const 521"
										},
										"value": "521"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 377,
									"mutability": "constant",
									"name": "TOKEN_ALREADY_REGISTERED",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12904:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12904:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353232",
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12957:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_522_by_1",
											"typeString": "int_const 522"
										},
										"value": "522"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 380,
									"mutability": "constant",
									"name": "TOKENS_ALREADY_SET",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "12967:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12967:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353233",
										"id": 379,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13014:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_523_by_1",
											"typeString": "int_const 523"
										},
										"value": "523"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 383,
									"mutability": "constant",
									"name": "TOKENS_LENGTH_MUST_BE_2",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13024:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 381,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13024:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353234",
										"id": 382,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13076:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_524_by_1",
											"typeString": "int_const 524"
										},
										"value": "524"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 386,
									"mutability": "constant",
									"name": "NONZERO_TOKEN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13086:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13086:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353235",
										"id": 385,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13136:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_525_by_1",
											"typeString": "int_const 525"
										},
										"value": "525"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 389,
									"mutability": "constant",
									"name": "BALANCE_TOTAL_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13146:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13146:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353236",
										"id": 388,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13197:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_526_by_1",
											"typeString": "int_const 526"
										},
										"value": "526"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 392,
									"mutability": "constant",
									"name": "POOL_NO_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13207:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 390,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13207:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353237",
										"id": 391,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13250:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_527_by_1",
											"typeString": "int_const 527"
										},
										"value": "527"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 395,
									"mutability": "constant",
									"name": "INSUFFICIENT_FLASH_LOAN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13260:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 393,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13260:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353238",
										"id": 394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13320:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_528_by_1",
											"typeString": "int_const 528"
										},
										"value": "528"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "SWAP_FEE_PERCENTAGE_TOO_HIGH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13345:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13345:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363030",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13402:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600_by_1",
											"typeString": "int_const 600"
										},
										"value": "600"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13412:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13412:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363031",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13475:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_601_by_1",
											"typeString": "int_const 601"
										},
										"value": "601"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 404,
									"mutability": "constant",
									"name": "INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "13485:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13485:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363032",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13548:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_602_by_1",
											"typeString": "int_const 602"
										},
										"value": "602"
									},
									"visibility": "internal"
								}
							],
							"scope": 1196,
							"src": "7852:5703:0"
						},
						{
							"id": 406,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13559:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 407,
								"nodeType": "StructuredDocumentation",
								"src": "13586:709:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 415,
									"members": [
										{
											"constant": false,
											"id": 410,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "14596:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 409,
												"nodeType": "ArrayTypeName",
												"src": "14596:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 414,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "14749:36:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 413,
												"keyType": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "14749:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 610,
									"src": "14533:260:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "15047:344:0",
										"statements": [
											{
												"condition": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15062:21:0",
													"subExpression": {
														"arguments": [
															{
																"id": 426,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "15072:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															{
																"id": 427,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "15077:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 425,
															"name": "contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "15063:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15063:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "15345:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15367:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 424,
															"id": 452,
															"nodeType": "Return",
															"src": "15360:12:0"
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "15058:326:0",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "15085:254:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 435,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "15117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 430,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 418,
																			"src": "15100:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "15100:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "15100:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15100:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "15100:23:0"
														},
														{
															"expression": {
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 438,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 418,
																			"src": "15261:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 441,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "15261:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 442,
																	"indexExpression": {
																		"id": 440,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "15274:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15261:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 443,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 418,
																			"src": "15283:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "15283:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15283:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15261:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "15261:40:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15323:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 424,
															"id": 449,
															"nodeType": "Return",
															"src": "15316:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "14801:164:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14984:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 417,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "14984:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "15008:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14983:39:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "15041:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15041:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15040:6:0"
									},
									"scope": 610,
									"src": "14971:420:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "15646:1485:0",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "15758:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 468,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "15779:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "15779:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "15792:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15779:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15758:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "15815:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15815:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "17085:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 465,
															"id": 532,
															"nodeType": "Return",
															"src": "17100:12:0"
														}
													]
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "15811:1313:0",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "15832:1247:0",
													"statements": [
														{
															"assignments": [
																477
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 477,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 530,
																	"src": "16190:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 476,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16190:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 481,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 478,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "16214:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16227:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16214:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16190:38:0"
														},
														{
															"assignments": [
																483
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 483,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 530,
																	"src": "16243:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 482,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16243:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 489,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 484,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "16263:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "16263:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "16263:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16284:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16263:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16243:42:0"
														},
														{
															"assignments": [
																491
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 491,
																	"mutability": "mutable",
																	"name": "lastValue",
																	"nodeType": "VariableDeclaration",
																	"scope": 530,
																	"src": "16530:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16530:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 496,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 492,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "16550:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																			"typeString": "struct EnumerableSet.AddressSet storage pointer"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 410,
																	"src": "16550:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 495,
																"indexExpression": {
																	"id": 494,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "16562:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16550:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16530:42:0"
														},
														{
															"expression": {
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 497,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "16667:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "16667:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 501,
																	"indexExpression": {
																		"id": 499,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "16679:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16667:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 502,
																	"name": "lastValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "16696:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16667:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "16667:38:0"
														},
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 505,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "16773:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "16773:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 509,
																	"indexExpression": {
																		"id": 507,
																		"name": "lastValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "16786:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16773:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 510,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "16799:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16815:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "16799:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16773:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "16773:43:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 515,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "16925:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "16925:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "16925:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16925:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "16925:17:0"
														},
														{
															"expression": {
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "17013:26:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 522,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "17020:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																				"typeString": "struct EnumerableSet.AddressSet storage pointer"
																			}
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "17020:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 525,
																	"indexExpression": {
																		"id": 524,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "17033:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17020:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 527,
															"nodeType": "ExpressionStatement",
															"src": "17013:26:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17063:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 465,
															"id": 529,
															"nodeType": "Return",
															"src": "17056:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "15399:162:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "15583:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 458,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "15583:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "15607:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15582:39:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "15640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15639:6:0"
									},
									"scope": 610,
									"src": "15567:1564:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "17303:50:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 546,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "17321:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "17321:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 549,
														"indexExpression": {
															"id": 548,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "17334:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17321:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17344:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17321:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 545,
												"id": 552,
												"nodeType": "Return",
												"src": "17314:31:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "17139:72:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "17235:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 538,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "17235:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "17259:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17234:39:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "17297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17296:6:0"
									},
									"scope": 610,
									"src": "17217:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "17511:44:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 562,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "17529:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "17529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "17529:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 565,
												"nodeType": "Return",
												"src": "17522:25:0"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "17361:72:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "17455:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 556,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "17455:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17454:24:0"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "17502:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17501:9:0"
									},
									"scope": 610,
									"src": "17439:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "17992:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 578,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "18012:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																			"typeString": "struct EnumerableSet.AddressSet storage pointer"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 410,
																	"src": "18012:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "18012:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 581,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "18033:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18012:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 583,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "18040:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "OUT_OF_BOUNDS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "18040:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 577,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "18003:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18003:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "18003:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "18092:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														{
															"id": 589,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "18097:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "unchecked_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "18079:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18079:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 576,
												"id": 591,
												"nodeType": "Return",
												"src": "18072:31:0"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "17563:340:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "17921:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 569,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "17921:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "17945:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17920:39:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "17983:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17982:9:0"
									},
									"scope": 610,
									"src": "17909:202:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "18525:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 603,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "18543:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
																"typeString": "struct EnumerableSet.AddressSet storage pointer"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "18543:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 606,
													"indexExpression": {
														"id": 605,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "18555:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18543:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 602,
												"id": 607,
												"nodeType": "Return",
												"src": "18536:25:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "18119:307:0",
										"text": " @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\n than {length}). O(1).\n This function performs one less storage read than {at}, but should only be used when `index` is known to be\n within bounds."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unchecked_at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "18454:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 595,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 415,
													"src": "18454:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "18478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18453:39:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "18516:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18515:9:0"
									},
									"scope": 610,
									"src": "18432:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1196,
							"src": "14297:4275:0"
						},
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18576:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 612,
								"nodeType": "StructuredDocumentation",
								"src": "18603:1310:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 887,
							"linearizedBaseContracts": [
								887
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 615,
									"libraryName": {
										"id": 613,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 610,
										"src": "19960:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$610",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19954:49:0",
									"typeName": {
										"id": 614,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 415,
										"src": "19978:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 620,
									"members": [
										{
											"constant": false,
											"id": 617,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"scope": 620,
											"src": "20038:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"id": 616,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 415,
												"src": "20038:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$415_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 619,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"scope": 620,
											"src": "20081:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 618,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "20081:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 887,
									"src": "20011:95:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 624,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "20114:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 623,
										"keyType": {
											"id": 621,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "20122:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "20114:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 622,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 620,
											"src": "20133:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$620_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 627,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "20166:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 625,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "20166:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 626,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20211:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "20224:299:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 636,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20552:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 629,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20574:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20609:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 633,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20551:87:0"
									},
									"src": "20529:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "20647:203:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 645,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "20874:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 638,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "20896:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "20921:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20873:71:0"
									},
									"src": "20856:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "20953:281:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 654,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "21258:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 647,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "21280:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "21305:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21257:71:0"
									},
									"src": "21240:89:0"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "21504:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "21552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 664,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "21522:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 666,
																"indexExpression": {
																	"id": 665,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "21529:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21522:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "21522:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "21522:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21522:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 663,
												"id": 671,
												"nodeType": "Return",
												"src": "21515:45:0"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "21337:78:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "21438:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "21452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21437:31:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "21498:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21498:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21497:6:0"
									},
									"scope": 887,
									"src": "21421:147:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "21814:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 681,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "21832:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 683,
																"indexExpression": {
																	"id": 682,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "21839:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21832:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "21832:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 567,
														"src": "21832:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21832:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 687,
												"nodeType": "Return",
												"src": "21825:36:0"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "21576:160:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "21770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 675,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21769:14:0"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "21805:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21804:9:0"
									},
									"scope": 887,
									"src": "21742:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "22550:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "22592:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 699,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "22568:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 701,
																"indexExpression": {
																	"id": 700,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "22575:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22568:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "22568:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 593,
														"src": "22568:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$415_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22568:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 698,
												"id": 706,
												"nodeType": "Return",
												"src": "22561:37:0"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "21877:585:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "22491:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "22505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22490:29:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "22541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22540:9:0"
									},
									"scope": 887,
									"src": "22468:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "22861:48:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 716,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "22879:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 718,
														"indexExpression": {
															"id": 717,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "22886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22879:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$620_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 619,
													"src": "22879:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 715,
												"id": 720,
												"nodeType": "Return",
												"src": "22872:29:0"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "22614:175:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "22817:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22816:14:0"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "22852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22851:9:0"
									},
									"scope": 887,
									"src": "22795:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "23236:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 732,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "23264:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 734,
																		"indexExpression": {
																			"id": 733,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "23271:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23264:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$620_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 619,
																	"src": "23264:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 736,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "23288:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23288:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 731,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "23256:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23256:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 739,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "23301:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "GRANT_SENDER_NOT_ADMIN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 299,
															"src": "23301:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "23247:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23247:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "23247:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "23355:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 745,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "23361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 743,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "23344:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23344:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "23344:25:0"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "22917:248:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "23190:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 724,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "23204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23189:31:0"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23236:0:0"
									},
									"scope": 887,
									"src": "23171:206:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "23696:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 759,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "23724:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 761,
																		"indexExpression": {
																			"id": 760,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "23731:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23724:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$620_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 762,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 619,
																	"src": "23724:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 763,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "23748:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23748:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 758,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "23716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23716:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 766,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "23761:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "REVOKE_SENDER_NOT_ADMIN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "23761:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "23707:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23707:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "23707:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "23817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 772,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "23823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 770,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "23805:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23805:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "23805:26:0"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "23385:239:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had already been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "23650:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 751,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "23664:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23649:31:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23696:0:0"
									},
									"scope": 887,
									"src": "23630:209:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "24414:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "24434:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 786,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "24445:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "24445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "24434:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 789,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "24457:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RENOUNCE_SENDER_NOT_ALLOWED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 305,
															"src": "24457:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "24425:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24425:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "24425:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "24517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 795,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "24523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 793,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "24505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24505:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "24505:26:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "23847:493:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "24368:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "24382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24367:31:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24414:0:0"
									},
									"scope": 887,
									"src": "24346:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "25190:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "25212:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 809,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "25218:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 807,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "25201:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25201:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "25201:25:0"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "24547:569:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "25142:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "25156:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25141:31:0"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25190:0:0"
									},
									"scope": 887,
									"src": "25122:112:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "25439:126:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 822,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "25472:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 823,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "25478:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 825,
																"indexExpression": {
																	"id": 824,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "25485:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25478:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 619,
															"src": "25478:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 827,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "25502:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 821,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "25455:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25455:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "EmitStatement",
												"src": "25450:62:0"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 830,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "25523:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 832,
															"indexExpression": {
																"id": 831,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "25530:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25523:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$620_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 619,
														"src": "25523:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 834,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "25548:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "25523:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "25523:34:0"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "25242:118:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "25389:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "25403:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25388:33:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25439:0:0"
									},
									"scope": 887,
									"src": "25366:199:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "25632:127:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 850,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "25672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 845,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "25647:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 847,
																"indexExpression": {
																	"id": 846,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "25654:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25647:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "25647:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 456,
														"src": "25647:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25647:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "25643:109:0",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "25682:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "25714:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 854,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "25720:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 855,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "25729:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "25729:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 852,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "25702:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25702:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "EmitStatement",
															"src": "25697:43:0"
														}
													]
												}
											}
										]
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "25593:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 839,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "25607:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25592:31:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25632:0:0"
									},
									"scope": 887,
									"src": "25573:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "25827:130:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 874,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "25870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 869,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "25842:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$620_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 871,
																"indexExpression": {
																	"id": 870,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "25849:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25842:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$620_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "25842:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$415_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 536,
														"src": "25842:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$415_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$415_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25842:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "25838:112:0",
												"trueBody": {
													"id": 883,
													"nodeType": "Block",
													"src": "25880:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 877,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "25912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 878,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "25918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 879,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "25927:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "25927:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 876,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "25900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25900:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 882,
															"nodeType": "EmitStatement",
															"src": "25895:43:0"
														}
													]
												}
											}
										]
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "25788:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "25802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25787:31:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25827:0:0"
									},
									"scope": 887,
									"src": "25767:190:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1196,
							"src": "19915:6045:0"
						},
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25964:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014
							],
							"name": "InputHelpers",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "26087:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "26107:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 897,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "26112:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26107:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 899,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "26115:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "INPUT_LENGTH_MISMATCH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 161,
															"src": "26115:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "26098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26098:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "26098:46:0"
											}
										]
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureInputLengthMatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "26051:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "26062:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26050:22:0"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26087:0:0"
									},
									"scope": 1014,
									"src": "26019:133:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "26273:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 914,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "26293:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 915,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "26298:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 917,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "26303:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 918,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "26308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "26293:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 921,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "26311:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "INPUT_LENGTH_MISMATCH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 161,
															"src": "26311:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"name": "_require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "26284:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26284:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "26284:56:0"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureInputLengthMatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "26202:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "26222:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "26242:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26191:67:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26273:0:0"
									},
									"scope": 1014,
									"src": "26160:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "26422:215:0",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "addressArray",
														"nodeType": "VariableDeclaration",
														"scope": 943,
														"src": "26433:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 935,
															"nodeType": "ArrayTypeName",
															"src": "26433:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"nodeType": "VariableDeclarationStatement",
												"src": "26433:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "26539:47:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26554:21:0",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "26570:5:0"
															},
															"variableNames": [
																{
																	"name": "addressArray",
																	"nodeType": "YulIdentifier",
																	"src": "26554:12:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 936,
														"isOffset": false,
														"isSlot": false,
														"src": "26554:12:0",
														"valueSize": 1
													},
													{
														"declaration": 929,
														"isOffset": false,
														"isSlot": false,
														"src": "26570:5:0",
														"valueSize": 1
													}
												],
												"id": 938,
												"nodeType": "InlineAssembly",
												"src": "26530:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "addressArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "26616:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 939,
														"name": "ensureArrayIsSorted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															944,
															962,
															1013
														],
														"referencedDeclaration": 1013,
														"src": "26596:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26596:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "26596:33:0"
											}
										]
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureArrayIsSorted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "array",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "26385:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$17_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 927,
														"name": "IAsset",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 17,
														"src": "26385:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$17",
															"typeString": "contract IAsset"
														}
													},
													"id": 928,
													"nodeType": "ArrayTypeName",
													"src": "26385:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$17_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26384:23:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26422:0:0"
									},
									"scope": 1014,
									"src": "26356:281:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "26711:215:0",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "addressArray",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "26722:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 952,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 953,
															"nodeType": "ArrayTypeName",
															"src": "26722:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"nodeType": "VariableDeclarationStatement",
												"src": "26722:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "26828:47:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26843:21:0",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "26859:5:0"
															},
															"variableNames": [
																{
																	"name": "addressArray",
																	"nodeType": "YulIdentifier",
																	"src": "26843:12:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "26843:12:0",
														"valueSize": 1
													},
													{
														"declaration": 947,
														"isOffset": false,
														"isSlot": false,
														"src": "26859:5:0",
														"valueSize": 1
													}
												],
												"id": 956,
												"nodeType": "InlineAssembly",
												"src": "26819:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "addressArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "26905:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 957,
														"name": "ensureArrayIsSorted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															944,
															962,
															1013
														],
														"referencedDeclaration": 1013,
														"src": "26885:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26885:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "26885:33:0"
											}
										]
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureArrayIsSorted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "array",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "26674:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$94_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 945,
														"name": "IERC20",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 94,
														"src": "26674:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$94",
															"typeString": "contract IERC20"
														}
													},
													"id": 946,
													"nodeType": "ArrayTypeName",
													"src": "26674:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$94_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26673:23:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26711:0:0"
									},
									"scope": 1014,
									"src": "26645:281:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "27001:318:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 968,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "27016:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27016:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "32",
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27031:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "27016:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 974,
												"nodeType": "IfStatement",
												"src": "27012:55:0",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "27034:33:0",
													"statements": [
														{
															"functionReturnParameters": 967,
															"id": 972,
															"nodeType": "Return",
															"src": "27049:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "previous",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "27079:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 975,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27079:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"baseExpression": {
														"id": 977,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "27098:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 979,
													"indexExpression": {
														"hexValue": "30",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27104:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27098:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27079:27:0"
											},
											{
												"body": {
													"id": 1010,
													"nodeType": "Block",
													"src": "27160:152:0",
													"statements": [
														{
															"assignments": [
																993
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 993,
																	"mutability": "mutable",
																	"name": "current",
																	"nodeType": "VariableDeclaration",
																	"scope": 1010,
																	"src": "27175:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 992,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27175:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 997,
															"initialValue": {
																"baseExpression": {
																	"id": 994,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "27193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 996,
																"indexExpression": {
																	"id": 995,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "27199:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27193:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27175:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 999,
																			"name": "previous",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "27225:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1000,
																			"name": "current",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "27236:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "27225:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"expression": {
																			"id": 1002,
																			"name": "Errors",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "27245:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Errors_$405_$",
																				"typeString": "type(library Errors)"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "UNSORTED_ARRAY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 155,
																		"src": "27245:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 998,
																	"name": "_require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "27216:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (bool,uint256) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27216:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "27216:51:0"
														},
														{
															"expression": {
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1006,
																	"name": "previous",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "27282:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1007,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "27293:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "27282:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1009,
															"nodeType": "ExpressionStatement",
															"src": "27282:18:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "27137:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 986,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "27141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27141:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27137:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"initializationExpression": {
													"assignments": [
														982
													],
													"declarations": [
														{
															"constant": false,
															"id": 982,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1011,
															"src": "27122:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 981,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27122:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 984,
													"initialValue": {
														"hexValue": "31",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27134:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27122:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "27155:3:0",
														"subExpression": {
															"id": 989,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "27157:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 991,
													"nodeType": "ExpressionStatement",
													"src": "27155:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27117:195:0"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureArrayIsSorted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "array",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "26963:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 963,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "26963:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 964,
													"nodeType": "ArrayTypeName",
													"src": "26963:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26962:24:0"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27001:0:0"
									},
									"scope": 1014,
									"src": "26934:385:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1196,
							"src": "25991:1331:0"
						},
						{
							"id": 1015,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27326:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1017,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 887,
										"src": "27874:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$887",
											"typeString": "contract AccessControl"
										}
									},
									"id": 1018,
									"nodeType": "InheritanceSpecifier",
									"src": "27874:13:0"
								},
								{
									"baseName": {
										"id": 1019,
										"name": "IAuthorizer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 14,
										"src": "27889:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAuthorizer_$14",
											"typeString": "contract IAuthorizer"
										}
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "27889:11:0"
								}
							],
							"contractDependencies": [
								14,
								887
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1016,
								"nodeType": "StructuredDocumentation",
								"src": "27353:496:0",
								"text": " @dev Basic Authorizer implementation, based on OpenZeppelin's Access Control.\n Users are allowed to perform actions if they have the role with the same identifier. In this sense, roles are not\n being truly used as such, since they each map to a single action identifier.\n This temporary implementation is expected to be replaced soon after launch by a more sophisticated one, able to\n manage permissions across multiple contracts and to natively handle timelocks."
							},
							"fullyImplemented": true,
							"id": 1195,
							"linearizedBaseContracts": [
								1195,
								14,
								887
							],
							"name": "Authorizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "27935:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "27957:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1027,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "27977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1025,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "27946:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27946:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "27946:37:0"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "27920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27919:15:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27935:0:0"
									},
									"scope": 1195,
									"src": "27908:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "28133:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "actionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "28239:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1046,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "28249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1043,
															"name": "AccessControl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "28217:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AccessControl_$887_$",
																"typeString": "type(contract AccessControl)"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 673,
														"src": "28217:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28217:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1042,
												"id": 1048,
												"nodeType": "Return",
												"src": "28210:47:0"
											}
										]
									},
									"functionSelector": "9be2a884",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canPerform",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1039,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28109:8:0"
									},
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "actionId",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "28029:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "28056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "28082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28018:78:0"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "28127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28126:6:0"
									},
									"scope": 1195,
									"src": "27999:266:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "28417:116:0",
										"statements": [
											{
												"body": {
													"id": 1077,
													"nodeType": "Block",
													"src": "28471:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1071,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "28496:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1073,
																		"indexExpression": {
																			"id": 1072,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "28502:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28496:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1074,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "28506:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1070,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "28486:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28486:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "28486:28:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "28448:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1064,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "28452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28452:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28448:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"initializationExpression": {
													"assignments": [
														1060
													],
													"declarations": [
														{
															"constant": false,
															"id": 1060,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1078,
															"src": "28433:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1059,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "28433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1062,
													"initialValue": {
														"hexValue": "30",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28445:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "28433:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "28466:3:0",
														"subExpression": {
															"id": 1067,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "28466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1069,
													"nodeType": "ExpressionStatement",
													"src": "28466:3:0"
												},
												"nodeType": "ForStatement",
												"src": "28428:98:0"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "28273:68:0",
										"text": " @dev Grants multiple roles to a single account."
									},
									"functionSelector": "fcd7627e",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRoles",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "28367:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1052,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "28367:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1053,
													"nodeType": "ArrayTypeName",
													"src": "28367:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "28391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28366:41:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28417:0:0"
									},
									"scope": 1195,
									"src": "28347:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "28694:197:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "28741:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28741:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1095,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "28755:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28755:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1090,
															"name": "InputHelpers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "28705:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InputHelpers_$1014_$",
																"typeString": "type(library InputHelpers)"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ensureInputLengthMatch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "28705:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28705:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "28705:66:0"
											},
											{
												"body": {
													"id": 1119,
													"nodeType": "Block",
													"src": "28825:59:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1111,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "28850:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1113,
																		"indexExpression": {
																			"id": 1112,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "28856:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28850:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1114,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "28860:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1116,
																		"indexExpression": {
																			"id": 1115,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "28869:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28860:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1110,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "28840:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28840:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "28840:32:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1103,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "28802:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1104,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "28806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28806:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28802:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"initializationExpression": {
													"assignments": [
														1100
													],
													"declarations": [
														{
															"constant": false,
															"id": 1100,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1120,
															"src": "28787:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1099,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "28787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1102,
													"initialValue": {
														"hexValue": "30",
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28799:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "28787:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "28820:3:0",
														"subExpression": {
															"id": 1107,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "28820:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ExpressionStatement",
													"src": "28820:3:0"
												},
												"nodeType": "ForStatement",
												"src": "28782:102:0"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "28541:61:0",
										"text": " @dev Grants roles to a list of accounts."
									},
									"functionSelector": "a73cb2ab",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRolesToMany",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "28634:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1082,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "28634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1083,
													"nodeType": "ArrayTypeName",
													"src": "28634:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "28658:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1085,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "28658:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1086,
													"nodeType": "ArrayTypeName",
													"src": "28658:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28633:51:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28694:0:0"
									},
									"scope": 1195,
									"src": "28608:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "29047:117:0",
										"statements": [
											{
												"body": {
													"id": 1149,
													"nodeType": "Block",
													"src": "29101:56:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1143,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "29127:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1145,
																		"indexExpression": {
																			"id": 1144,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "29133:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29127:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1146,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "29137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1142,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "29116:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29116:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1148,
															"nodeType": "ExpressionStatement",
															"src": "29116:29:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "29078:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1136,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "29082:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "29082:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29078:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"initializationExpression": {
													"assignments": [
														1132
													],
													"declarations": [
														{
															"constant": false,
															"id": 1132,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1150,
															"src": "29063:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1131,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29063:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1134,
													"initialValue": {
														"hexValue": "30",
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "29063:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "29096:3:0",
														"subExpression": {
															"id": 1139,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "29096:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1141,
													"nodeType": "ExpressionStatement",
													"src": "29096:3:0"
												},
												"nodeType": "ForStatement",
												"src": "29058:99:0"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "28899:71:0",
										"text": " @dev Revokes multiple roles from a single account."
									},
									"functionSelector": "988360a3",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRoles",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "28997:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1124,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "28997:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1125,
													"nodeType": "ArrayTypeName",
													"src": "28997:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "29021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28996:41:0"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29047:0:0"
									},
									"scope": 1195,
									"src": "28976:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "29331:198:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1165,
																"name": "roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "29378:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29378:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1167,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "29392:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29392:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1162,
															"name": "InputHelpers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "29342:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InputHelpers_$1014_$",
																"typeString": "type(library InputHelpers)"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ensureInputLengthMatch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "29342:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29342:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "29342:66:0"
											},
											{
												"body": {
													"id": 1191,
													"nodeType": "Block",
													"src": "29462:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1183,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "29488:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1185,
																		"indexExpression": {
																			"id": 1184,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "29494:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29488:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1186,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "29498:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1188,
																		"indexExpression": {
																			"id": 1187,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "29507:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29498:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1182,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "29477:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29477:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1190,
															"nodeType": "ExpressionStatement",
															"src": "29477:33:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "29439:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1176,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "29443:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "29443:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29439:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1192,
												"initializationExpression": {
													"assignments": [
														1172
													],
													"declarations": [
														{
															"constant": false,
															"id": 1172,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1192,
															"src": "29424:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1171,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29424:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1174,
													"initialValue": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29436:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "29424:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "29457:3:0",
														"subExpression": {
															"id": 1179,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "29457:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ExpressionStatement",
													"src": "29457:3:0"
												},
												"nodeType": "ForStatement",
												"src": "29419:103:0"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "29172:64:0",
										"text": " @dev Revokes roles from a list of accounts."
									},
									"functionSelector": "18b2cde9",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRolesFromMany",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "roles",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "29271:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1154,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "29271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1155,
													"nodeType": "ArrayTypeName",
													"src": "29271:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "29295:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1157,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "29295:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1158,
													"nodeType": "ArrayTypeName",
													"src": "29295:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29270:51:0"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29331:0:0"
									},
									"scope": 1195,
									"src": "29242:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1196,
							"src": "27851:1681:0"
						}
					],
					"src": "702:28830:0"
				},
				"id": 0
			}
		}
	}
}